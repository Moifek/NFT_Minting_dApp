[{"/home/mmo/workspace/NFT_Minting_dApp/src/index.tsx":"1","/home/mmo/workspace/NFT_Minting_dApp/src/App.tsx":"2","/home/mmo/workspace/NFT_Minting_dApp/src/routes.ts":"3","/home/mmo/workspace/NFT_Minting_dApp/src/pages/PageNotFound/index.tsx":"4","/home/mmo/workspace/NFT_Minting_dApp/src/components/Layout/index.tsx":"5","/home/mmo/workspace/NFT_Minting_dApp/src/components/PageTitle/index.tsx":"6","/home/mmo/workspace/NFT_Minting_dApp/src/pages/Dashboard/index.tsx":"7","/home/mmo/workspace/NFT_Minting_dApp/src/pages/Transaction/index.tsx":"8","/home/mmo/workspace/NFT_Minting_dApp/src/config.tsx":"9","/home/mmo/workspace/NFT_Minting_dApp/src/pages/Home/index.tsx":"10","/home/mmo/workspace/NFT_Minting_dApp/src/pages/Dashboard/TopInfo.tsx":"11","/home/mmo/workspace/NFT_Minting_dApp/src/pages/Home/utils.ts":"12","/home/mmo/workspace/NFT_Minting_dApp/src/components/Layout/Navbar/index.tsx":"13","/home/mmo/workspace/NFT_Minting_dApp/src/pages/Dashboard/Actions/index.tsx":"14","/home/mmo/workspace/NFT_Minting_dApp/src/pages/Dashboard/Transactions/index.tsx":"15","/home/mmo/workspace/NFT_Minting_dApp/src/pages/Dashboard/Transactions/TransactionsList.tsx":"16","/home/mmo/workspace/NFT_Minting_dApp/src/apiRequests/index.tsx":"17","/home/mmo/workspace/NFT_Minting_dApp/src/pages/Dashboard/Transactions/txStatus.tsx":"18","/home/mmo/workspace/NFT_Minting_dApp/src/pages/Dashboard/Transactions/StatusIcon.tsx":"19"},{"size":206,"mtime":1650503538698,"results":"20","hashOfConfig":"21"},{"size":1449,"mtime":1650290856549,"results":"22","hashOfConfig":"21"},{"size":1128,"mtime":1650290856585,"results":"23","hashOfConfig":"21"},{"size":1080,"mtime":1650290856585,"results":"24","hashOfConfig":"21"},{"size":1016,"mtime":1650512330436,"results":"25","hashOfConfig":"21"},{"size":282,"mtime":1650290856565,"results":"26","hashOfConfig":"21"},{"size":769,"mtime":1650290856569,"results":"27","hashOfConfig":"21"},{"size":1569,"mtime":1650290856585,"results":"28","hashOfConfig":"21"},{"size":144,"mtime":1651452156962,"results":"29","hashOfConfig":"21"},{"size":9113,"mtime":1651539268761,"results":"30","hashOfConfig":"21"},{"size":822,"mtime":1650290856565,"results":"31","hashOfConfig":"21"},{"size":2294,"mtime":1651452156962,"results":"32","hashOfConfig":"21"},{"size":1245,"mtime":1650290856565,"results":"33","hashOfConfig":"21"},{"size":5710,"mtime":1650290856565,"results":"34","hashOfConfig":"21"},{"size":1591,"mtime":1650290856569,"results":"35","hashOfConfig":"21"},{"size":3845,"mtime":1650290856565,"results":"36","hashOfConfig":"21"},{"size":914,"mtime":1650729013254,"results":"37","hashOfConfig":"21"},{"size":140,"mtime":1650290856569,"results":"38","hashOfConfig":"21"},{"size":1190,"mtime":1650290856565,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1tv7v5q",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/mmo/workspace/NFT_Minting_dApp/src/index.tsx",[],["81","82"],"/home/mmo/workspace/NFT_Minting_dApp/src/App.tsx",[],"/home/mmo/workspace/NFT_Minting_dApp/src/routes.ts",[],"/home/mmo/workspace/NFT_Minting_dApp/src/pages/PageNotFound/index.tsx",[],"/home/mmo/workspace/NFT_Minting_dApp/src/components/Layout/index.tsx",[],"/home/mmo/workspace/NFT_Minting_dApp/src/components/PageTitle/index.tsx",[],"/home/mmo/workspace/NFT_Minting_dApp/src/pages/Dashboard/index.tsx",[],"/home/mmo/workspace/NFT_Minting_dApp/src/pages/Transaction/index.tsx",[],"/home/mmo/workspace/NFT_Minting_dApp/src/config.tsx",[],"/home/mmo/workspace/NFT_Minting_dApp/src/pages/Home/index.tsx",["83","84","85","86","87","88","89","90","91","92","93"],"/home/mmo/workspace/NFT_Minting_dApp/src/pages/Dashboard/TopInfo.tsx",[],"/home/mmo/workspace/NFT_Minting_dApp/src/pages/Home/utils.ts",["94","95","96","97"],"import {\n  ProxyProvider,\n  SmartContract,\n  Account,\n  parseUserKey,\n  UserSigner,\n  GasLimit,\n  Address,\n  ContractFunction,\n  Balance,\n  U32Value,\n  Transaction,\n  ISigner,\n  QueryResponse,\n} from \"@elrondnetwork/erdjs\";\n//import { Provider } from \"react\";\nimport data from \"./wallet.json\";\n\nlet LoggedUseraddress = \"\";\n\nexport const getMintTransaction = (\n  contractAddress: string,\n  baseGasLimit: number,\n  tokensAmount: number\n) => {\n  const tokens = tokensAmount || 1;\n  const tokenSellingPrice = \"500000000000000000\";\n  const contract = new SmartContract({\n    address: new Address(contractAddress),\n  });\n  return contract.call({\n    func: new ContractFunction(\"getNftPrice\"),\n    gasLimit: new GasLimit(\n      baseGasLimit + (baseGasLimit / 1.4) * (tokensAmount - 1)\n    ),\n    //args: [new U32Value(tokens)],\n    //value: Balance.fromString(tokenSellingPrice).times(tokens),\n  });\n};\n\nexport const commonTxOperations = async (\n  tx: Transaction,\n  account: Account,\n  signer: ISigner,\n  provider: ProxyProvider\n) => {\n  tx.setNonce(account.nonce);\n  account.incrementNonce();\n  signer.sign(tx);\n\n  await tx.send(provider);\n  await tx.awaitExecuted(provider);\n  const txHash = tx.getHash();\n\n  console.log(`Transaction: /transactions/${txHash}`);\n};\n\nexport const GetAddress = async (LoggedUserAddress: string) => {\n  LoggedUseraddress = LoggedUserAddress;\n};\nexport const prepareUserAccount = async (walletPemKey: string) => {\n  const userKey = parseUserKey(walletPemKey);\n  const address = userKey.generatePublicKey().toAddress();\n  return new Account(address);\n};\n\nexport const publicEndpointSetup = async (provider: ProxyProvider) => {\n  let keyFileObject = JSON.parse(JSON.stringify(data));\n  // Provider type based on initial configuration\n  let LoggedUserAddress = new Address(LoggedUseraddress);\n  let LoggedUserAccount = new Account(LoggedUserAddress);\n  let syncc = await LoggedUserAccount.sync(provider);\n  console.log(syncc);\n  const signer = UserSigner.fromWallet(keyFileObject, \"u!D?G8Tf48fYL28\");\n  return {\n    signer,\n    LoggedUserAccount,\n    provider,\n  };\n};\n\nexport const parseQueryResultString = (queryResponse: QueryResponse) => {\n  const resultBuff = Buffer.from(\n    queryResponse?.returnData?.[0],\n    'base64'\n  ).toString('utf8');\n  return resultBuff;\n};","/home/mmo/workspace/NFT_Minting_dApp/src/components/Layout/Navbar/index.tsx",[],"/home/mmo/workspace/NFT_Minting_dApp/src/pages/Dashboard/Actions/index.tsx",[],"/home/mmo/workspace/NFT_Minting_dApp/src/pages/Dashboard/Transactions/index.tsx",["98"],"import React from 'react';\nimport {\n  useGetAccountInfo,\n  DappUI,\n  transactionServices,\n  refreshAccount,\n  useGetNetworkConfig\n} from '@elrondnetwork/dapp-core';\nimport { faExchangeAlt } from '@fortawesome/free-solid-svg-icons';\nimport { getTransactions } from 'apiRequests';\nimport { contractAddress } from 'config';\nimport TransactionsList from './TransactionsList';\nimport { StateType } from './types';\n\nconst Transactions = () => {\n  const {\n    network: { apiAddress }\n  } = useGetNetworkConfig();\n  const { success, fail, hasActiveTransactions } =\n    transactionServices.useGetActiveTransactionsStatus();\n\n  const [state, setState] = React.useState<StateType>({\n    transactions: [],\n    transactionsFetched: undefined\n  });\n  const account = useGetAccountInfo();\n\n  const fetchData = () => {\n    if (success || fail || !hasActiveTransactions) {\n      getTransactions({\n        apiAddress,\n        address: account.address,\n        timeout: 3000,\n        contractAddress\n      }).then(({ data, success: transactionsFetched }) => {\n        refreshAccount();\n        setState({\n          transactions: data,\n          transactionsFetched\n        });\n      });\n    }\n  };\n\n  React.useEffect(fetchData, [success, fail, hasActiveTransactions]);\n\n  const { transactions } = state;\n\n  return transactions.length > 0 ? (\n    <TransactionsList transactions={transactions} />\n  ) : (\n    <div className='my-5'>\n      <DappUI.PageState\n        icon={faExchangeAlt}\n        className='text-muted fa-3x'\n        title='No Transactions'\n      />\n    </div>\n  );\n};\n\nexport default Transactions;\n","/home/mmo/workspace/NFT_Minting_dApp/src/pages/Dashboard/Transactions/TransactionsList.tsx",[],"/home/mmo/workspace/NFT_Minting_dApp/src/apiRequests/index.tsx",[],"/home/mmo/workspace/NFT_Minting_dApp/src/pages/Dashboard/Transactions/txStatus.tsx",[],"/home/mmo/workspace/NFT_Minting_dApp/src/pages/Dashboard/Transactions/StatusIcon.tsx",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":8,"column":17,"nodeType":"105","messageId":"106","endLine":8,"endColumn":30},{"ruleId":"103","severity":1,"message":"107","line":22,"column":3,"nodeType":"105","messageId":"106","endLine":22,"endColumn":8},{"ruleId":"103","severity":1,"message":"108","line":23,"column":3,"nodeType":"105","messageId":"106","endLine":23,"endColumn":16},{"ruleId":"103","severity":1,"message":"109","line":27,"column":10,"nodeType":"105","messageId":"106","endLine":27,"endColumn":30},{"ruleId":"103","severity":1,"message":"110","line":37,"column":3,"nodeType":"105","messageId":"106","endLine":37,"endColumn":21},{"ruleId":"103","severity":1,"message":"111","line":42,"column":10,"nodeType":"105","messageId":"106","endLine":42,"endColumn":14},{"ruleId":"103","severity":1,"message":"112","line":43,"column":10,"nodeType":"105","messageId":"106","endLine":43,"endColumn":16},{"ruleId":"103","severity":1,"message":"113","line":65,"column":10,"nodeType":"105","messageId":"106","endLine":65,"endColumn":15},{"ruleId":"114","severity":1,"message":"115","line":88,"column":30,"nodeType":"116","endLine":88,"endColumn":68,"suggestions":"117"},{"ruleId":"103","severity":1,"message":"118","line":121,"column":9,"nodeType":"105","messageId":"106","endLine":121,"endColumn":22},{"ruleId":"103","severity":1,"message":"119","line":137,"column":9,"nodeType":"105","messageId":"106","endLine":137,"endColumn":17},{"ruleId":"103","severity":1,"message":"120","line":10,"column":3,"nodeType":"105","messageId":"106","endLine":10,"endColumn":10},{"ruleId":"103","severity":1,"message":"121","line":11,"column":3,"nodeType":"105","messageId":"106","endLine":11,"endColumn":11},{"ruleId":"103","severity":1,"message":"122","line":26,"column":9,"nodeType":"105","messageId":"106","endLine":26,"endColumn":15},{"ruleId":"103","severity":1,"message":"123","line":27,"column":9,"nodeType":"105","messageId":"106","endLine":27,"endColumn":26},{"ruleId":"114","severity":1,"message":"115","line":45,"column":30,"nodeType":"116","endLine":45,"endColumn":68,"suggestions":"124"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"@typescript-eslint/no-unused-vars","'AxiosResponse' is defined but never used.","Identifier","unusedVar","'Nonce' is defined but never used.","'QueryResponse' is defined but never used.","'TransactionOnNetwork' is defined but never used.","'commonTxOperations' is defined but never used.","'sign' is defined but never used.","'config' is defined but never used.","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'account.address' and 'apiAddress'. Either include them or remove the dependency array.","ArrayExpression",["127"],"'networkConfig' is assigned a value but never used.","'response' is assigned a value but never used.","'Balance' is defined but never used.","'U32Value' is defined but never used.","'tokens' is assigned a value but never used.","'tokenSellingPrice' is assigned a value but never used.",["128"],"no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"129","fix":"131"},"Update the dependencies array to be: [success, fail, hasActiveTransactions, apiAddress, account.address]",{"range":"132","text":"133"},{"range":"134","text":"133"},[2554,2592],"[success, fail, hasActiveTransactions, apiAddress, account.address]",[1209,1247]]