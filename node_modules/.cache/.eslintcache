[{"C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\index.tsx":"1","C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\App.tsx":"2","C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\routes.ts":"3","C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\components\\Layout\\index.tsx":"4","C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\pages\\PageNotFound\\index.tsx":"5","C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\config.tsx":"6","C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\pages\\Transaction\\index.tsx":"7","C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\components\\PageTitle\\index.tsx":"8","C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\pages\\Dashboard\\index.tsx":"9","C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\pages\\Home\\index.tsx":"10","C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\pages\\Home\\utils.ts":"11","C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\components\\Layout\\Navbar\\index.tsx":"12","C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\apiRequests\\index.tsx":"13","C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\pages\\Dashboard\\TopInfo.tsx":"14","C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\pages\\Dashboard\\Transactions\\index.tsx":"15","C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\pages\\Dashboard\\Actions\\index.tsx":"16","C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\pages\\Dashboard\\Transactions\\TransactionsList.tsx":"17","C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\pages\\Dashboard\\Transactions\\StatusIcon.tsx":"18","C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\pages\\Dashboard\\Transactions\\txStatus.tsx":"19"},{"size":216,"mtime":1652097550356,"results":"20","hashOfConfig":"21"},{"size":1501,"mtime":1652097550317,"results":"22","hashOfConfig":"21"},{"size":1178,"mtime":1652097550494,"results":"23","hashOfConfig":"21"},{"size":1051,"mtime":1652097550347,"results":"24","hashOfConfig":"21"},{"size":1110,"mtime":1652097550477,"results":"25","hashOfConfig":"21"},{"size":204,"mtime":1652097550355,"results":"26","hashOfConfig":"21"},{"size":1627,"mtime":1652097550489,"results":"27","hashOfConfig":"21"},{"size":294,"mtime":1652097550353,"results":"28","hashOfConfig":"21"},{"size":797,"mtime":1652097550381,"results":"29","hashOfConfig":"21"},{"size":9406,"mtime":1652099736799,"results":"30","hashOfConfig":"21"},{"size":4075,"mtime":1652097550448,"results":"31","hashOfConfig":"21"},{"size":1288,"mtime":1652097550347,"results":"32","hashOfConfig":"21"},{"size":956,"mtime":1652097550320,"results":"33","hashOfConfig":"21"},{"size":849,"mtime":1652097550362,"results":"34","hashOfConfig":"21"},{"size":1653,"mtime":1652097550377,"results":"35","hashOfConfig":"21"},{"size":5903,"mtime":1652097550360,"results":"36","hashOfConfig":"21"},{"size":3964,"mtime":1652097550363,"results":"37","hashOfConfig":"21"},{"size":1239,"mtime":1652097550362,"results":"38","hashOfConfig":"21"},{"size":148,"mtime":1652097550378,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"u3pekd",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\index.tsx",[],["81","82"],"C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\App.tsx",[],"C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\routes.ts",[],"C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\components\\Layout\\index.tsx",[],"C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\pages\\PageNotFound\\index.tsx",[],"C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\config.tsx",[],"C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\pages\\Transaction\\index.tsx",[],"C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\components\\PageTitle\\index.tsx",[],"C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\pages\\Dashboard\\index.tsx",[],"C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\pages\\Home\\index.tsx",["83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102"],"C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\pages\\Home\\utils.ts",["103","104","105","106","107","108","109","110","111","112"],"import {\r\n  ProxyProvider,\r\n  SmartContract,\r\n  Account,\r\n  parseUserKey,\r\n  UserSigner,\r\n  GasLimit,\r\n  Address,\r\n  ContractFunction,\r\n  Balance,\r\n  U32Value,\r\n  Transaction,\r\n  ISigner,\r\n  QueryResponse,\r\n  ErrInvalidTxSignReturnValue,\r\n} from \"@elrondnetwork/erdjs\";\r\nimport {\r\n  transactionServices,\r\n  useGetAccountInfo,\r\n  useGetNetworkConfig,\r\n  refreshAccount,\r\n} from \"@elrondnetwork/dapp-core\";\r\nimport { Provider } from \"react\";\r\n//import { Provider } from \"react\";\r\nimport data from \"./wallet.json\";\r\nimport axios, { AxiosResponse } from \"axios\";\r\nimport { contractAddress, GateWay } from \"../../config\";\r\n\r\n\r\nlet LoggedUseraddress = \"\";\r\n\r\n\r\nexport const getMintTransaction = (\r\n  contractAddress: string,\r\n  baseGasLimit: number,\r\n  tokensAmount: number,\r\n  tokenSellingPrice: number,\r\n) => {\r\n  const contract = new SmartContract({\r\n    address: new Address(contractAddress),\r\n  });\r\n  return contract.call({\r\n    func: new ContractFunction(\"mint\"),\r\n    gasLimit: new GasLimit(\r\n      baseGasLimit * (tokensAmount)\r\n    ),\r\n    args: [new U32Value(tokensAmount)],\r\n    value: Balance.fromString(tokenSellingPrice.toString()).times(tokensAmount),\r\n  });\r\n};\r\n\r\nexport const GetPrice = (\r\n  contractAddress: string,\r\n  baseGasLimit: number,\r\n) => {\r\n  const contract = new SmartContract({\r\n    address: new Address(contractAddress),\r\n  });\r\n  return contract.call({\r\n    func: new ContractFunction(\"getNftPrice\"),\r\n    gasLimit: new GasLimit(\r\n      baseGasLimit\r\n    )\r\n  });\r\n};\r\n\r\nexport const GetAddress = async (LoggedUserAddress: string) => {\r\n  LoggedUseraddress = LoggedUserAddress;\r\n};\r\nexport const prepareUserAccount = async (walletPemKey: string) => {\r\n  const userKey = parseUserKey(walletPemKey);\r\n  const address = userKey.generatePublicKey().toAddress();\r\n  return new Account(address);\r\n};\r\n\r\nexport const publicEndpointSetup = async (provider: ProxyProvider) => {\r\n  let keyFileObject = JSON.parse(JSON.stringify(data));\r\n  // Provider type based on initial configuration\r\n  let LoggedUserAddress = new Address(LoggedUseraddress);\r\n  let LoggedUserAccount = new Account(LoggedUserAddress);\r\n  let syncc = await LoggedUserAccount.sync(provider);\r\n  console.log(syncc);\r\n  const signer = UserSigner.fromWallet(keyFileObject, \"u!D?G8Tf48fYL28\");\r\n  return {\r\n    signer,\r\n    LoggedUserAccount,\r\n    provider,\r\n  };\r\n};\r\n\r\nexport const MintTransaction = async (\r\n    price: number, tokens: number, signer: ISigner, UserAccount: Account, provider: ProxyProvider\r\n    ) => {\r\n    let mintx = getMintTransaction(\r\n      contractAddress,\r\n      18000000,\r\n      tokens,\r\n      price,\r\n    );\r\n    const { sendTransactions } = transactionServices; \r\n    const sessionId = await sendTransactions({\r\n      transactions: mintx,\r\n      transactionsDisplayInfo: {\r\n        processingMessage: 'Processing Mint transaction',\r\n        errorMessage: 'An error has occured during Mint',\r\n        successMessage: 'Mint transaction successful'\r\n      },\r\n    });\r\n    const mnttxHash = mintx.getHash();\r\n    return mnttxHash;\r\n}\r\n\r\nexport const PriceTransaction = async (\r\n  provider: ProxyProvider\r\n  ) => {\r\n    let pricetx = GetPrice(\r\n      contractAddress,\r\n      18000000,\r\n    );\r\n    const { sendTransactions } = transactionServices; \r\n    const sessionId = await sendTransactions({\r\n      transactions: pricetx,\r\n      transactionsDisplayInfo: {\r\n        processingMessage: 'Processing Mint transaction',\r\n        errorMessage: 'An error has occured during Mint',\r\n        successMessage: 'Mint transaction successful'\r\n      },\r\n    });\r\n    const txHash = pricetx.getHash();\r\n    axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\r\n    console.log(`Transaction: https://devnet-explorer.elrond.com/transactions/${txHash}`);\r\n    let explorer = `${GateWay}/transaction/${txHash}?withResults=true`;\r\n    let res = await axios.get(explorer);\r\n    let value = res.data.data.transaction.smartContractResults[0].data;\r\n    console.log(value);\r\n    var result = value.substring(value.lastIndexOf(\"@\") + 1);\r\n    return parseInt(result, 16);\r\n  }","C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\components\\Layout\\Navbar\\index.tsx",[],"C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\apiRequests\\index.tsx",[],"C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\pages\\Dashboard\\TopInfo.tsx",[],"C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\pages\\Dashboard\\Transactions\\index.tsx",["113"],"import React from 'react';\r\nimport {\r\n  useGetAccountInfo,\r\n  DappUI,\r\n  transactionServices,\r\n  refreshAccount,\r\n  useGetNetworkConfig\r\n} from '@elrondnetwork/dapp-core';\r\nimport { faExchangeAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { getTransactions } from 'apiRequests';\r\nimport { contractAddress } from 'config';\r\nimport TransactionsList from './TransactionsList';\r\nimport { StateType } from './types';\r\n\r\nconst Transactions = () => {\r\n  const {\r\n    network: { apiAddress }\r\n  } = useGetNetworkConfig();\r\n  const { success, fail, hasActiveTransactions } =\r\n    transactionServices.useGetActiveTransactionsStatus();\r\n\r\n  const [state, setState] = React.useState<StateType>({\r\n    transactions: [],\r\n    transactionsFetched: undefined\r\n  });\r\n  const account = useGetAccountInfo();\r\n\r\n  const fetchData = () => {\r\n    if (success || fail || !hasActiveTransactions) {\r\n      getTransactions({\r\n        apiAddress,\r\n        address: account.address,\r\n        timeout: 3000,\r\n        contractAddress\r\n      }).then(({ data, success: transactionsFetched }) => {\r\n        refreshAccount();\r\n        setState({\r\n          transactions: data,\r\n          transactionsFetched\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  React.useEffect(fetchData, [success, fail, hasActiveTransactions]);\r\n\r\n  const { transactions } = state;\r\n\r\n  return transactions.length > 0 ? (\r\n    <TransactionsList transactions={transactions} />\r\n  ) : (\r\n    <div className='my-5'>\r\n      <DappUI.PageState\r\n        icon={faExchangeAlt}\r\n        className='text-muted fa-3x'\r\n        title='No Transactions'\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transactions;\r\n","C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\pages\\Dashboard\\Actions\\index.tsx",[],"C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\pages\\Dashboard\\Transactions\\TransactionsList.tsx",[],"C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\pages\\Dashboard\\Transactions\\StatusIcon.tsx",[],"C:\\Users\\Mmo-Omen\\Documents\\GitHub\\NFT_Minting_dApp\\src\\pages\\Dashboard\\Transactions\\txStatus.tsx",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":8,"column":8,"nodeType":"120","messageId":"121","endLine":8,"endColumn":13},{"ruleId":"118","severity":1,"message":"122","line":8,"column":17,"nodeType":"120","messageId":"121","endLine":8,"endColumn":30},{"ruleId":"118","severity":1,"message":"123","line":12,"column":8,"nodeType":"120","messageId":"121","endLine":12,"endColumn":17},{"ruleId":"118","severity":1,"message":"124","line":20,"column":3,"nodeType":"120","messageId":"121","endLine":20,"endColumn":19},{"ruleId":"118","severity":1,"message":"125","line":23,"column":3,"nodeType":"120","messageId":"121","endLine":23,"endColumn":8},{"ruleId":"118","severity":1,"message":"126","line":24,"column":3,"nodeType":"120","messageId":"121","endLine":24,"endColumn":16},{"ruleId":"118","severity":1,"message":"127","line":28,"column":10,"nodeType":"120","messageId":"121","endLine":28,"endColumn":30},{"ruleId":"118","severity":1,"message":"128","line":30,"column":26,"nodeType":"120","messageId":"121","endLine":30,"endColumn":33},{"ruleId":"118","severity":1,"message":"129","line":37,"column":3,"nodeType":"120","messageId":"121","endLine":37,"endColumn":21},{"ruleId":"118","severity":1,"message":"130","line":40,"column":3,"nodeType":"120","messageId":"121","endLine":40,"endColumn":11},{"ruleId":"118","severity":1,"message":"131","line":42,"column":3,"nodeType":"120","messageId":"121","endLine":42,"endColumn":19},{"ruleId":"118","severity":1,"message":"132","line":67,"column":10,"nodeType":"120","messageId":"121","endLine":67,"endColumn":15},{"ruleId":"133","severity":1,"message":"134","line":96,"column":30,"nodeType":"135","endLine":96,"endColumn":68,"suggestions":"136"},{"ruleId":"118","severity":1,"message":"137","line":111,"column":12,"nodeType":"120","messageId":"121","endLine":111,"endColumn":39},{"ruleId":"118","severity":1,"message":"138","line":129,"column":9,"nodeType":"120","messageId":"121","endLine":129,"endColumn":22},{"ruleId":"139","severity":1,"message":"140","line":226,"column":36,"nodeType":"141","messageId":"142","endLine":226,"endColumn":38},{"ruleId":"139","severity":1,"message":"143","line":240,"column":39,"nodeType":"141","messageId":"142","endLine":240,"endColumn":41},{"ruleId":"139","severity":1,"message":"143","line":257,"column":26,"nodeType":"141","messageId":"142","endLine":257,"endColumn":28},{"ruleId":"139","severity":1,"message":"143","line":259,"column":32,"nodeType":"141","messageId":"142","endLine":259,"endColumn":34},{"ruleId":"139","severity":1,"message":"143","line":262,"column":32,"nodeType":"141","messageId":"142","endLine":262,"endColumn":34},{"ruleId":"118","severity":1,"message":"144","line":12,"column":3,"nodeType":"120","messageId":"121","endLine":12,"endColumn":14},{"ruleId":"118","severity":1,"message":"126","line":14,"column":3,"nodeType":"120","messageId":"121","endLine":14,"endColumn":16},{"ruleId":"118","severity":1,"message":"145","line":15,"column":3,"nodeType":"120","messageId":"121","endLine":15,"endColumn":30},{"ruleId":"118","severity":1,"message":"146","line":19,"column":3,"nodeType":"120","messageId":"121","endLine":19,"endColumn":20},{"ruleId":"118","severity":1,"message":"147","line":20,"column":3,"nodeType":"120","messageId":"121","endLine":20,"endColumn":22},{"ruleId":"118","severity":1,"message":"148","line":21,"column":3,"nodeType":"120","messageId":"121","endLine":21,"endColumn":17},{"ruleId":"118","severity":1,"message":"149","line":23,"column":10,"nodeType":"120","messageId":"121","endLine":23,"endColumn":18},{"ruleId":"118","severity":1,"message":"122","line":26,"column":17,"nodeType":"120","messageId":"121","endLine":26,"endColumn":30},{"ruleId":"118","severity":1,"message":"150","line":101,"column":11,"nodeType":"120","messageId":"121","endLine":101,"endColumn":20},{"ruleId":"118","severity":1,"message":"150","line":121,"column":11,"nodeType":"120","messageId":"121","endLine":121,"endColumn":20},{"ruleId":"133","severity":1,"message":"134","line":45,"column":30,"nodeType":"135","endLine":45,"endColumn":68,"suggestions":"151"},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'AxiosResponse' is defined but never used.","'BigNumber' is defined but never used.","'ContractFunction' is defined but never used.","'Nonce' is defined but never used.","'QueryResponse' is defined but never used.","'TransactionOnNetwork' is defined but never used.","'GateWay' is defined but never used.","'getMintTransaction' is defined but never used.","'GetPrice' is defined but never used.","'PriceTransaction' is defined but never used.","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'account.address' and 'apiAddress'. Either include them or remove the dependency array.","ArrayExpression",["154"],"'createSmartContractInstance' is defined but never used.","'networkConfig' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'Transaction' is defined but never used.","'ErrInvalidTxSignReturnValue' is defined but never used.","'useGetAccountInfo' is defined but never used.","'useGetNetworkConfig' is defined but never used.","'refreshAccount' is defined but never used.","'Provider' is defined but never used.","'sessionId' is assigned a value but never used.",["155"],"no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"156","fix":"158"},"Update the dependencies array to be: [success, fail, hasActiveTransactions, apiAddress, account.address]",{"range":"159","text":"160"},{"range":"161","text":"160"},[2589,2627],"[success, fail, hasActiveTransactions, apiAddress, account.address]",[1253,1291]]