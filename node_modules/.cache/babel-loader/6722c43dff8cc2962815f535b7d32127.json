{"ast":null,"code":"/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\"); // Common aliases\n\n\nvar $Reader = $protobuf.Reader,\n    $Writer = $protobuf.Writer,\n    $util = $protobuf.util; // Exported root namespace\n\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.proto = function () {\n  /**\r\n   * Namespace proto.\r\n   * @exports proto\r\n   * @namespace\r\n   */\n  var proto = {};\n\n  proto.Transaction = function () {\n    /**\r\n     * Properties of a Transaction.\r\n     * @memberof proto\r\n     * @interface ITransaction\r\n     * @property {number|Long|null} [Nonce] Transaction Nonce\r\n     * @property {Uint8Array|null} [Value] Transaction Value\r\n     * @property {Uint8Array|null} [RcvAddr] Transaction RcvAddr\r\n     * @property {Uint8Array|null} [RcvUserName] Transaction RcvUserName\r\n     * @property {Uint8Array|null} [SndAddr] Transaction SndAddr\r\n     * @property {Uint8Array|null} [SndUserName] Transaction SndUserName\r\n     * @property {number|Long|null} [GasPrice] Transaction GasPrice\r\n     * @property {number|Long|null} [GasLimit] Transaction GasLimit\r\n     * @property {Uint8Array|null} [Data] Transaction Data\r\n     * @property {Uint8Array|null} [ChainID] Transaction ChainID\r\n     * @property {number|null} [Version] Transaction Version\r\n     * @property {Uint8Array|null} [Signature] Transaction Signature\r\n     * @property {number|null} [Options] Transaction Options\r\n     */\n\n    /**\r\n     * Constructs a new Transaction.\r\n     * @memberof proto\r\n     * @classdesc Represents a Transaction.\r\n     * @implements ITransaction\r\n     * @constructor\r\n     * @param {proto.ITransaction=} [properties] Properties to set\r\n     */\n    function Transaction(properties) {\n      if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n    }\n    /**\r\n     * Transaction Nonce.\r\n     * @member {number|Long} Nonce\r\n     * @memberof proto.Transaction\r\n     * @instance\r\n     */\n\n\n    Transaction.prototype.Nonce = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n    /**\r\n     * Transaction Value.\r\n     * @member {Uint8Array} Value\r\n     * @memberof proto.Transaction\r\n     * @instance\r\n     */\n\n    Transaction.prototype.Value = $util.newBuffer([]);\n    /**\r\n     * Transaction RcvAddr.\r\n     * @member {Uint8Array} RcvAddr\r\n     * @memberof proto.Transaction\r\n     * @instance\r\n     */\n\n    Transaction.prototype.RcvAddr = $util.newBuffer([]);\n    /**\r\n     * Transaction RcvUserName.\r\n     * @member {Uint8Array} RcvUserName\r\n     * @memberof proto.Transaction\r\n     * @instance\r\n     */\n\n    Transaction.prototype.RcvUserName = $util.newBuffer([]);\n    /**\r\n     * Transaction SndAddr.\r\n     * @member {Uint8Array} SndAddr\r\n     * @memberof proto.Transaction\r\n     * @instance\r\n     */\n\n    Transaction.prototype.SndAddr = $util.newBuffer([]);\n    /**\r\n     * Transaction SndUserName.\r\n     * @member {Uint8Array} SndUserName\r\n     * @memberof proto.Transaction\r\n     * @instance\r\n     */\n\n    Transaction.prototype.SndUserName = $util.newBuffer([]);\n    /**\r\n     * Transaction GasPrice.\r\n     * @member {number|Long} GasPrice\r\n     * @memberof proto.Transaction\r\n     * @instance\r\n     */\n\n    Transaction.prototype.GasPrice = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n    /**\r\n     * Transaction GasLimit.\r\n     * @member {number|Long} GasLimit\r\n     * @memberof proto.Transaction\r\n     * @instance\r\n     */\n\n    Transaction.prototype.GasLimit = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n    /**\r\n     * Transaction Data.\r\n     * @member {Uint8Array} Data\r\n     * @memberof proto.Transaction\r\n     * @instance\r\n     */\n\n    Transaction.prototype.Data = $util.newBuffer([]);\n    /**\r\n     * Transaction ChainID.\r\n     * @member {Uint8Array} ChainID\r\n     * @memberof proto.Transaction\r\n     * @instance\r\n     */\n\n    Transaction.prototype.ChainID = $util.newBuffer([]);\n    /**\r\n     * Transaction Version.\r\n     * @member {number} Version\r\n     * @memberof proto.Transaction\r\n     * @instance\r\n     */\n\n    Transaction.prototype.Version = 0;\n    /**\r\n     * Transaction Signature.\r\n     * @member {Uint8Array} Signature\r\n     * @memberof proto.Transaction\r\n     * @instance\r\n     */\n\n    Transaction.prototype.Signature = $util.newBuffer([]);\n    /**\r\n     * Transaction Options.\r\n     * @member {number} Options\r\n     * @memberof proto.Transaction\r\n     * @instance\r\n     */\n\n    Transaction.prototype.Options = 0;\n    /**\r\n     * Creates a new Transaction instance using the specified properties.\r\n     * @function create\r\n     * @memberof proto.Transaction\r\n     * @static\r\n     * @param {proto.ITransaction=} [properties] Properties to set\r\n     * @returns {proto.Transaction} Transaction instance\r\n     */\n\n    Transaction.create = function create(properties) {\n      return new Transaction(properties);\n    };\n    /**\r\n     * Encodes the specified Transaction message. Does not implicitly {@link proto.Transaction.verify|verify} messages.\r\n     * @function encode\r\n     * @memberof proto.Transaction\r\n     * @static\r\n     * @param {proto.ITransaction} message Transaction message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\n\n\n    Transaction.encode = function encode(message, writer) {\n      if (!writer) writer = $Writer.create();\n      if (message.Nonce != null && Object.hasOwnProperty.call(message, \"Nonce\")) writer.uint32(\n      /* id 1, wireType 0 =*/\n      8).uint64(message.Nonce);\n      if (message.Value != null && Object.hasOwnProperty.call(message, \"Value\")) writer.uint32(\n      /* id 2, wireType 2 =*/\n      18).bytes(message.Value);\n      if (message.RcvAddr != null && Object.hasOwnProperty.call(message, \"RcvAddr\")) writer.uint32(\n      /* id 3, wireType 2 =*/\n      26).bytes(message.RcvAddr);\n      if (message.RcvUserName != null && Object.hasOwnProperty.call(message, \"RcvUserName\")) writer.uint32(\n      /* id 4, wireType 2 =*/\n      34).bytes(message.RcvUserName);\n      if (message.SndAddr != null && Object.hasOwnProperty.call(message, \"SndAddr\")) writer.uint32(\n      /* id 5, wireType 2 =*/\n      42).bytes(message.SndAddr);\n      if (message.SndUserName != null && Object.hasOwnProperty.call(message, \"SndUserName\")) writer.uint32(\n      /* id 6, wireType 2 =*/\n      50).bytes(message.SndUserName);\n      if (message.GasPrice != null && Object.hasOwnProperty.call(message, \"GasPrice\")) writer.uint32(\n      /* id 7, wireType 0 =*/\n      56).uint64(message.GasPrice);\n      if (message.GasLimit != null && Object.hasOwnProperty.call(message, \"GasLimit\")) writer.uint32(\n      /* id 8, wireType 0 =*/\n      64).uint64(message.GasLimit);\n      if (message.Data != null && Object.hasOwnProperty.call(message, \"Data\")) writer.uint32(\n      /* id 9, wireType 2 =*/\n      74).bytes(message.Data);\n      if (message.ChainID != null && Object.hasOwnProperty.call(message, \"ChainID\")) writer.uint32(\n      /* id 10, wireType 2 =*/\n      82).bytes(message.ChainID);\n      if (message.Version != null && Object.hasOwnProperty.call(message, \"Version\")) writer.uint32(\n      /* id 11, wireType 0 =*/\n      88).uint32(message.Version);\n      if (message.Signature != null && Object.hasOwnProperty.call(message, \"Signature\")) writer.uint32(\n      /* id 12, wireType 2 =*/\n      98).bytes(message.Signature);\n      if (message.Options != null && Object.hasOwnProperty.call(message, \"Options\")) writer.uint32(\n      /* id 13, wireType 0 =*/\n      104).uint32(message.Options);\n      return writer;\n    };\n    /**\r\n     * Encodes the specified Transaction message, length delimited. Does not implicitly {@link proto.Transaction.verify|verify} messages.\r\n     * @function encodeDelimited\r\n     * @memberof proto.Transaction\r\n     * @static\r\n     * @param {proto.ITransaction} message Transaction message or plain object to encode\r\n     * @param {$protobuf.Writer} [writer] Writer to encode to\r\n     * @returns {$protobuf.Writer} Writer\r\n     */\n\n\n    Transaction.encodeDelimited = function encodeDelimited(message, writer) {\n      return this.encode(message, writer).ldelim();\n    };\n    /**\r\n     * Decodes a Transaction message from the specified reader or buffer.\r\n     * @function decode\r\n     * @memberof proto.Transaction\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @param {number} [length] Message length if known beforehand\r\n     * @returns {proto.Transaction} Transaction\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\n\n\n    Transaction.decode = function decode(reader, length) {\n      if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n      var end = length === undefined ? reader.len : reader.pos + length,\n          message = new $root.proto.Transaction();\n\n      while (reader.pos < end) {\n        var tag = reader.uint32();\n\n        switch (tag >>> 3) {\n          case 1:\n            message.Nonce = reader.uint64();\n            break;\n\n          case 2:\n            message.Value = reader.bytes();\n            break;\n\n          case 3:\n            message.RcvAddr = reader.bytes();\n            break;\n\n          case 4:\n            message.RcvUserName = reader.bytes();\n            break;\n\n          case 5:\n            message.SndAddr = reader.bytes();\n            break;\n\n          case 6:\n            message.SndUserName = reader.bytes();\n            break;\n\n          case 7:\n            message.GasPrice = reader.uint64();\n            break;\n\n          case 8:\n            message.GasLimit = reader.uint64();\n            break;\n\n          case 9:\n            message.Data = reader.bytes();\n            break;\n\n          case 10:\n            message.ChainID = reader.bytes();\n            break;\n\n          case 11:\n            message.Version = reader.uint32();\n            break;\n\n          case 12:\n            message.Signature = reader.bytes();\n            break;\n\n          case 13:\n            message.Options = reader.uint32();\n            break;\n\n          default:\n            reader.skipType(tag & 7);\n            break;\n        }\n      }\n\n      return message;\n    };\n    /**\r\n     * Decodes a Transaction message from the specified reader or buffer, length delimited.\r\n     * @function decodeDelimited\r\n     * @memberof proto.Transaction\r\n     * @static\r\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n     * @returns {proto.Transaction} Transaction\r\n     * @throws {Error} If the payload is not a reader or valid buffer\r\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n     */\n\n\n    Transaction.decodeDelimited = function decodeDelimited(reader) {\n      if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n      return this.decode(reader, reader.uint32());\n    };\n    /**\r\n     * Verifies a Transaction message.\r\n     * @function verify\r\n     * @memberof proto.Transaction\r\n     * @static\r\n     * @param {Object.<string,*>} message Plain object to verify\r\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n     */\n\n\n    Transaction.verify = function verify(message) {\n      if (typeof message !== \"object\" || message === null) return \"object expected\";\n      if (message.Nonce != null && message.hasOwnProperty(\"Nonce\")) if (!$util.isInteger(message.Nonce) && !(message.Nonce && $util.isInteger(message.Nonce.low) && $util.isInteger(message.Nonce.high))) return \"Nonce: integer|Long expected\";\n      if (message.Value != null && message.hasOwnProperty(\"Value\")) if (!(message.Value && typeof message.Value.length === \"number\" || $util.isString(message.Value))) return \"Value: buffer expected\";\n      if (message.RcvAddr != null && message.hasOwnProperty(\"RcvAddr\")) if (!(message.RcvAddr && typeof message.RcvAddr.length === \"number\" || $util.isString(message.RcvAddr))) return \"RcvAddr: buffer expected\";\n      if (message.RcvUserName != null && message.hasOwnProperty(\"RcvUserName\")) if (!(message.RcvUserName && typeof message.RcvUserName.length === \"number\" || $util.isString(message.RcvUserName))) return \"RcvUserName: buffer expected\";\n      if (message.SndAddr != null && message.hasOwnProperty(\"SndAddr\")) if (!(message.SndAddr && typeof message.SndAddr.length === \"number\" || $util.isString(message.SndAddr))) return \"SndAddr: buffer expected\";\n      if (message.SndUserName != null && message.hasOwnProperty(\"SndUserName\")) if (!(message.SndUserName && typeof message.SndUserName.length === \"number\" || $util.isString(message.SndUserName))) return \"SndUserName: buffer expected\";\n      if (message.GasPrice != null && message.hasOwnProperty(\"GasPrice\")) if (!$util.isInteger(message.GasPrice) && !(message.GasPrice && $util.isInteger(message.GasPrice.low) && $util.isInteger(message.GasPrice.high))) return \"GasPrice: integer|Long expected\";\n      if (message.GasLimit != null && message.hasOwnProperty(\"GasLimit\")) if (!$util.isInteger(message.GasLimit) && !(message.GasLimit && $util.isInteger(message.GasLimit.low) && $util.isInteger(message.GasLimit.high))) return \"GasLimit: integer|Long expected\";\n      if (message.Data != null && message.hasOwnProperty(\"Data\")) if (!(message.Data && typeof message.Data.length === \"number\" || $util.isString(message.Data))) return \"Data: buffer expected\";\n      if (message.ChainID != null && message.hasOwnProperty(\"ChainID\")) if (!(message.ChainID && typeof message.ChainID.length === \"number\" || $util.isString(message.ChainID))) return \"ChainID: buffer expected\";\n      if (message.Version != null && message.hasOwnProperty(\"Version\")) if (!$util.isInteger(message.Version)) return \"Version: integer expected\";\n      if (message.Signature != null && message.hasOwnProperty(\"Signature\")) if (!(message.Signature && typeof message.Signature.length === \"number\" || $util.isString(message.Signature))) return \"Signature: buffer expected\";\n      if (message.Options != null && message.hasOwnProperty(\"Options\")) if (!$util.isInteger(message.Options)) return \"Options: integer expected\";\n      return null;\n    };\n    /**\r\n     * Creates a Transaction message from a plain object. Also converts values to their respective internal types.\r\n     * @function fromObject\r\n     * @memberof proto.Transaction\r\n     * @static\r\n     * @param {Object.<string,*>} object Plain object\r\n     * @returns {proto.Transaction} Transaction\r\n     */\n\n\n    Transaction.fromObject = function fromObject(object) {\n      if (object instanceof $root.proto.Transaction) return object;\n      var message = new $root.proto.Transaction();\n      if (object.Nonce != null) if ($util.Long) (message.Nonce = $util.Long.fromValue(object.Nonce)).unsigned = true;else if (typeof object.Nonce === \"string\") message.Nonce = parseInt(object.Nonce, 10);else if (typeof object.Nonce === \"number\") message.Nonce = object.Nonce;else if (typeof object.Nonce === \"object\") message.Nonce = new $util.LongBits(object.Nonce.low >>> 0, object.Nonce.high >>> 0).toNumber(true);\n      if (object.Value != null) if (typeof object.Value === \"string\") $util.base64.decode(object.Value, message.Value = $util.newBuffer($util.base64.length(object.Value)), 0);else if (object.Value.length) message.Value = object.Value;\n      if (object.RcvAddr != null) if (typeof object.RcvAddr === \"string\") $util.base64.decode(object.RcvAddr, message.RcvAddr = $util.newBuffer($util.base64.length(object.RcvAddr)), 0);else if (object.RcvAddr.length) message.RcvAddr = object.RcvAddr;\n      if (object.RcvUserName != null) if (typeof object.RcvUserName === \"string\") $util.base64.decode(object.RcvUserName, message.RcvUserName = $util.newBuffer($util.base64.length(object.RcvUserName)), 0);else if (object.RcvUserName.length) message.RcvUserName = object.RcvUserName;\n      if (object.SndAddr != null) if (typeof object.SndAddr === \"string\") $util.base64.decode(object.SndAddr, message.SndAddr = $util.newBuffer($util.base64.length(object.SndAddr)), 0);else if (object.SndAddr.length) message.SndAddr = object.SndAddr;\n      if (object.SndUserName != null) if (typeof object.SndUserName === \"string\") $util.base64.decode(object.SndUserName, message.SndUserName = $util.newBuffer($util.base64.length(object.SndUserName)), 0);else if (object.SndUserName.length) message.SndUserName = object.SndUserName;\n      if (object.GasPrice != null) if ($util.Long) (message.GasPrice = $util.Long.fromValue(object.GasPrice)).unsigned = true;else if (typeof object.GasPrice === \"string\") message.GasPrice = parseInt(object.GasPrice, 10);else if (typeof object.GasPrice === \"number\") message.GasPrice = object.GasPrice;else if (typeof object.GasPrice === \"object\") message.GasPrice = new $util.LongBits(object.GasPrice.low >>> 0, object.GasPrice.high >>> 0).toNumber(true);\n      if (object.GasLimit != null) if ($util.Long) (message.GasLimit = $util.Long.fromValue(object.GasLimit)).unsigned = true;else if (typeof object.GasLimit === \"string\") message.GasLimit = parseInt(object.GasLimit, 10);else if (typeof object.GasLimit === \"number\") message.GasLimit = object.GasLimit;else if (typeof object.GasLimit === \"object\") message.GasLimit = new $util.LongBits(object.GasLimit.low >>> 0, object.GasLimit.high >>> 0).toNumber(true);\n      if (object.Data != null) if (typeof object.Data === \"string\") $util.base64.decode(object.Data, message.Data = $util.newBuffer($util.base64.length(object.Data)), 0);else if (object.Data.length) message.Data = object.Data;\n      if (object.ChainID != null) if (typeof object.ChainID === \"string\") $util.base64.decode(object.ChainID, message.ChainID = $util.newBuffer($util.base64.length(object.ChainID)), 0);else if (object.ChainID.length) message.ChainID = object.ChainID;\n      if (object.Version != null) message.Version = object.Version >>> 0;\n      if (object.Signature != null) if (typeof object.Signature === \"string\") $util.base64.decode(object.Signature, message.Signature = $util.newBuffer($util.base64.length(object.Signature)), 0);else if (object.Signature.length) message.Signature = object.Signature;\n      if (object.Options != null) message.Options = object.Options >>> 0;\n      return message;\n    };\n    /**\r\n     * Creates a plain object from a Transaction message. Also converts values to other types if specified.\r\n     * @function toObject\r\n     * @memberof proto.Transaction\r\n     * @static\r\n     * @param {proto.Transaction} message Transaction\r\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n     * @returns {Object.<string,*>} Plain object\r\n     */\n\n\n    Transaction.toObject = function toObject(message, options) {\n      if (!options) options = {};\n      var object = {};\n\n      if (options.defaults) {\n        if ($util.Long) {\n          var long = new $util.Long(0, 0, true);\n          object.Nonce = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n        } else object.Nonce = options.longs === String ? \"0\" : 0;\n\n        if (options.bytes === String) object.Value = \"\";else {\n          object.Value = [];\n          if (options.bytes !== Array) object.Value = $util.newBuffer(object.Value);\n        }\n        if (options.bytes === String) object.RcvAddr = \"\";else {\n          object.RcvAddr = [];\n          if (options.bytes !== Array) object.RcvAddr = $util.newBuffer(object.RcvAddr);\n        }\n        if (options.bytes === String) object.RcvUserName = \"\";else {\n          object.RcvUserName = [];\n          if (options.bytes !== Array) object.RcvUserName = $util.newBuffer(object.RcvUserName);\n        }\n        if (options.bytes === String) object.SndAddr = \"\";else {\n          object.SndAddr = [];\n          if (options.bytes !== Array) object.SndAddr = $util.newBuffer(object.SndAddr);\n        }\n        if (options.bytes === String) object.SndUserName = \"\";else {\n          object.SndUserName = [];\n          if (options.bytes !== Array) object.SndUserName = $util.newBuffer(object.SndUserName);\n        }\n\n        if ($util.Long) {\n          var long = new $util.Long(0, 0, true);\n          object.GasPrice = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n        } else object.GasPrice = options.longs === String ? \"0\" : 0;\n\n        if ($util.Long) {\n          var long = new $util.Long(0, 0, true);\n          object.GasLimit = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n        } else object.GasLimit = options.longs === String ? \"0\" : 0;\n\n        if (options.bytes === String) object.Data = \"\";else {\n          object.Data = [];\n          if (options.bytes !== Array) object.Data = $util.newBuffer(object.Data);\n        }\n        if (options.bytes === String) object.ChainID = \"\";else {\n          object.ChainID = [];\n          if (options.bytes !== Array) object.ChainID = $util.newBuffer(object.ChainID);\n        }\n        object.Version = 0;\n        if (options.bytes === String) object.Signature = \"\";else {\n          object.Signature = [];\n          if (options.bytes !== Array) object.Signature = $util.newBuffer(object.Signature);\n        }\n        object.Options = 0;\n      }\n\n      if (message.Nonce != null && message.hasOwnProperty(\"Nonce\")) if (typeof message.Nonce === \"number\") object.Nonce = options.longs === String ? String(message.Nonce) : message.Nonce;else object.Nonce = options.longs === String ? $util.Long.prototype.toString.call(message.Nonce) : options.longs === Number ? new $util.LongBits(message.Nonce.low >>> 0, message.Nonce.high >>> 0).toNumber(true) : message.Nonce;\n      if (message.Value != null && message.hasOwnProperty(\"Value\")) object.Value = options.bytes === String ? $util.base64.encode(message.Value, 0, message.Value.length) : options.bytes === Array ? Array.prototype.slice.call(message.Value) : message.Value;\n      if (message.RcvAddr != null && message.hasOwnProperty(\"RcvAddr\")) object.RcvAddr = options.bytes === String ? $util.base64.encode(message.RcvAddr, 0, message.RcvAddr.length) : options.bytes === Array ? Array.prototype.slice.call(message.RcvAddr) : message.RcvAddr;\n      if (message.RcvUserName != null && message.hasOwnProperty(\"RcvUserName\")) object.RcvUserName = options.bytes === String ? $util.base64.encode(message.RcvUserName, 0, message.RcvUserName.length) : options.bytes === Array ? Array.prototype.slice.call(message.RcvUserName) : message.RcvUserName;\n      if (message.SndAddr != null && message.hasOwnProperty(\"SndAddr\")) object.SndAddr = options.bytes === String ? $util.base64.encode(message.SndAddr, 0, message.SndAddr.length) : options.bytes === Array ? Array.prototype.slice.call(message.SndAddr) : message.SndAddr;\n      if (message.SndUserName != null && message.hasOwnProperty(\"SndUserName\")) object.SndUserName = options.bytes === String ? $util.base64.encode(message.SndUserName, 0, message.SndUserName.length) : options.bytes === Array ? Array.prototype.slice.call(message.SndUserName) : message.SndUserName;\n      if (message.GasPrice != null && message.hasOwnProperty(\"GasPrice\")) if (typeof message.GasPrice === \"number\") object.GasPrice = options.longs === String ? String(message.GasPrice) : message.GasPrice;else object.GasPrice = options.longs === String ? $util.Long.prototype.toString.call(message.GasPrice) : options.longs === Number ? new $util.LongBits(message.GasPrice.low >>> 0, message.GasPrice.high >>> 0).toNumber(true) : message.GasPrice;\n      if (message.GasLimit != null && message.hasOwnProperty(\"GasLimit\")) if (typeof message.GasLimit === \"number\") object.GasLimit = options.longs === String ? String(message.GasLimit) : message.GasLimit;else object.GasLimit = options.longs === String ? $util.Long.prototype.toString.call(message.GasLimit) : options.longs === Number ? new $util.LongBits(message.GasLimit.low >>> 0, message.GasLimit.high >>> 0).toNumber(true) : message.GasLimit;\n      if (message.Data != null && message.hasOwnProperty(\"Data\")) object.Data = options.bytes === String ? $util.base64.encode(message.Data, 0, message.Data.length) : options.bytes === Array ? Array.prototype.slice.call(message.Data) : message.Data;\n      if (message.ChainID != null && message.hasOwnProperty(\"ChainID\")) object.ChainID = options.bytes === String ? $util.base64.encode(message.ChainID, 0, message.ChainID.length) : options.bytes === Array ? Array.prototype.slice.call(message.ChainID) : message.ChainID;\n      if (message.Version != null && message.hasOwnProperty(\"Version\")) object.Version = message.Version;\n      if (message.Signature != null && message.hasOwnProperty(\"Signature\")) object.Signature = options.bytes === String ? $util.base64.encode(message.Signature, 0, message.Signature.length) : options.bytes === Array ? Array.prototype.slice.call(message.Signature) : message.Signature;\n      if (message.Options != null && message.hasOwnProperty(\"Options\")) object.Options = message.Options;\n      return object;\n    };\n    /**\r\n     * Converts this Transaction to JSON.\r\n     * @function toJSON\r\n     * @memberof proto.Transaction\r\n     * @instance\r\n     * @returns {Object.<string,*>} JSON object\r\n     */\n\n\n    Transaction.prototype.toJSON = function toJSON() {\n      return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Transaction;\n  }();\n\n  return proto;\n}();\n\nmodule.exports = $root;","map":{"version":3,"sources":["../../src/proto/compiled.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\r\n\"use strict\";\r\nvar $protobuf = require(\"protobufjs/minimal\");\r\n// Common aliases\r\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\r\n// Exported root namespace\r\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\r\n$root.proto = (function () {\r\n    /**\r\n     * Namespace proto.\r\n     * @exports proto\r\n     * @namespace\r\n     */\r\n    var proto = {};\r\n    proto.Transaction = (function () {\r\n        /**\r\n         * Properties of a Transaction.\r\n         * @memberof proto\r\n         * @interface ITransaction\r\n         * @property {number|Long|null} [Nonce] Transaction Nonce\r\n         * @property {Uint8Array|null} [Value] Transaction Value\r\n         * @property {Uint8Array|null} [RcvAddr] Transaction RcvAddr\r\n         * @property {Uint8Array|null} [RcvUserName] Transaction RcvUserName\r\n         * @property {Uint8Array|null} [SndAddr] Transaction SndAddr\r\n         * @property {Uint8Array|null} [SndUserName] Transaction SndUserName\r\n         * @property {number|Long|null} [GasPrice] Transaction GasPrice\r\n         * @property {number|Long|null} [GasLimit] Transaction GasLimit\r\n         * @property {Uint8Array|null} [Data] Transaction Data\r\n         * @property {Uint8Array|null} [ChainID] Transaction ChainID\r\n         * @property {number|null} [Version] Transaction Version\r\n         * @property {Uint8Array|null} [Signature] Transaction Signature\r\n         * @property {number|null} [Options] Transaction Options\r\n         */\r\n        /**\r\n         * Constructs a new Transaction.\r\n         * @memberof proto\r\n         * @classdesc Represents a Transaction.\r\n         * @implements ITransaction\r\n         * @constructor\r\n         * @param {proto.ITransaction=} [properties] Properties to set\r\n         */\r\n        function Transaction(properties) {\r\n            if (properties)\r\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n        /**\r\n         * Transaction Nonce.\r\n         * @member {number|Long} Nonce\r\n         * @memberof proto.Transaction\r\n         * @instance\r\n         */\r\n        Transaction.prototype.Nonce = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\r\n        /**\r\n         * Transaction Value.\r\n         * @member {Uint8Array} Value\r\n         * @memberof proto.Transaction\r\n         * @instance\r\n         */\r\n        Transaction.prototype.Value = $util.newBuffer([]);\r\n        /**\r\n         * Transaction RcvAddr.\r\n         * @member {Uint8Array} RcvAddr\r\n         * @memberof proto.Transaction\r\n         * @instance\r\n         */\r\n        Transaction.prototype.RcvAddr = $util.newBuffer([]);\r\n        /**\r\n         * Transaction RcvUserName.\r\n         * @member {Uint8Array} RcvUserName\r\n         * @memberof proto.Transaction\r\n         * @instance\r\n         */\r\n        Transaction.prototype.RcvUserName = $util.newBuffer([]);\r\n        /**\r\n         * Transaction SndAddr.\r\n         * @member {Uint8Array} SndAddr\r\n         * @memberof proto.Transaction\r\n         * @instance\r\n         */\r\n        Transaction.prototype.SndAddr = $util.newBuffer([]);\r\n        /**\r\n         * Transaction SndUserName.\r\n         * @member {Uint8Array} SndUserName\r\n         * @memberof proto.Transaction\r\n         * @instance\r\n         */\r\n        Transaction.prototype.SndUserName = $util.newBuffer([]);\r\n        /**\r\n         * Transaction GasPrice.\r\n         * @member {number|Long} GasPrice\r\n         * @memberof proto.Transaction\r\n         * @instance\r\n         */\r\n        Transaction.prototype.GasPrice = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\r\n        /**\r\n         * Transaction GasLimit.\r\n         * @member {number|Long} GasLimit\r\n         * @memberof proto.Transaction\r\n         * @instance\r\n         */\r\n        Transaction.prototype.GasLimit = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\r\n        /**\r\n         * Transaction Data.\r\n         * @member {Uint8Array} Data\r\n         * @memberof proto.Transaction\r\n         * @instance\r\n         */\r\n        Transaction.prototype.Data = $util.newBuffer([]);\r\n        /**\r\n         * Transaction ChainID.\r\n         * @member {Uint8Array} ChainID\r\n         * @memberof proto.Transaction\r\n         * @instance\r\n         */\r\n        Transaction.prototype.ChainID = $util.newBuffer([]);\r\n        /**\r\n         * Transaction Version.\r\n         * @member {number} Version\r\n         * @memberof proto.Transaction\r\n         * @instance\r\n         */\r\n        Transaction.prototype.Version = 0;\r\n        /**\r\n         * Transaction Signature.\r\n         * @member {Uint8Array} Signature\r\n         * @memberof proto.Transaction\r\n         * @instance\r\n         */\r\n        Transaction.prototype.Signature = $util.newBuffer([]);\r\n        /**\r\n         * Transaction Options.\r\n         * @member {number} Options\r\n         * @memberof proto.Transaction\r\n         * @instance\r\n         */\r\n        Transaction.prototype.Options = 0;\r\n        /**\r\n         * Creates a new Transaction instance using the specified properties.\r\n         * @function create\r\n         * @memberof proto.Transaction\r\n         * @static\r\n         * @param {proto.ITransaction=} [properties] Properties to set\r\n         * @returns {proto.Transaction} Transaction instance\r\n         */\r\n        Transaction.create = function create(properties) {\r\n            return new Transaction(properties);\r\n        };\r\n        /**\r\n         * Encodes the specified Transaction message. Does not implicitly {@link proto.Transaction.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof proto.Transaction\r\n         * @static\r\n         * @param {proto.ITransaction} message Transaction message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        Transaction.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            if (message.Nonce != null && Object.hasOwnProperty.call(message, \"Nonce\"))\r\n                writer.uint32(/* id 1, wireType 0 =*/ 8).uint64(message.Nonce);\r\n            if (message.Value != null && Object.hasOwnProperty.call(message, \"Value\"))\r\n                writer.uint32(/* id 2, wireType 2 =*/ 18).bytes(message.Value);\r\n            if (message.RcvAddr != null && Object.hasOwnProperty.call(message, \"RcvAddr\"))\r\n                writer.uint32(/* id 3, wireType 2 =*/ 26).bytes(message.RcvAddr);\r\n            if (message.RcvUserName != null && Object.hasOwnProperty.call(message, \"RcvUserName\"))\r\n                writer.uint32(/* id 4, wireType 2 =*/ 34).bytes(message.RcvUserName);\r\n            if (message.SndAddr != null && Object.hasOwnProperty.call(message, \"SndAddr\"))\r\n                writer.uint32(/* id 5, wireType 2 =*/ 42).bytes(message.SndAddr);\r\n            if (message.SndUserName != null && Object.hasOwnProperty.call(message, \"SndUserName\"))\r\n                writer.uint32(/* id 6, wireType 2 =*/ 50).bytes(message.SndUserName);\r\n            if (message.GasPrice != null && Object.hasOwnProperty.call(message, \"GasPrice\"))\r\n                writer.uint32(/* id 7, wireType 0 =*/ 56).uint64(message.GasPrice);\r\n            if (message.GasLimit != null && Object.hasOwnProperty.call(message, \"GasLimit\"))\r\n                writer.uint32(/* id 8, wireType 0 =*/ 64).uint64(message.GasLimit);\r\n            if (message.Data != null && Object.hasOwnProperty.call(message, \"Data\"))\r\n                writer.uint32(/* id 9, wireType 2 =*/ 74).bytes(message.Data);\r\n            if (message.ChainID != null && Object.hasOwnProperty.call(message, \"ChainID\"))\r\n                writer.uint32(/* id 10, wireType 2 =*/ 82).bytes(message.ChainID);\r\n            if (message.Version != null && Object.hasOwnProperty.call(message, \"Version\"))\r\n                writer.uint32(/* id 11, wireType 0 =*/ 88).uint32(message.Version);\r\n            if (message.Signature != null && Object.hasOwnProperty.call(message, \"Signature\"))\r\n                writer.uint32(/* id 12, wireType 2 =*/ 98).bytes(message.Signature);\r\n            if (message.Options != null && Object.hasOwnProperty.call(message, \"Options\"))\r\n                writer.uint32(/* id 13, wireType 0 =*/ 104).uint32(message.Options);\r\n            return writer;\r\n        };\r\n        /**\r\n         * Encodes the specified Transaction message, length delimited. Does not implicitly {@link proto.Transaction.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof proto.Transaction\r\n         * @static\r\n         * @param {proto.ITransaction} message Transaction message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        Transaction.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n        /**\r\n         * Decodes a Transaction message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof proto.Transaction\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {proto.Transaction} Transaction\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        Transaction.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.proto.Transaction();\r\n            while (reader.pos < end) {\r\n                var tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                    case 1:\r\n                        message.Nonce = reader.uint64();\r\n                        break;\r\n                    case 2:\r\n                        message.Value = reader.bytes();\r\n                        break;\r\n                    case 3:\r\n                        message.RcvAddr = reader.bytes();\r\n                        break;\r\n                    case 4:\r\n                        message.RcvUserName = reader.bytes();\r\n                        break;\r\n                    case 5:\r\n                        message.SndAddr = reader.bytes();\r\n                        break;\r\n                    case 6:\r\n                        message.SndUserName = reader.bytes();\r\n                        break;\r\n                    case 7:\r\n                        message.GasPrice = reader.uint64();\r\n                        break;\r\n                    case 8:\r\n                        message.GasLimit = reader.uint64();\r\n                        break;\r\n                    case 9:\r\n                        message.Data = reader.bytes();\r\n                        break;\r\n                    case 10:\r\n                        message.ChainID = reader.bytes();\r\n                        break;\r\n                    case 11:\r\n                        message.Version = reader.uint32();\r\n                        break;\r\n                    case 12:\r\n                        message.Signature = reader.bytes();\r\n                        break;\r\n                    case 13:\r\n                        message.Options = reader.uint32();\r\n                        break;\r\n                    default:\r\n                        reader.skipType(tag & 7);\r\n                        break;\r\n                }\r\n            }\r\n            return message;\r\n        };\r\n        /**\r\n         * Decodes a Transaction message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof proto.Transaction\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {proto.Transaction} Transaction\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        Transaction.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n        /**\r\n         * Verifies a Transaction message.\r\n         * @function verify\r\n         * @memberof proto.Transaction\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        Transaction.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            if (message.Nonce != null && message.hasOwnProperty(\"Nonce\"))\r\n                if (!$util.isInteger(message.Nonce) && !(message.Nonce && $util.isInteger(message.Nonce.low) && $util.isInteger(message.Nonce.high)))\r\n                    return \"Nonce: integer|Long expected\";\r\n            if (message.Value != null && message.hasOwnProperty(\"Value\"))\r\n                if (!(message.Value && typeof message.Value.length === \"number\" || $util.isString(message.Value)))\r\n                    return \"Value: buffer expected\";\r\n            if (message.RcvAddr != null && message.hasOwnProperty(\"RcvAddr\"))\r\n                if (!(message.RcvAddr && typeof message.RcvAddr.length === \"number\" || $util.isString(message.RcvAddr)))\r\n                    return \"RcvAddr: buffer expected\";\r\n            if (message.RcvUserName != null && message.hasOwnProperty(\"RcvUserName\"))\r\n                if (!(message.RcvUserName && typeof message.RcvUserName.length === \"number\" || $util.isString(message.RcvUserName)))\r\n                    return \"RcvUserName: buffer expected\";\r\n            if (message.SndAddr != null && message.hasOwnProperty(\"SndAddr\"))\r\n                if (!(message.SndAddr && typeof message.SndAddr.length === \"number\" || $util.isString(message.SndAddr)))\r\n                    return \"SndAddr: buffer expected\";\r\n            if (message.SndUserName != null && message.hasOwnProperty(\"SndUserName\"))\r\n                if (!(message.SndUserName && typeof message.SndUserName.length === \"number\" || $util.isString(message.SndUserName)))\r\n                    return \"SndUserName: buffer expected\";\r\n            if (message.GasPrice != null && message.hasOwnProperty(\"GasPrice\"))\r\n                if (!$util.isInteger(message.GasPrice) && !(message.GasPrice && $util.isInteger(message.GasPrice.low) && $util.isInteger(message.GasPrice.high)))\r\n                    return \"GasPrice: integer|Long expected\";\r\n            if (message.GasLimit != null && message.hasOwnProperty(\"GasLimit\"))\r\n                if (!$util.isInteger(message.GasLimit) && !(message.GasLimit && $util.isInteger(message.GasLimit.low) && $util.isInteger(message.GasLimit.high)))\r\n                    return \"GasLimit: integer|Long expected\";\r\n            if (message.Data != null && message.hasOwnProperty(\"Data\"))\r\n                if (!(message.Data && typeof message.Data.length === \"number\" || $util.isString(message.Data)))\r\n                    return \"Data: buffer expected\";\r\n            if (message.ChainID != null && message.hasOwnProperty(\"ChainID\"))\r\n                if (!(message.ChainID && typeof message.ChainID.length === \"number\" || $util.isString(message.ChainID)))\r\n                    return \"ChainID: buffer expected\";\r\n            if (message.Version != null && message.hasOwnProperty(\"Version\"))\r\n                if (!$util.isInteger(message.Version))\r\n                    return \"Version: integer expected\";\r\n            if (message.Signature != null && message.hasOwnProperty(\"Signature\"))\r\n                if (!(message.Signature && typeof message.Signature.length === \"number\" || $util.isString(message.Signature)))\r\n                    return \"Signature: buffer expected\";\r\n            if (message.Options != null && message.hasOwnProperty(\"Options\"))\r\n                if (!$util.isInteger(message.Options))\r\n                    return \"Options: integer expected\";\r\n            return null;\r\n        };\r\n        /**\r\n         * Creates a Transaction message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof proto.Transaction\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {proto.Transaction} Transaction\r\n         */\r\n        Transaction.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.proto.Transaction)\r\n                return object;\r\n            var message = new $root.proto.Transaction();\r\n            if (object.Nonce != null)\r\n                if ($util.Long)\r\n                    (message.Nonce = $util.Long.fromValue(object.Nonce)).unsigned = true;\r\n                else if (typeof object.Nonce === \"string\")\r\n                    message.Nonce = parseInt(object.Nonce, 10);\r\n                else if (typeof object.Nonce === \"number\")\r\n                    message.Nonce = object.Nonce;\r\n                else if (typeof object.Nonce === \"object\")\r\n                    message.Nonce = new $util.LongBits(object.Nonce.low >>> 0, object.Nonce.high >>> 0).toNumber(true);\r\n            if (object.Value != null)\r\n                if (typeof object.Value === \"string\")\r\n                    $util.base64.decode(object.Value, message.Value = $util.newBuffer($util.base64.length(object.Value)), 0);\r\n                else if (object.Value.length)\r\n                    message.Value = object.Value;\r\n            if (object.RcvAddr != null)\r\n                if (typeof object.RcvAddr === \"string\")\r\n                    $util.base64.decode(object.RcvAddr, message.RcvAddr = $util.newBuffer($util.base64.length(object.RcvAddr)), 0);\r\n                else if (object.RcvAddr.length)\r\n                    message.RcvAddr = object.RcvAddr;\r\n            if (object.RcvUserName != null)\r\n                if (typeof object.RcvUserName === \"string\")\r\n                    $util.base64.decode(object.RcvUserName, message.RcvUserName = $util.newBuffer($util.base64.length(object.RcvUserName)), 0);\r\n                else if (object.RcvUserName.length)\r\n                    message.RcvUserName = object.RcvUserName;\r\n            if (object.SndAddr != null)\r\n                if (typeof object.SndAddr === \"string\")\r\n                    $util.base64.decode(object.SndAddr, message.SndAddr = $util.newBuffer($util.base64.length(object.SndAddr)), 0);\r\n                else if (object.SndAddr.length)\r\n                    message.SndAddr = object.SndAddr;\r\n            if (object.SndUserName != null)\r\n                if (typeof object.SndUserName === \"string\")\r\n                    $util.base64.decode(object.SndUserName, message.SndUserName = $util.newBuffer($util.base64.length(object.SndUserName)), 0);\r\n                else if (object.SndUserName.length)\r\n                    message.SndUserName = object.SndUserName;\r\n            if (object.GasPrice != null)\r\n                if ($util.Long)\r\n                    (message.GasPrice = $util.Long.fromValue(object.GasPrice)).unsigned = true;\r\n                else if (typeof object.GasPrice === \"string\")\r\n                    message.GasPrice = parseInt(object.GasPrice, 10);\r\n                else if (typeof object.GasPrice === \"number\")\r\n                    message.GasPrice = object.GasPrice;\r\n                else if (typeof object.GasPrice === \"object\")\r\n                    message.GasPrice = new $util.LongBits(object.GasPrice.low >>> 0, object.GasPrice.high >>> 0).toNumber(true);\r\n            if (object.GasLimit != null)\r\n                if ($util.Long)\r\n                    (message.GasLimit = $util.Long.fromValue(object.GasLimit)).unsigned = true;\r\n                else if (typeof object.GasLimit === \"string\")\r\n                    message.GasLimit = parseInt(object.GasLimit, 10);\r\n                else if (typeof object.GasLimit === \"number\")\r\n                    message.GasLimit = object.GasLimit;\r\n                else if (typeof object.GasLimit === \"object\")\r\n                    message.GasLimit = new $util.LongBits(object.GasLimit.low >>> 0, object.GasLimit.high >>> 0).toNumber(true);\r\n            if (object.Data != null)\r\n                if (typeof object.Data === \"string\")\r\n                    $util.base64.decode(object.Data, message.Data = $util.newBuffer($util.base64.length(object.Data)), 0);\r\n                else if (object.Data.length)\r\n                    message.Data = object.Data;\r\n            if (object.ChainID != null)\r\n                if (typeof object.ChainID === \"string\")\r\n                    $util.base64.decode(object.ChainID, message.ChainID = $util.newBuffer($util.base64.length(object.ChainID)), 0);\r\n                else if (object.ChainID.length)\r\n                    message.ChainID = object.ChainID;\r\n            if (object.Version != null)\r\n                message.Version = object.Version >>> 0;\r\n            if (object.Signature != null)\r\n                if (typeof object.Signature === \"string\")\r\n                    $util.base64.decode(object.Signature, message.Signature = $util.newBuffer($util.base64.length(object.Signature)), 0);\r\n                else if (object.Signature.length)\r\n                    message.Signature = object.Signature;\r\n            if (object.Options != null)\r\n                message.Options = object.Options >>> 0;\r\n            return message;\r\n        };\r\n        /**\r\n         * Creates a plain object from a Transaction message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof proto.Transaction\r\n         * @static\r\n         * @param {proto.Transaction} message Transaction\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        Transaction.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            var object = {};\r\n            if (options.defaults) {\r\n                if ($util.Long) {\r\n                    var long = new $util.Long(0, 0, true);\r\n                    object.Nonce = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\r\n                }\r\n                else\r\n                    object.Nonce = options.longs === String ? \"0\" : 0;\r\n                if (options.bytes === String)\r\n                    object.Value = \"\";\r\n                else {\r\n                    object.Value = [];\r\n                    if (options.bytes !== Array)\r\n                        object.Value = $util.newBuffer(object.Value);\r\n                }\r\n                if (options.bytes === String)\r\n                    object.RcvAddr = \"\";\r\n                else {\r\n                    object.RcvAddr = [];\r\n                    if (options.bytes !== Array)\r\n                        object.RcvAddr = $util.newBuffer(object.RcvAddr);\r\n                }\r\n                if (options.bytes === String)\r\n                    object.RcvUserName = \"\";\r\n                else {\r\n                    object.RcvUserName = [];\r\n                    if (options.bytes !== Array)\r\n                        object.RcvUserName = $util.newBuffer(object.RcvUserName);\r\n                }\r\n                if (options.bytes === String)\r\n                    object.SndAddr = \"\";\r\n                else {\r\n                    object.SndAddr = [];\r\n                    if (options.bytes !== Array)\r\n                        object.SndAddr = $util.newBuffer(object.SndAddr);\r\n                }\r\n                if (options.bytes === String)\r\n                    object.SndUserName = \"\";\r\n                else {\r\n                    object.SndUserName = [];\r\n                    if (options.bytes !== Array)\r\n                        object.SndUserName = $util.newBuffer(object.SndUserName);\r\n                }\r\n                if ($util.Long) {\r\n                    var long = new $util.Long(0, 0, true);\r\n                    object.GasPrice = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\r\n                }\r\n                else\r\n                    object.GasPrice = options.longs === String ? \"0\" : 0;\r\n                if ($util.Long) {\r\n                    var long = new $util.Long(0, 0, true);\r\n                    object.GasLimit = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\r\n                }\r\n                else\r\n                    object.GasLimit = options.longs === String ? \"0\" : 0;\r\n                if (options.bytes === String)\r\n                    object.Data = \"\";\r\n                else {\r\n                    object.Data = [];\r\n                    if (options.bytes !== Array)\r\n                        object.Data = $util.newBuffer(object.Data);\r\n                }\r\n                if (options.bytes === String)\r\n                    object.ChainID = \"\";\r\n                else {\r\n                    object.ChainID = [];\r\n                    if (options.bytes !== Array)\r\n                        object.ChainID = $util.newBuffer(object.ChainID);\r\n                }\r\n                object.Version = 0;\r\n                if (options.bytes === String)\r\n                    object.Signature = \"\";\r\n                else {\r\n                    object.Signature = [];\r\n                    if (options.bytes !== Array)\r\n                        object.Signature = $util.newBuffer(object.Signature);\r\n                }\r\n                object.Options = 0;\r\n            }\r\n            if (message.Nonce != null && message.hasOwnProperty(\"Nonce\"))\r\n                if (typeof message.Nonce === \"number\")\r\n                    object.Nonce = options.longs === String ? String(message.Nonce) : message.Nonce;\r\n                else\r\n                    object.Nonce = options.longs === String ? $util.Long.prototype.toString.call(message.Nonce) : options.longs === Number ? new $util.LongBits(message.Nonce.low >>> 0, message.Nonce.high >>> 0).toNumber(true) : message.Nonce;\r\n            if (message.Value != null && message.hasOwnProperty(\"Value\"))\r\n                object.Value = options.bytes === String ? $util.base64.encode(message.Value, 0, message.Value.length) : options.bytes === Array ? Array.prototype.slice.call(message.Value) : message.Value;\r\n            if (message.RcvAddr != null && message.hasOwnProperty(\"RcvAddr\"))\r\n                object.RcvAddr = options.bytes === String ? $util.base64.encode(message.RcvAddr, 0, message.RcvAddr.length) : options.bytes === Array ? Array.prototype.slice.call(message.RcvAddr) : message.RcvAddr;\r\n            if (message.RcvUserName != null && message.hasOwnProperty(\"RcvUserName\"))\r\n                object.RcvUserName = options.bytes === String ? $util.base64.encode(message.RcvUserName, 0, message.RcvUserName.length) : options.bytes === Array ? Array.prototype.slice.call(message.RcvUserName) : message.RcvUserName;\r\n            if (message.SndAddr != null && message.hasOwnProperty(\"SndAddr\"))\r\n                object.SndAddr = options.bytes === String ? $util.base64.encode(message.SndAddr, 0, message.SndAddr.length) : options.bytes === Array ? Array.prototype.slice.call(message.SndAddr) : message.SndAddr;\r\n            if (message.SndUserName != null && message.hasOwnProperty(\"SndUserName\"))\r\n                object.SndUserName = options.bytes === String ? $util.base64.encode(message.SndUserName, 0, message.SndUserName.length) : options.bytes === Array ? Array.prototype.slice.call(message.SndUserName) : message.SndUserName;\r\n            if (message.GasPrice != null && message.hasOwnProperty(\"GasPrice\"))\r\n                if (typeof message.GasPrice === \"number\")\r\n                    object.GasPrice = options.longs === String ? String(message.GasPrice) : message.GasPrice;\r\n                else\r\n                    object.GasPrice = options.longs === String ? $util.Long.prototype.toString.call(message.GasPrice) : options.longs === Number ? new $util.LongBits(message.GasPrice.low >>> 0, message.GasPrice.high >>> 0).toNumber(true) : message.GasPrice;\r\n            if (message.GasLimit != null && message.hasOwnProperty(\"GasLimit\"))\r\n                if (typeof message.GasLimit === \"number\")\r\n                    object.GasLimit = options.longs === String ? String(message.GasLimit) : message.GasLimit;\r\n                else\r\n                    object.GasLimit = options.longs === String ? $util.Long.prototype.toString.call(message.GasLimit) : options.longs === Number ? new $util.LongBits(message.GasLimit.low >>> 0, message.GasLimit.high >>> 0).toNumber(true) : message.GasLimit;\r\n            if (message.Data != null && message.hasOwnProperty(\"Data\"))\r\n                object.Data = options.bytes === String ? $util.base64.encode(message.Data, 0, message.Data.length) : options.bytes === Array ? Array.prototype.slice.call(message.Data) : message.Data;\r\n            if (message.ChainID != null && message.hasOwnProperty(\"ChainID\"))\r\n                object.ChainID = options.bytes === String ? $util.base64.encode(message.ChainID, 0, message.ChainID.length) : options.bytes === Array ? Array.prototype.slice.call(message.ChainID) : message.ChainID;\r\n            if (message.Version != null && message.hasOwnProperty(\"Version\"))\r\n                object.Version = message.Version;\r\n            if (message.Signature != null && message.hasOwnProperty(\"Signature\"))\r\n                object.Signature = options.bytes === String ? $util.base64.encode(message.Signature, 0, message.Signature.length) : options.bytes === Array ? Array.prototype.slice.call(message.Signature) : message.Signature;\r\n            if (message.Options != null && message.hasOwnProperty(\"Options\"))\r\n                object.Options = message.Options;\r\n            return object;\r\n        };\r\n        /**\r\n         * Converts this Transaction to JSON.\r\n         * @function toJSON\r\n         * @memberof proto.Transaction\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        Transaction.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n        return Transaction;\r\n    })();\r\n    return proto;\r\n})();\r\nmodule.exports = $root;\r\n//# sourceMappingURL=compiled.js.map"]},"metadata":{},"sourceType":"script"}