{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransactionLogs = void 0;\n\nconst errors_1 = require(\"./errors\");\n\nconst primitives_1 = require(\"./primitives\");\n\nconst transactionEvents_1 = require(\"./transactionEvents\");\n\nclass TransactionLogs {\n  constructor(init) {\n    this.address = new primitives_1.Address(\"\");\n    this.events = [];\n    Object.assign(this, init);\n  }\n\n  static fromHttpResponse(logs) {\n    let result = new TransactionLogs();\n    result.address = new primitives_1.Address(logs.address);\n    result.events = (logs.events || []).map(event => transactionEvents_1.TransactionEvent.fromHttpResponse(event));\n    return result;\n  }\n\n  findSingleOrNoneEvent(identifier, predicate) {\n    let events = this.findEvents(identifier, predicate);\n\n    if (events.length > 1) {\n      throw new errors_1.ErrUnexpectedCondition(`more than one event of type ${identifier}`);\n    }\n\n    return events[0];\n  }\n\n  findFirstOrNoneEvent(identifier, predicate) {\n    return this.findEvents(identifier, predicate)[0];\n  }\n\n  findEvents(identifier, predicate) {\n    let events = this.events.filter(event => event.identifier == identifier);\n\n    if (predicate) {\n      events = events.filter(event => predicate(event));\n    }\n\n    return events;\n  }\n\n}\n\nexports.TransactionLogs = TransactionLogs;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AAEA,MAAaA,eAAb,CAA4B;AAIxBC,cAAYC,IAAZ,EAA2C;AAH3C,mBAAoB,IAAIC,oBAAJ,CAAY,EAAZ,CAApB;AACA,kBAA6B,EAA7B;AAGIC,UAAM,CAACC,MAAP,CAAc,IAAd,EAAoBH,IAApB;AACH;;AAEsB,SAAhBI,gBAAgB,CAACC,IAAD,EAAU;AAC7B,QAAIC,MAAM,GAAG,IAAIR,eAAJ,EAAb;AACAQ,UAAM,CAACC,OAAP,GAAiB,IAAIN,oBAAJ,CAAYI,IAAI,CAACE,OAAjB,CAAjB;AACAD,UAAM,CAACE,MAAP,GAAgB,CAACH,IAAI,CAACG,MAAL,IAAe,EAAhB,EAAoBC,GAApB,CAAyBC,KAAD,IAAgBC,qCAAiBP,gBAAjB,CAAkCM,KAAlC,CAAxC,CAAhB;AAEA,WAAOJ,MAAP;AACH;;AAEDM,uBAAqB,CAACC,UAAD,EAAqBC,SAArB,EAAqE;AACtF,QAAIN,MAAM,GAAG,KAAKO,UAAL,CAAgBF,UAAhB,EAA4BC,SAA5B,CAAb;;AAEA,QAAIN,MAAM,CAACQ,MAAP,GAAgB,CAApB,EAAuB;AACnB,YAAM,IAAIC,+BAAJ,CAA2B,+BAA+BJ,UAAU,EAApE,CAAN;AACH;;AAED,WAAOL,MAAM,CAAC,CAAD,CAAb;AACH;;AAEDU,sBAAoB,CAACL,UAAD,EAAqBC,SAArB,EAAqE;AACrF,WAAO,KAAKC,UAAL,CAAgBF,UAAhB,EAA4BC,SAA5B,EAAuC,CAAvC,CAAP;AACH;;AAEDC,YAAU,CAACF,UAAD,EAAqBC,SAArB,EAAqE;AAC3E,QAAIN,MAAM,GAAG,KAAKA,MAAL,CAAYW,MAAZ,CAAmBT,KAAK,IAAIA,KAAK,CAACG,UAAN,IAAoBA,UAAhD,CAAb;;AAEA,QAAIC,SAAJ,EAAe;AACXN,YAAM,GAAGA,MAAM,CAACW,MAAP,CAAcT,KAAK,IAAII,SAAS,CAACJ,KAAD,CAAhC,CAAT;AACH;;AAED,WAAOF,MAAP;AACH;;AAtCuB;;AAA5BY","names":["TransactionLogs","constructor","init","primitives_1","Object","assign","fromHttpResponse","logs","result","address","events","map","event","transactionEvents_1","findSingleOrNoneEvent","identifier","predicate","findEvents","length","errors_1","findFirstOrNoneEvent","filter","exports"],"sourceRoot":"","sources":["../src/transactionLogs.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}