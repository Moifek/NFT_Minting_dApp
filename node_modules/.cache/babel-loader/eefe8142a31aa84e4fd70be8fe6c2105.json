{"ast":null,"code":"var _jsxFileName = \"/home/adam/NFT_Minting_dApp/src/pages/Home/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { transactionServices, useGetAccountInfo, useGetNetworkConfig, refreshAccount } from \"@elrondnetwork/dapp-core\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { dAppName } from \"config\";\nimport { routeNames } from \"routes\";\nimport { ProxyNetworkProvider } from \"@elrondnetwork/erdjs-network-providers\";\nimport { Address, NetworkConfig, AbiRegistry, SmartContractAbi, SmartContract, ContractFunction, ProxyProvider } from \"@elrondnetwork/erdjs\"; //import { promises } from \"fs\";\n//import * as fs from \"fs\";\n\nimport { getTransactions } from \"apiRequests\";\nimport { contractAddress } from \"config\";\nimport logo from \"./logo.png\";\nimport gif1 from \"./gif1.gif\";\nimport \"./Homeindex.css\"; //import { stringify } from \"querystring\";\n\nimport data from \"./test.json\";\nimport { getMintTransaction, publicEndpointSetup, GetAddress } from \"./utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const {\n    address\n  } = useGetAccountInfo();\n  /**************************************************Block Jdid **************************/\n\n  const {\n    success,\n    fail,\n    hasActiveTransactions\n  } = transactionServices.useGetActiveTransactionsStatus();\n  const {\n    network: {\n      apiAddress\n    }\n  } = useGetNetworkConfig(); //console.log(\"******************\", apiAddress); //https://devnet-api.elrond.com\n\n  const [state, setState] = React.useState({\n    transactions: [],\n    transactionsFetched: undefined\n  });\n  const account = useGetAccountInfo();\n  console.log(\"***ACCOUNT ADRESS***:\", account.address); //erd14vwdlxxn93nxpph830f00y5g6qal3nndp7mtjg00verhtykp9nnqrmethw\n\n  const fetchData = () => {\n    if (success || fail || !hasActiveTransactions) {\n      getTransactions({\n        apiAddress,\n        address: account.address,\n        timeout: 3000,\n        contractAddress\n      }).then(_ref => {\n        let {\n          data,\n          success: transactionsFetched\n        } = _ref;\n        refreshAccount();\n        setState({\n          transactions: data,\n          transactionsFetched\n        });\n      });\n    }\n  };\n\n  React.useEffect(fetchData, [success, fail, hasActiveTransactions]);\n\n  const add = function () {\n    let factor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n    if (factor < 0) {\n      if (count > 0) setCount(count + factor);\n    } else {\n      setCount(count + factor);\n    }\n  };\n\n  const syncProviderConfig = async provider => {\n    return NetworkConfig.getDefault().sync(provider); //return UserSigner.fromWallet() get user wallet signer\n  };\n\n  function createSmartContractInstance(abi, SCaddress) {\n    const contract = new SmartContract({\n      address: SCaddress ? new Address(SCaddress) : undefined,\n      abi: abi && new SmartContractAbi(abi, abi.interfaces.map(iface => iface.name))\n    });\n    return contract;\n  }\n\n  const abi = async () => {\n    let networkProvider = new ProxyNetworkProvider(\"https://devnet-gateway.elrond.com\");\n    let networkConfig = await networkProvider.getNetworkConfig();\n    let provider = new ProxyProvider(\"https://devnet-gateway.elrond.com\");\n    await GetAddress(address);\n    await syncProviderConfig(provider);\n    let jsonContent = JSON.parse(JSON.stringify(data)); //let abi = new SmartContractAbi(abiRegistry, [\"MyContract\"]);\n\n    let registry = new AbiRegistry().extend(jsonContent);\n    let abiRegistry = registry.remapToKnownTypes();\n    console.log(abiRegistry);\n    let contract = createSmartContractInstance(abiRegistry, \"erd1qqqqqqqqqqqqqpgqdx22q4lg64w20fsscll2w5z5lc08whac5uhslwwwp7\");\n    console.log(contract);\n    console.log(contract.getAbi().getEndpoint(\"getNftPrice\"));\n    let response = await contract.runQuery(provider, {\n      func: new ContractFunction(\"getNftPrice\"),\n      args: [],\n      caller: new Address(\"erd16ht3gyfw6xfcm9s89swczscas85y882am3atdar487mz3dzy5uhszny4gn\")\n    });\n    let mintx = getMintTransaction(\"erd1qqqqqqqqqqqqqpgqdx22q4lg64w20fsscll2w5z5lc08whac5uhslwwwp7\", 14000000, 2);\n    const {\n      signer,\n      LoggedUserAccount\n    } = await publicEndpointSetup(provider);\n    console.log(LoggedUserAccount.nonce);\n    mintx.setNonce(LoggedUserAccount.getNonceThenIncrement());\n    console.log(mintx.getNonce());\n    console.log(LoggedUserAccount.nonce);\n    signer.sign(mintx); // await commonTxOperations(mintx, LoggedUserAccount, signer, provider);\n\n    console.log(LoggedUserAccount);\n    await mintx.send(provider);\n    await mintx.awaitExecuted(provider);\n    const txHash = mintx.getHash();\n    console.log(txHash.toString());\n    axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n    console.log(`Transaction: /transactions/${txHash}`);\n    let explorer = `https://devnet-gateway.elrond.com/transaction/${txHash}?withResults=true`;\n    let res = await axios.get(explorer);\n    let value = res.data.data.transaction.smartContractResults[0].data;\n    var result = value.substring(value.lastIndexOf(\"@\") + 1);\n    let pricestr = parseInt(result, 16);\n    console.log(pricestr);\n    return contract;\n  };\n\n  console.log(abi());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-fill align-items-center  rounded-pill\",\n    style: {\n      height: \"70vh\",\n      paddingTop: \"25%\",\n      marginTop: \"15%\",\n      marginRight: \"5%\",\n      marginLeft: \"5%\",\n      marginBottom: \"15%\",\n      paddingBottom: \"40%\",\n      backgroundColor: \"#2e765e\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row w-100 justify-content-between\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-8 col-lg-5 mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: String(logo),\n          alt: \"Logo\",\n          className: \"rounded mx-auto d-block\",\n          style: {\n            width: \"370px\",\n            height: \"320px\",\n            marginTop: \"30%\",\n            padding: \"25px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card shadow-sm rounded-pill border border-warning p-4\",\n          style: {\n            width: \"100%\",\n            height: \"60%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: String(gif1),\n              className: \"rounded border rounded-circle mx-auto d-block\",\n              style: {\n                width: \"50%\",\n                height: \"50%\",\n                border: \"10px\",\n                margin: \"2%\"\n              },\n              alt: \"gif\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"mb-3\",\n              \"data-testid\": \"title\",\n              children: dAppName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container \",\n              children: [address ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-lg mt-3 text-white\",\n                style: {\n                  margin: \"10px\",\n                  backgroundColor: \"#00665d\"\n                },\n                onClick: () => add(),\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this) : null, address ? /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 28\n              }, this) : null, address ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-lg mt-3 text-white\",\n                style: {\n                  margin: \"5px\",\n                  backgroundColor: \"#d2b48c\"\n                },\n                onClick: () => add(-1),\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), address ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-lg mt-3 text-white golden\",\n              style: {\n                margin: \"5px\",\n                borderColor: \"#d2b48c\",\n                backgroundColor: \"#00665d\"\n              },\n              children: \"Mint\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this) : null, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-3\",\n              children: [\"This is the official N4P foresters NFTs Minting Site\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this), \" Login using your Elrond wallet.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), !address ? /*#__PURE__*/_jsxDEV(Link, {\n              to: routeNames.unlock,\n              className: \"btn btn-primary mt-3 text-white golden\",\n              \"data-testid\": \"loginBtn\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            padding: \"15px\",\n            textAlign: \"center\",\n            alignContent: \"center\",\n            color: \"white\"\n          },\n          children: \"We have set the gas limit to 14000000 for the contract to successfully mint your NFT. We recommend that you do not lower the gas limit.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"qqY7xQdROoUFM7OEiBWwTPtpWqY=\", false, function () {\n  return [useGetAccountInfo, transactionServices.useGetActiveTransactionsStatus, useGetNetworkConfig, useGetAccountInfo];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","transactionServices","useGetAccountInfo","useGetNetworkConfig","refreshAccount","axios","Link","dAppName","routeNames","ProxyNetworkProvider","Address","NetworkConfig","AbiRegistry","SmartContractAbi","SmartContract","ContractFunction","ProxyProvider","getTransactions","contractAddress","logo","gif1","data","getMintTransaction","publicEndpointSetup","GetAddress","Home","count","setCount","address","success","fail","hasActiveTransactions","useGetActiveTransactionsStatus","network","apiAddress","state","setState","transactions","transactionsFetched","undefined","account","console","log","fetchData","timeout","then","useEffect","add","factor","syncProviderConfig","provider","getDefault","sync","createSmartContractInstance","abi","SCaddress","contract","interfaces","map","iface","name","networkProvider","networkConfig","getNetworkConfig","jsonContent","JSON","parse","stringify","registry","extend","abiRegistry","remapToKnownTypes","getAbi","getEndpoint","response","runQuery","func","args","caller","mintx","signer","LoggedUserAccount","nonce","setNonce","getNonceThenIncrement","getNonce","sign","send","awaitExecuted","txHash","getHash","toString","defaults","headers","post","explorer","res","get","value","transaction","smartContractResults","result","substring","lastIndexOf","pricestr","parseInt","height","paddingTop","marginTop","marginRight","marginLeft","marginBottom","paddingBottom","backgroundColor","String","width","padding","border","margin","borderColor","unlock","textAlign","alignContent","color"],"sources":["/home/adam/NFT_Minting_dApp/src/pages/Home/index.tsx"],"sourcesContent":["import React, { FC, useState } from \"react\";\nimport {\n  transactionServices,\n  useGetAccountInfo,\n  useGetNetworkConfig,\n  refreshAccount,\n} from \"@elrondnetwork/dapp-core\";\nimport axios, { AxiosResponse } from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { dAppName } from \"config\";\nimport { routeNames } from \"routes\";\nimport BigNumber from 'bignumber.js';\nimport { ProxyNetworkProvider } from \"@elrondnetwork/erdjs-network-providers\";\nimport {\n  Address,\n  NetworkConfig,\n  AbiRegistry,\n  SmartContractAbi,\n  SmartContract,\n  ContractFunction,\n  IProvider,\n  ProxyProvider,\n  Nonce,\n  QueryResponse,\n} from \"@elrondnetwork/erdjs\";\n//import { promises } from \"fs\";\n//import * as fs from \"fs\";\nimport { TransactionOnNetwork } from \"@elrondnetwork/erdjs/out/transactionOnNetwork\";\nimport { getTransactions } from \"apiRequests\";\nimport { contractAddress } from \"config\";\nimport logo from \"./logo.png\";\nimport gif1 from \"./gif1.gif\";\nimport { StateType } from \"./types\";\nimport \"./Homeindex.css\";\n//import { stringify } from \"querystring\";\nimport data from \"./test.json\";\nimport {\n  commonTxOperations,\n  getMintTransaction,\n  publicEndpointSetup,\n  GetAddress,\n} from \"./utils\";\nimport { sign } from \"crypto\";\nimport { config } from \"process\";\n//import { propTypes } from \"react-bootstrap/esm/Image\";\n\ninterface Props {\n  title: string;\n  initialCount: number;\n  SCaddress: Address;\n}\n\nexport const Home: FC<Props> = () => {\n  const [count, setCount] = useState(0);\n  const { address } = useGetAccountInfo();\n\n  /**************************************************Block Jdid **************************/\n  const { success, fail, hasActiveTransactions } =\n    transactionServices.useGetActiveTransactionsStatus();\n\n  const {\n    network: { apiAddress },\n  } = useGetNetworkConfig();\n  //console.log(\"******************\", apiAddress); //https://devnet-api.elrond.com\n\n  const [state, setState] = React.useState<StateType>({\n    transactions: [],\n    transactionsFetched: undefined,\n  });\n  const account = useGetAccountInfo();\n  console.log(\"***ACCOUNT ADRESS***:\", account.address); //erd14vwdlxxn93nxpph830f00y5g6qal3nndp7mtjg00verhtykp9nnqrmethw\n\n  const fetchData = () => {\n    if (success || fail || !hasActiveTransactions) {\n      getTransactions({\n        apiAddress,\n        address: account.address,\n        timeout: 3000,\n        contractAddress,\n      }).then(({ data, success: transactionsFetched }) => {\n        refreshAccount();\n        setState({\n          transactions: data,\n          transactionsFetched,\n        });\n      });\n    }\n  };\n  React.useEffect(fetchData, [success, fail, hasActiveTransactions]);\n\n  const add = (factor = 1) => {\n    if (factor < 0) {\n      if (count > 0) setCount(count + factor);\n    } else {\n      setCount(count + factor);\n    }\n  };\n\n  const syncProviderConfig = async (provider: IProvider) => {\n    return NetworkConfig.getDefault().sync(provider);\n    //return UserSigner.fromWallet() get user wallet signer\n  };\n\n  function createSmartContractInstance(abi?: AbiRegistry, SCaddress?: string) {\n    const contract = new SmartContract({\n      address: SCaddress ? new Address(SCaddress) : undefined,\n      abi:\n        abi &&\n        new SmartContractAbi(\n          abi,\n          abi.interfaces.map((iface) => iface.name)\n        ),\n    });\n\n    return contract;\n  }\n\n  const abi = async () => {\n    let networkProvider = new ProxyNetworkProvider(\n      \"https://devnet-gateway.elrond.com\"\n    );\n    let networkConfig = await networkProvider.getNetworkConfig();\n    let provider = new ProxyProvider(\"https://devnet-gateway.elrond.com\");\n    await GetAddress(address);\n    await syncProviderConfig(provider);\n    let jsonContent = JSON.parse(JSON.stringify(data));\n    //let abi = new SmartContractAbi(abiRegistry, [\"MyContract\"]);\n    let registry = new AbiRegistry().extend(jsonContent);\n    let abiRegistry = registry.remapToKnownTypes();\n    console.log(abiRegistry);\n\n    let contract = createSmartContractInstance(\n      abiRegistry,\n      \"erd1qqqqqqqqqqqqqpgqdx22q4lg64w20fsscll2w5z5lc08whac5uhslwwwp7\"\n    );\n    console.log(contract);\n    console.log(contract.getAbi().getEndpoint(\"getNftPrice\"));\n    let response = await contract.runQuery(provider, {\n      func: new ContractFunction(\"getNftPrice\"),\n      args: [],\n      caller: new Address(\n        \"erd16ht3gyfw6xfcm9s89swczscas85y882am3atdar487mz3dzy5uhszny4gn\"\n      ),\n    });\n    let mintx = getMintTransaction(\n      \"erd1qqqqqqqqqqqqqpgqdx22q4lg64w20fsscll2w5z5lc08whac5uhslwwwp7\",\n      14000000,\n      2\n    );\n    const { signer, LoggedUserAccount } = await publicEndpointSetup(provider);\n    console.log(LoggedUserAccount.nonce);\n    mintx.setNonce(LoggedUserAccount.getNonceThenIncrement());\n    console.log(mintx.getNonce());\n    console.log(LoggedUserAccount.nonce);\n    signer.sign(mintx);\n    // await commonTxOperations(mintx, LoggedUserAccount, signer, provider);\n    console.log(LoggedUserAccount);\n    await mintx.send(provider);\n    await mintx.awaitExecuted(provider);\n    const txHash = mintx.getHash();\n    console.log(txHash.toString());\n    axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n    console.log(`Transaction: /transactions/${txHash}`);\n    let explorer = `https://devnet-gateway.elrond.com/transaction/${txHash}?withResults=true`;\n    let res = await axios.get(explorer);\n    let value = res.data.data.transaction.smartContractResults[0].data;\n    var result = value.substring(value.lastIndexOf(\"@\") + 1);\n    let pricestr = parseInt(result, 16);\n    console.log(pricestr);\n    return contract;\n  };\n\n  console.log(abi());\n\n  return (\n    <div\n      className=\"d-flex flex-fill align-items-center  rounded-pill\"\n      style={{\n        height: \"70vh\",\n        paddingTop: \"25%\",\n        marginTop: \"15%\",\n        marginRight: \"5%\",\n        marginLeft: \"5%\",\n        marginBottom: \"15%\",\n        paddingBottom: \"40%\",\n        backgroundColor: \"#2e765e\",\n      }}\n    >\n      <div className=\"row w-100 justify-content-between\">\n        <div className=\"col-12 col-md-8 col-lg-5 mx-auto\">\n          <img\n            src={String(logo)}\n            alt=\"Logo\"\n            className=\"rounded mx-auto d-block\"\n            style={{\n              width: \"370px\",\n              height: \"320px\",\n              marginTop: \"30%\",\n              padding: \"25px\",\n            }}\n          />\n\n          <div\n            className=\"card shadow-sm rounded-pill border border-warning p-4\"\n            style={{\n              width: \"100%\",\n              height: \"60%\",\n            }}\n          >\n            <div className=\"card-body text-center\">\n              <img\n                src={String(gif1)}\n                className=\"rounded border rounded-circle mx-auto d-block\"\n                style={{\n                  width: \"50%\",\n                  height: \"50%\",\n                  border: \"10px\",\n                  margin: \"2%\",\n                }}\n                alt=\"gif\"\n              ></img>\n              <h2 className=\"mb-3\" data-testid=\"title\">\n                {dAppName}\n              </h2>\n              <div className=\"container \">\n                {address ? (\n                  <button\n                    className=\"btn btn-lg mt-3 text-white\"\n                    style={{\n                      margin: \"10px\",\n                      backgroundColor: \"#00665d\",\n                    }}\n                    onClick={() => add()}\n                  >\n                    +\n                  </button>\n                ) : null}\n                {address ? <h5>{count}</h5> : null}\n                {address ? (\n                  <button\n                    className=\"btn btn-lg mt-3 text-white\"\n                    style={{\n                      margin: \"5px\",\n                      backgroundColor: \"#d2b48c\",\n                    }}\n                    onClick={() => add(-1)}\n                  >\n                    -\n                  </button>\n                ) : null}\n              </div>\n              {address ? (\n                <button\n                  className=\"btn btn-lg mt-3 text-white golden\"\n                  style={{\n                    margin: \"5px\",\n                    borderColor: \"#d2b48c\",\n                    backgroundColor: \"#00665d\",\n                  }}\n                >\n                  Mint\n                </button>\n              ) : null}{\" \"}\n              <br />\n              <br />\n              <p className=\"mb-3\">\n                This is the official N4P foresters NFTs Minting Site\n                <br /> Login using your Elrond wallet.\n              </p>\n              {!address ? (\n                <Link\n                  to={routeNames.unlock}\n                  className=\"btn btn-primary mt-3 text-white golden\"\n                  data-testid=\"loginBtn\"\n                >\n                  Login\n                </Link>\n              ) : null}\n            </div>\n          </div>\n\n          <p\n            style={{\n              padding: \"15px\",\n              textAlign: \"center\",\n              alignContent: \"center\",\n              color: \"white\",\n            }}\n          >\n            We have set the gas limit to 14000000 for the contract to successfully\n            mint your NFT. We recommend that you do not lower the gas limit.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}