{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TokenIdentifierValue = exports.TokenIdentifierType = void 0;\n\nconst types_1 = require(\"./types\");\n\nclass TokenIdentifierType extends types_1.PrimitiveType {\n  constructor() {\n    super(\"TokenIdentifier\");\n  }\n\n  getClassName() {\n    return TokenIdentifierType.ClassName;\n  }\n\n}\n\nexports.TokenIdentifierType = TokenIdentifierType;\nTokenIdentifierType.ClassName = \"TokenIdentifierType\";\n\nclass TokenIdentifierValue extends types_1.PrimitiveValue {\n  constructor(value) {\n    super(new TokenIdentifierType());\n    this.value = value;\n  }\n\n  getClassName() {\n    return TokenIdentifierValue.ClassName;\n  }\n\n  getLength() {\n    return this.value.length;\n  }\n  /**\r\n   * Returns whether two objects have the same value.\r\n   */\n\n\n  equals(other) {\n    if (this.getLength() != other.getLength()) {\n      return false;\n    }\n\n    return this.value.equals(other.value);\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n  toString() {\n    return this.value.toString();\n  }\n\n}\n\nexports.TokenIdentifierValue = TokenIdentifierValue;\nTokenIdentifierValue.ClassName = \"TokenIdentifierValue\";","map":{"version":3,"sources":["../../../src/smartcontracts/typesystem/tokenIdentifier.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEA,MAAa,mBAAb,SAAyC,OAAA,CAAA,aAAzC,CAAsD;EAGlD,WAAA,GAAA;IACI,MAAM,iBAAN;EACH;;EAED,YAAY,GAAA;IACR,OAAO,mBAAmB,CAAC,SAA3B;EACH;;AATiD;;AAAtD,OAAA,CAAA,mBAAA,GAAA,mBAAA;AACW,mBAAA,CAAA,SAAA,GAAY,qBAAZ;;AAWX,MAAa,oBAAb,SAA0C,OAAA,CAAA,cAA1C,CAAwD;EAIpD,WAAA,CAAY,KAAZ,EAAyB;IACrB,MAAM,IAAI,mBAAJ,EAAN;IACA,KAAK,KAAL,GAAa,KAAb;EACH;;EAED,YAAY,GAAA;IACR,OAAO,oBAAoB,CAAC,SAA5B;EACH;;EAED,SAAS,GAAA;IACL,OAAO,KAAK,KAAL,CAAW,MAAlB;EACH;EAED;;AAEG;;;EACH,MAAM,CAAC,KAAD,EAA4B;IAC9B,IAAI,KAAK,SAAL,MAAoB,KAAK,CAAC,SAAN,EAAxB,EAA2C;MACvC,OAAO,KAAP;IACH;;IAED,OAAO,KAAK,KAAL,CAAW,MAAX,CAAkB,KAAK,CAAC,KAAxB,CAAP;EACH;;EAED,OAAO,GAAA;IACH,OAAO,KAAK,KAAZ;EACH;;EAED,QAAQ,GAAA;IACJ,OAAO,KAAK,KAAL,CAAW,QAAX,EAAP;EACH;;AAlCmD;;AAAxD,OAAA,CAAA,oBAAA,GAAA,oBAAA;AACW,oBAAA,CAAA,SAAA,GAAY,sBAAZ","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TokenIdentifierValue = exports.TokenIdentifierType = void 0;\r\nconst types_1 = require(\"./types\");\r\nclass TokenIdentifierType extends types_1.PrimitiveType {\r\n    constructor() {\r\n        super(\"TokenIdentifier\");\r\n    }\r\n    getClassName() {\r\n        return TokenIdentifierType.ClassName;\r\n    }\r\n}\r\nexports.TokenIdentifierType = TokenIdentifierType;\r\nTokenIdentifierType.ClassName = \"TokenIdentifierType\";\r\nclass TokenIdentifierValue extends types_1.PrimitiveValue {\r\n    constructor(value) {\r\n        super(new TokenIdentifierType());\r\n        this.value = value;\r\n    }\r\n    getClassName() {\r\n        return TokenIdentifierValue.ClassName;\r\n    }\r\n    getLength() {\r\n        return this.value.length;\r\n    }\r\n    /**\r\n     * Returns whether two objects have the same value.\r\n     */\r\n    equals(other) {\r\n        if (this.getLength() != other.getLength()) {\r\n            return false;\r\n        }\r\n        return this.value.equals(other.value);\r\n    }\r\n    valueOf() {\r\n        return this.value;\r\n    }\r\n    toString() {\r\n        return this.value.toString();\r\n    }\r\n}\r\nexports.TokenIdentifierValue = TokenIdentifierValue;\r\nTokenIdentifierValue.ClassName = \"TokenIdentifierValue\";\r\n//# sourceMappingURL=tokenIdentifier.js.map"]},"metadata":{},"sourceType":"script"}