{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Result = void 0;\n\nconst errors_1 = require(\"../errors\");\n\nconst utils_1 = require(\"../utils\");\n\nconst argSerializer_1 = require(\"./argSerializer\");\n\nvar Result;\n\n(function (Result) {\n  function isSuccess(result) {\n    return result.getReturnCode().isSuccess();\n  }\n\n  Result.isSuccess = isSuccess;\n\n  function assertSuccess(result) {\n    if (result.isSuccess()) {\n      return;\n    }\n\n    throw new errors_1.ErrContract(`${result.getReturnCode()}: ${result.getReturnMessage()}`);\n  }\n\n  Result.assertSuccess = assertSuccess;\n\n  function outputTyped(result) {\n    result.assertSuccess();\n    let endpointDefinition = result.getEndpointDefinition();\n    utils_1.guardValueIsSet(\"endpointDefinition\", endpointDefinition);\n    let buffers = result.outputUntyped();\n    let values = new argSerializer_1.ArgSerializer().buffersToValues(buffers, endpointDefinition.output);\n    return values;\n  }\n\n  Result.outputTyped = outputTyped;\n\n  function unpackOutput(result) {\n    let values = result.outputTyped().map(value => value === null || value === void 0 ? void 0 : value.valueOf());\n\n    if (values.length <= 1) {\n      return values[0];\n    }\n\n    return values;\n  }\n\n  Result.unpackOutput = unpackOutput;\n})(Result = exports.Result || (exports.Result = {}));","map":{"version":3,"sources":["../../src/smartcontracts/result.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,QAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,MAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AACA,MAAA,eAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAIA,IAAiB,MAAjB;;AAAA,CAAA,UAAiB,MAAjB,EAAuB;EAcnB,SAAgB,SAAhB,CAA0B,MAA1B,EAAyC;IACrC,OAAO,MAAM,CAAC,aAAP,GAAuB,SAAvB,EAAP;EACH;;EAFe,MAAA,CAAA,SAAA,GAAS,SAAT;;EAIhB,SAAgB,aAAhB,CAA8B,MAA9B,EAA6C;IACzC,IAAI,MAAM,CAAC,SAAP,EAAJ,EAAwB;MACpB;IACH;;IAED,MAAM,IAAI,QAAA,CAAA,WAAJ,CAAgB,GAAG,MAAM,CAAC,aAAP,EAAsB,KAAK,MAAM,CAAC,gBAAP,EAAyB,EAAvE,CAAN;EACH;;EANe,MAAA,CAAA,aAAA,GAAa,aAAb;;EAQhB,SAAgB,WAAhB,CAA4B,MAA5B,EAA2C;IACvC,MAAM,CAAC,aAAP;IAEA,IAAI,kBAAkB,GAAG,MAAM,CAAC,qBAAP,EAAzB;IACA,OAAA,CAAA,eAAA,CAAgB,oBAAhB,EAAsC,kBAAtC;IAEA,IAAI,OAAO,GAAG,MAAM,CAAC,aAAP,EAAd;IACA,IAAI,MAAM,GAAG,IAAI,eAAA,CAAA,aAAJ,GAAoB,eAApB,CAAoC,OAApC,EAA6C,kBAAmB,CAAC,MAAjE,CAAb;IACA,OAAO,MAAP;EACH;;EATe,MAAA,CAAA,WAAA,GAAW,WAAX;;EAYhB,SAAgB,YAAhB,CAA6B,MAA7B,EAA4C;IACxC,IAAI,MAAM,GAAG,MAAM,CAAC,WAAP,GAAqB,GAArB,CAA0B,KAAD,IAAW,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAK,KAAA,CAAL,GAAA,KAAK,CAAE,OAAP,EAApC,CAAb;;IACA,IAAI,MAAM,CAAC,MAAP,IAAiB,CAArB,EAAwB;MACpB,OAAO,MAAM,CAAC,CAAD,CAAb;IACH;;IACD,OAAO,MAAP;EACH;;EANe,MAAA,CAAA,YAAA,GAAY,YAAZ;AAOnB,CA7CD,EAAiB,MAAM,GAAN,OAAA,CAAA,MAAA,KAAA,OAAA,CAAA,MAAA,GAAM,EAAN,CAAjB","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Result = void 0;\r\nconst errors_1 = require(\"../errors\");\r\nconst utils_1 = require(\"../utils\");\r\nconst argSerializer_1 = require(\"./argSerializer\");\r\nvar Result;\r\n(function (Result) {\r\n    function isSuccess(result) {\r\n        return result.getReturnCode().isSuccess();\r\n    }\r\n    Result.isSuccess = isSuccess;\r\n    function assertSuccess(result) {\r\n        if (result.isSuccess()) {\r\n            return;\r\n        }\r\n        throw new errors_1.ErrContract(`${result.getReturnCode()}: ${result.getReturnMessage()}`);\r\n    }\r\n    Result.assertSuccess = assertSuccess;\r\n    function outputTyped(result) {\r\n        result.assertSuccess();\r\n        let endpointDefinition = result.getEndpointDefinition();\r\n        utils_1.guardValueIsSet(\"endpointDefinition\", endpointDefinition);\r\n        let buffers = result.outputUntyped();\r\n        let values = new argSerializer_1.ArgSerializer().buffersToValues(buffers, endpointDefinition.output);\r\n        return values;\r\n    }\r\n    Result.outputTyped = outputTyped;\r\n    function unpackOutput(result) {\r\n        let values = result.outputTyped().map((value) => value === null || value === void 0 ? void 0 : value.valueOf());\r\n        if (values.length <= 1) {\r\n            return values[0];\r\n        }\r\n        return values;\r\n    }\r\n    Result.unpackOutput = unpackOutput;\r\n})(Result = exports.Result || (exports.Result = {}));\r\n//# sourceMappingURL=result.js.map"]},"metadata":{},"sourceType":"script"}