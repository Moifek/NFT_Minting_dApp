{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ErrContractQuery = exports.ErrNetworkProvider = exports.ErrUnexpectedCondition = exports.Err = void 0;\n/**\n * The base class for exceptions (errors).\n */\n\nclass Err extends Error {\n  constructor(message, inner) {\n    super(message);\n    this.inner = undefined;\n    this.inner = inner;\n  }\n\n}\n\nexports.Err = Err;\n/**\n * Signals an unexpected condition.\n */\n\nclass ErrUnexpectedCondition extends Err {\n  constructor(message) {\n    super(`Unexpected condition: [${message}]`);\n  }\n\n}\n\nexports.ErrUnexpectedCondition = ErrUnexpectedCondition;\n/**\n * Signals an error that happened during a request against the Network.\n */\n\nclass ErrNetworkProvider extends Err {\n  constructor(url, error, inner) {\n    let message = `Request error on url [${url}]: [${error}]`;\n    super(message, inner);\n  }\n\n}\n\nexports.ErrNetworkProvider = ErrNetworkProvider;\n/**\n * Signals a generic error in the context of querying Smart Contracts.\n */\n\nclass ErrContractQuery extends Err {\n  constructor(originalError) {\n    super(originalError.message.replace(\"executeQuery:\", \"\"));\n  }\n\n}\n\nexports.ErrContractQuery = ErrContractQuery;","map":{"version":3,"sources":["../src/errors.ts"],"names":[],"mappings":";;;;;;AAAA;;AAEG;;AACH,MAAa,GAAb,SAAyB,KAAzB,CAA8B;EAG1B,WAAA,CAAmB,OAAnB,EAAoC,KAApC,EAAiD;IAC7C,MAAM,OAAN;IAHJ,KAAA,KAAA,GAA2B,SAA3B;IAII,KAAK,KAAL,GAAa,KAAb;EACH;;AANyB;;AAA9B,OAAA,CAAA,GAAA,GAAA,GAAA;AASA;;AAEG;;AACH,MAAa,sBAAb,SAA4C,GAA5C,CAA+C;EAC3C,WAAA,CAAmB,OAAnB,EAAkC;IAC9B,MAAM,0BAA0B,OAAO,GAAvC;EACH;;AAH0C;;AAA/C,OAAA,CAAA,sBAAA,GAAA,sBAAA;AAMA;;AAEG;;AACH,MAAa,kBAAb,SAAwC,GAAxC,CAA2C;EACvC,WAAA,CAAmB,GAAnB,EAAgC,KAAhC,EAA+C,KAA/C,EAA4D;IACxD,IAAI,OAAO,GAAG,yBAAyB,GAAG,OAAO,KAAK,GAAtD;IACA,MAAM,OAAN,EAAe,KAAf;EACH;;AAJsC;;AAA3C,OAAA,CAAA,kBAAA,GAAA,kBAAA;AAQA;;AAEG;;AACH,MAAa,gBAAb,SAAsC,GAAtC,CAAyC;EACrC,WAAA,CAAmB,aAAnB,EAAuC;IACnC,MAAM,aAAa,CAAC,OAAd,CAAsB,OAAtB,CAA8B,eAA9B,EAA+C,EAA/C,CAAN;EACH;;AAHoC;;AAAzC,OAAA,CAAA,gBAAA,GAAA,gBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrContractQuery = exports.ErrNetworkProvider = exports.ErrUnexpectedCondition = exports.Err = void 0;\n/**\n * The base class for exceptions (errors).\n */\nclass Err extends Error {\n    constructor(message, inner) {\n        super(message);\n        this.inner = undefined;\n        this.inner = inner;\n    }\n}\nexports.Err = Err;\n/**\n * Signals an unexpected condition.\n */\nclass ErrUnexpectedCondition extends Err {\n    constructor(message) {\n        super(`Unexpected condition: [${message}]`);\n    }\n}\nexports.ErrUnexpectedCondition = ErrUnexpectedCondition;\n/**\n * Signals an error that happened during a request against the Network.\n */\nclass ErrNetworkProvider extends Err {\n    constructor(url, error, inner) {\n        let message = `Request error on url [${url}]: [${error}]`;\n        super(message, inner);\n    }\n}\nexports.ErrNetworkProvider = ErrNetworkProvider;\n/**\n * Signals a generic error in the context of querying Smart Contracts.\n */\nclass ErrContractQuery extends Err {\n    constructor(originalError) {\n        super(originalError.message.replace(\"executeQuery:\", \"\"));\n    }\n}\nexports.ErrContractQuery = ErrContractQuery;\n//# sourceMappingURL=errors.js.map"]},"metadata":{},"sourceType":"script"}