{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ValidatorPublicKey = exports.ValidatorSecretKey = exports.BLS = exports.VALIDATOR_PUBKEY_LENGTH = exports.VALIDATOR_SECRETKEY_LENGTH = void 0;\n\nconst errors = __importStar(require(\"../errors\"));\n\nconst utils_1 = require(\"../utils\");\n\nconst pem_1 = require(\"./pem\");\n\nconst bls = require('@elrondnetwork/bls-wasm');\n\nexports.VALIDATOR_SECRETKEY_LENGTH = 32;\nexports.VALIDATOR_PUBKEY_LENGTH = 96;\n\nclass BLS {\n  static initIfNecessary() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (BLS.isInitialized) {\n        return;\n      }\n\n      yield bls.init(bls.BLS12_381);\n      BLS.isInitialized = true;\n    });\n  }\n\n  static guardInitialized() {\n    if (!BLS.isInitialized) {\n      throw new errors.ErrInvariantFailed(\"BLS modules are not initalized. Make sure that 'await BLS.initIfNecessary()' is called correctly.\");\n    }\n  }\n\n}\n\nexports.BLS = BLS;\nBLS.isInitialized = false;\n\nclass ValidatorSecretKey {\n  constructor(buffer) {\n    BLS.guardInitialized();\n    utils_1.guardLength(buffer, exports.VALIDATOR_SECRETKEY_LENGTH);\n    this.secretKey = new bls.SecretKey();\n    this.secretKey.setLittleEndian(Uint8Array.from(buffer));\n    this.publicKey = this.secretKey.getPublicKey();\n  }\n\n  static fromPem(text) {\n    let index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return pem_1.parseValidatorKey(text, index);\n  }\n\n  generatePublicKey() {\n    let buffer = Buffer.from(this.publicKey.serialize());\n    return new ValidatorPublicKey(buffer);\n  }\n\n  sign(message) {\n    let signatureObject = this.secretKey.sign(message);\n    let signature = Buffer.from(signatureObject.serialize());\n    return signature;\n  }\n\n  hex() {\n    return this.valueOf().toString(\"hex\");\n  }\n\n  valueOf() {\n    return Buffer.from(this.secretKey.serialize());\n  }\n\n}\n\nexports.ValidatorSecretKey = ValidatorSecretKey;\n\nclass ValidatorPublicKey {\n  constructor(buffer) {\n    utils_1.guardLength(buffer, exports.VALIDATOR_PUBKEY_LENGTH);\n    this.buffer = buffer;\n  }\n\n  hex() {\n    return this.buffer.toString(\"hex\");\n  }\n\n  valueOf() {\n    return this.buffer;\n  }\n\n}\n\nexports.ValidatorPublicKey = ValidatorPublicKey;","map":{"version":3,"sources":["../../src/walletcore/validatorKeys.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,MAAA,GAAA,YAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;AACA,MAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AACA,MAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,MAAM,GAAG,GAAG,OAAO,CAAC,yBAAD,CAAnB;;AAEa,OAAA,CAAA,0BAAA,GAA6B,EAA7B;AACA,OAAA,CAAA,uBAAA,GAA0B,EAA1B;;AAEb,MAAa,GAAb,CAAgB;EAGgB,OAAf,eAAe,GAAA;;MACxB,IAAI,GAAG,CAAC,aAAR,EAAuB;QACnB;MACH;;MAED,MAAM,GAAG,CAAC,IAAJ,CAAS,GAAG,CAAC,SAAb,CAAN;MAEA,GAAG,CAAC,aAAJ,GAAoB,IAApB;IACH,C;EAAA;;EAEsB,OAAhB,gBAAgB,GAAA;IACnB,IAAI,CAAC,GAAG,CAAC,aAAT,EAAwB;MACpB,MAAM,IAAI,MAAM,CAAC,kBAAX,CAA8B,mGAA9B,CAAN;IACH;EACJ;;AAjBW;;AAAhB,OAAA,CAAA,GAAA,GAAA,GAAA;AACmB,GAAA,CAAA,aAAA,GAAyB,KAAzB;;AAmBnB,MAAa,kBAAb,CAA+B;EAI3B,WAAA,CAAY,MAAZ,EAA0B;IACtB,GAAG,CAAC,gBAAJ;IACA,OAAA,CAAA,WAAA,CAAY,MAAZ,EAAoB,OAAA,CAAA,0BAApB;IAEA,KAAK,SAAL,GAAiB,IAAI,GAAG,CAAC,SAAR,EAAjB;IACA,KAAK,SAAL,CAAe,eAAf,CAA+B,UAAU,CAAC,IAAX,CAAgB,MAAhB,CAA/B;IACA,KAAK,SAAL,GAAiB,KAAK,SAAL,CAAe,YAAf,EAAjB;EACH;;EAEa,OAAP,OAAO,CAAC,IAAD,EAAgC;IAAA,IAAjB,KAAiB,uEAAD,CAAC;IAC1C,OAAO,KAAA,CAAA,iBAAA,CAAkB,IAAlB,EAAwB,KAAxB,CAAP;EACH;;EAED,iBAAiB,GAAA;IACb,IAAI,MAAM,GAAG,MAAM,CAAC,IAAP,CAAY,KAAK,SAAL,CAAe,SAAf,EAAZ,CAAb;IACA,OAAO,IAAI,kBAAJ,CAAuB,MAAvB,CAAP;EACH;;EAED,IAAI,CAAC,OAAD,EAAgB;IAChB,IAAI,eAAe,GAAG,KAAK,SAAL,CAAe,IAAf,CAAoB,OAApB,CAAtB;IACA,IAAI,SAAS,GAAG,MAAM,CAAC,IAAP,CAAY,eAAe,CAAC,SAAhB,EAAZ,CAAhB;IACA,OAAO,SAAP;EACH;;EAED,GAAG,GAAA;IACC,OAAO,KAAK,OAAL,GAAe,QAAf,CAAwB,KAAxB,CAAP;EACH;;EAED,OAAO,GAAA;IACH,OAAO,MAAM,CAAC,IAAP,CAAY,KAAK,SAAL,CAAe,SAAf,EAAZ,CAAP;EACH;;AAlC0B;;AAA/B,OAAA,CAAA,kBAAA,GAAA,kBAAA;;AAqCA,MAAa,kBAAb,CAA+B;EAG3B,WAAA,CAAY,MAAZ,EAA0B;IACtB,OAAA,CAAA,WAAA,CAAY,MAAZ,EAAoB,OAAA,CAAA,uBAApB;IAEA,KAAK,MAAL,GAAc,MAAd;EACH;;EAED,GAAG,GAAA;IACC,OAAO,KAAK,MAAL,CAAY,QAAZ,CAAqB,KAArB,CAAP;EACH;;EAED,OAAO,GAAA;IACH,OAAO,KAAK,MAAZ;EACH;;AAf0B;;AAA/B,OAAA,CAAA,kBAAA,GAAA,kBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ValidatorPublicKey = exports.ValidatorSecretKey = exports.BLS = exports.VALIDATOR_PUBKEY_LENGTH = exports.VALIDATOR_SECRETKEY_LENGTH = void 0;\r\nconst errors = __importStar(require(\"../errors\"));\r\nconst utils_1 = require(\"../utils\");\r\nconst pem_1 = require(\"./pem\");\r\nconst bls = require('@elrondnetwork/bls-wasm');\r\nexports.VALIDATOR_SECRETKEY_LENGTH = 32;\r\nexports.VALIDATOR_PUBKEY_LENGTH = 96;\r\nclass BLS {\r\n    static initIfNecessary() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (BLS.isInitialized) {\r\n                return;\r\n            }\r\n            yield bls.init(bls.BLS12_381);\r\n            BLS.isInitialized = true;\r\n        });\r\n    }\r\n    static guardInitialized() {\r\n        if (!BLS.isInitialized) {\r\n            throw new errors.ErrInvariantFailed(\"BLS modules are not initalized. Make sure that 'await BLS.initIfNecessary()' is called correctly.\");\r\n        }\r\n    }\r\n}\r\nexports.BLS = BLS;\r\nBLS.isInitialized = false;\r\nclass ValidatorSecretKey {\r\n    constructor(buffer) {\r\n        BLS.guardInitialized();\r\n        utils_1.guardLength(buffer, exports.VALIDATOR_SECRETKEY_LENGTH);\r\n        this.secretKey = new bls.SecretKey();\r\n        this.secretKey.setLittleEndian(Uint8Array.from(buffer));\r\n        this.publicKey = this.secretKey.getPublicKey();\r\n    }\r\n    static fromPem(text, index = 0) {\r\n        return pem_1.parseValidatorKey(text, index);\r\n    }\r\n    generatePublicKey() {\r\n        let buffer = Buffer.from(this.publicKey.serialize());\r\n        return new ValidatorPublicKey(buffer);\r\n    }\r\n    sign(message) {\r\n        let signatureObject = this.secretKey.sign(message);\r\n        let signature = Buffer.from(signatureObject.serialize());\r\n        return signature;\r\n    }\r\n    hex() {\r\n        return this.valueOf().toString(\"hex\");\r\n    }\r\n    valueOf() {\r\n        return Buffer.from(this.secretKey.serialize());\r\n    }\r\n}\r\nexports.ValidatorSecretKey = ValidatorSecretKey;\r\nclass ValidatorPublicKey {\r\n    constructor(buffer) {\r\n        utils_1.guardLength(buffer, exports.VALIDATOR_PUBKEY_LENGTH);\r\n        this.buffer = buffer;\r\n    }\r\n    hex() {\r\n        return this.buffer.toString(\"hex\");\r\n    }\r\n    valueOf() {\r\n        return this.buffer;\r\n    }\r\n}\r\nexports.ValidatorPublicKey = ValidatorPublicKey;\r\n//# sourceMappingURL=validatorKeys.js.map"]},"metadata":{},"sourceType":"script"}