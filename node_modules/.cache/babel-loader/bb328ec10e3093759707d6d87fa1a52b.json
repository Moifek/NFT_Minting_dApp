{"ast":null,"code":"import { dAppName } from 'config';\nimport withPageTitle from './components/PageTitle';\nimport Dashboard from './pages/Dashboard';\nimport Home from './pages/Home';\nimport Transaction from './pages/Transaction';\nexport const routeNames = {\n  home: '/',\n  dashboard: '/dashboard',\n  transaction: '/transaction',\n  unlock: '/unlock',\n  ledger: '/ledger',\n  walletconnect: '/walletconnect'\n};\nconst routes = [{\n  path: routeNames.home,\n  title: 'Home',\n  component: Home\n}, {\n  path: routeNames.dashboard,\n  title: 'Dashboard',\n  component: Dashboard,\n  authenticatedRoute: true\n}, {\n  path: routeNames.transaction,\n  title: 'Transaction',\n  component: Transaction\n}];\nconst mappedRoutes = routes.map(route => {\n  const title = route.title ? `${route.title} • Elrond ${dAppName}` : `Elrond ${dAppName}`;\n  const requiresAuth = Boolean(route.authenticatedRoute);\n  const wrappedComponent = withPageTitle(title, route.component);\n  return {\n    path: route.path,\n    component: wrappedComponent,\n    authenticatedRoute: requiresAuth\n  };\n});\nexport default mappedRoutes;","map":{"version":3,"names":["dAppName","withPageTitle","Dashboard","Home","Transaction","routeNames","home","dashboard","transaction","unlock","ledger","walletconnect","routes","path","title","component","authenticatedRoute","mappedRoutes","map","route","requiresAuth","Boolean","wrappedComponent"],"sources":["C:/Users/Mmo-Omen/Documents/GitHub/NFT_Minting_dApp/src/routes.ts"],"sourcesContent":["import { dAppName } from 'config';\r\nimport withPageTitle from './components/PageTitle';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Home from './pages/Home';\r\nimport Transaction from './pages/Transaction';\r\n\r\nexport const routeNames = {\r\n  home: '/',\r\n  dashboard: '/dashboard',\r\n  transaction: '/transaction',\r\n  unlock: '/unlock',\r\n  ledger: '/ledger',\r\n  walletconnect: '/walletconnect'\r\n};\r\n\r\nconst routes: Array<any> = [\r\n  {\r\n    path: routeNames.home,\r\n    title: 'Home',\r\n    component: Home\r\n  },\r\n  {\r\n    path: routeNames.dashboard,\r\n    title: 'Dashboard',\r\n    component: Dashboard,\r\n    authenticatedRoute: true\r\n  },\r\n  {\r\n    path: routeNames.transaction,\r\n    title: 'Transaction',\r\n    component: Transaction\r\n  }\r\n];\r\n\r\nconst mappedRoutes = routes.map((route) => {\r\n  const title = route.title\r\n    ? `${route.title} • Elrond ${dAppName}`\r\n    : `Elrond ${dAppName}`;\r\n\r\n  const requiresAuth = Boolean(route.authenticatedRoute);\r\n  const wrappedComponent = withPageTitle(title, route.component);\r\n\r\n  return {\r\n    path: route.path,\r\n    component: wrappedComponent,\r\n    authenticatedRoute: requiresAuth\r\n  };\r\n});\r\n\r\nexport default mappedRoutes;\r\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,QAAzB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,OAAO,MAAMC,UAAU,GAAG;EACxBC,IAAI,EAAE,GADkB;EAExBC,SAAS,EAAE,YAFa;EAGxBC,WAAW,EAAE,cAHW;EAIxBC,MAAM,EAAE,SAJgB;EAKxBC,MAAM,EAAE,SALgB;EAMxBC,aAAa,EAAE;AANS,CAAnB;AASP,MAAMC,MAAkB,GAAG,CACzB;EACEC,IAAI,EAAER,UAAU,CAACC,IADnB;EAEEQ,KAAK,EAAE,MAFT;EAGEC,SAAS,EAAEZ;AAHb,CADyB,EAMzB;EACEU,IAAI,EAAER,UAAU,CAACE,SADnB;EAEEO,KAAK,EAAE,WAFT;EAGEC,SAAS,EAAEb,SAHb;EAIEc,kBAAkB,EAAE;AAJtB,CANyB,EAYzB;EACEH,IAAI,EAAER,UAAU,CAACG,WADnB;EAEEM,KAAK,EAAE,aAFT;EAGEC,SAAS,EAAEX;AAHb,CAZyB,CAA3B;AAmBA,MAAMa,YAAY,GAAGL,MAAM,CAACM,GAAP,CAAYC,KAAD,IAAW;EACzC,MAAML,KAAK,GAAGK,KAAK,CAACL,KAAN,GACT,GAAEK,KAAK,CAACL,KAAM,aAAYd,QAAS,EAD1B,GAET,UAASA,QAAS,EAFvB;EAIA,MAAMoB,YAAY,GAAGC,OAAO,CAACF,KAAK,CAACH,kBAAP,CAA5B;EACA,MAAMM,gBAAgB,GAAGrB,aAAa,CAACa,KAAD,EAAQK,KAAK,CAACJ,SAAd,CAAtC;EAEA,OAAO;IACLF,IAAI,EAAEM,KAAK,CAACN,IADP;IAELE,SAAS,EAAEO,gBAFN;IAGLN,kBAAkB,EAAEI;EAHf,CAAP;AAKD,CAboB,CAArB;AAeA,eAAeH,YAAf"},"metadata":{},"sourceType":"module"}