{"ast":null,"code":"import axios from \"axios\";\nlet LoggedUseraddress = \"\";\nexport const GetAddress = async LoggedUserAddress => {\n  LoggedUseraddress = LoggedUserAddress;\n};\n_c = GetAddress;\n\nconst fetchTransactions = url => async function getTransactions(_ref) {\n  let {\n    apiAddress,\n    address,\n    contractAddress,\n    timeout\n  } = _ref;\n\n  try {\n    const {\n      data\n    } = await axios.get(`${apiAddress}${url}`, {\n      params: {\n        sender: address,\n        receiver: contractAddress,\n        condition: \"must\",\n        size: 25\n      },\n      timeout\n    });\n    return {\n      data: data,\n      success: data !== undefined\n    };\n  } catch (err) {\n    return {\n      success: false\n    };\n  }\n};\n\nexport const getTransactions = fetchTransactions(\"/transactions\");\nexport const getTransactionsCount = fetchTransactions(\"/transactions/count\");\n\nvar _c;\n\n$RefreshReg$(_c, \"GetAddress\");","map":{"version":3,"sources":["/home/mmo/workspace/NFT_Minting_dApp/src/apiRequests/index.tsx"],"names":["axios","LoggedUseraddress","GetAddress","LoggedUserAddress","fetchTransactions","url","getTransactions","apiAddress","address","contractAddress","timeout","data","get","params","sender","receiver","condition","size","success","undefined","err","getTransactionsCount"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAUA,IAAIC,iBAAiB,GAAG,EAAxB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAOC,iBAAP,IAAqC;AAC7DF,EAAAA,iBAAiB,GAAGE,iBAApB;AACD,CAFM;KAAMD,U;;AAIb,MAAME,iBAAiB,GAAIC,GAAD,IACxB,eAAeC,eAAf,OAK8B;AAAA,MALC;AAC7BC,IAAAA,UAD6B;AAE7BC,IAAAA,OAF6B;AAG7BC,IAAAA,eAH6B;AAI7BC,IAAAA;AAJ6B,GAKD;;AAC5B,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMX,KAAK,CAACY,GAAN,CAAW,GAAEL,UAAW,GAAEF,GAAI,EAA9B,EAAiC;AACtDQ,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAEN,OADF;AAENO,QAAAA,QAAQ,EAAEN,eAFJ;AAGNO,QAAAA,SAAS,EAAE,MAHL;AAINC,QAAAA,IAAI,EAAE;AAJA,OAD8C;AAOtDP,MAAAA;AAPsD,KAAjC,CAAvB;AAUA,WAAO;AACLC,MAAAA,IAAI,EAAEA,IADD;AAELO,MAAAA,OAAO,EAAEP,IAAI,KAAKQ;AAFb,KAAP;AAID,GAfD,CAeE,OAAOC,GAAP,EAAY;AACZ,WAAO;AACLF,MAAAA,OAAO,EAAE;AADJ,KAAP;AAGD;AACF,CA3BH;;AA6BA,OAAO,MAAMZ,eAAe,GAAGF,iBAAiB,CAAC,eAAD,CAAzC;AACP,OAAO,MAAMiB,oBAAoB,GAAGjB,iBAAiB,CAAC,qBAAD,CAA9C","sourcesContent":["import axios from \"axios\";\ninterface GetLatestTransactionsType {\n  apiAddress: string;\n  address: string;\n  contractAddress: string;\n  timeout: number;\n  page?: number;\n  url?: string;\n}\n\nlet LoggedUseraddress = \"\";\n\nexport const GetAddress = async (LoggedUserAddress: string) => {\n  LoggedUseraddress = LoggedUserAddress;\n};\n\nconst fetchTransactions = (url: string) =>\n  async function getTransactions({\n    apiAddress,\n    address,\n    contractAddress,\n    timeout,\n  }: GetLatestTransactionsType) {\n    try {\n      const { data } = await axios.get(`${apiAddress}${url}`, {\n        params: {\n          sender: address,\n          receiver: contractAddress,\n          condition: \"must\",\n          size: 25,\n        },\n        timeout,\n      });\n\n      return {\n        data: data,\n        success: data !== undefined,\n      };\n    } catch (err) {\n      return {\n        success: false,\n      };\n    }\n  };\n\nexport const getTransactions = fetchTransactions(\"/transactions\");\nexport const getTransactionsCount = fetchTransactions(\"/transactions/count\");\n"]},"metadata":{},"sourceType":"module"}