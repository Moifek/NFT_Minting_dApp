{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransactionStatus = void 0;\n/**\n * An abstraction for handling and interpreting the \"status\" field of a transaction.\n */\n\nclass TransactionStatus {\n  /**\n   * Creates a new TransactionStatus object.\n   */\n  constructor(status) {\n    this.status = (status || \"\").toLowerCase();\n  }\n  /**\n   * Creates an unknown status.\n   */\n\n\n  static createUnknown() {\n    return new TransactionStatus(\"unknown\");\n  }\n  /**\n   * Returns whether the transaction is pending (e.g. in mempool).\n   */\n\n\n  isPending() {\n    return this.status == \"received\" || this.status == \"pending\";\n  }\n  /**\n   * Returns whether the transaction has been executed (not necessarily with success).\n   */\n\n\n  isExecuted() {\n    return this.isSuccessful() || this.isFailed() || this.isInvalid();\n  }\n  /**\n   * Returns whether the transaction has been executed successfully.\n   */\n\n\n  isSuccessful() {\n    return this.status == \"executed\" || this.status == \"success\" || this.status == \"successful\";\n  }\n  /**\n   * Returns whether the transaction has been executed, but with a failure.\n   */\n\n\n  isFailed() {\n    return this.status == \"fail\" || this.status == \"failed\" || this.status == \"unsuccessful\" || this.isInvalid();\n  }\n  /**\n   * Returns whether the transaction has been executed, but marked as invalid (e.g. due to \"insufficient funds\").\n   */\n\n\n  isInvalid() {\n    return this.status == \"invalid\";\n  }\n\n  toString() {\n    return this.status;\n  }\n\n  valueOf() {\n    return this.status;\n  }\n\n  equals(other) {\n    if (!other) {\n      return false;\n    }\n\n    return this.status == other.status;\n  }\n\n}\n\nexports.TransactionStatus = TransactionStatus;","map":{"version":3,"mappings":";;;;;;AAAA;;;;AAGA,MAAaA,iBAAb,CAA8B;AAM1B;;;AAGAC,cAAYC,MAAZ,EAA0B;AACtB,SAAKA,MAAL,GAAc,CAACA,MAAM,IAAI,EAAX,EAAeC,WAAf,EAAd;AACH;AAED;;;;;AAGoB,SAAbC,aAAa;AAChB,WAAO,IAAIJ,iBAAJ,CAAsB,SAAtB,CAAP;AACH;AAED;;;;;AAGAK,WAAS;AACL,WACI,KAAKH,MAAL,IAAe,UAAf,IACA,KAAKA,MAAL,IAAe,SAFnB;AAIH;AAED;;;;;AAGAI,YAAU;AACN,WAAO,KAAKC,YAAL,MAAuB,KAAKC,QAAL,EAAvB,IAA0C,KAAKC,SAAL,EAAjD;AACH;AAED;;;;;AAGAF,cAAY;AACR,WACI,KAAKL,MAAL,IAAe,UAAf,IACA,KAAKA,MAAL,IAAe,SADf,IAEA,KAAKA,MAAL,IAAe,YAHnB;AAKH;AAED;;;;;AAGAM,UAAQ;AACJ,WACI,KAAKN,MAAL,IAAe,MAAf,IACA,KAAKA,MAAL,IAAe,QADf,IAEA,KAAKA,MAAL,IAAe,cAFf,IAGA,KAAKO,SAAL,EAJJ;AAMH;AAED;;;;;AAGAA,WAAS;AACL,WAAO,KAAKP,MAAL,IAAe,SAAtB;AACH;;AAEDQ,UAAQ;AACJ,WAAO,KAAKR,MAAZ;AACH;;AAEDS,SAAO;AACH,WAAO,KAAKT,MAAZ;AACH;;AAEDU,QAAM,CAACC,KAAD,EAAyB;AAC3B,QAAI,CAACA,KAAL,EAAY;AACR,aAAO,KAAP;AACH;;AAED,WAAO,KAAKX,MAAL,IAAeW,KAAK,CAACX,MAA5B;AACH;;AAjFyB;;AAA9BY","names":["TransactionStatus","constructor","status","toLowerCase","createUnknown","isPending","isExecuted","isSuccessful","isFailed","isInvalid","toString","valueOf","equals","other","exports"],"sourceRoot":"","sources":["../src/transactionStatus.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}