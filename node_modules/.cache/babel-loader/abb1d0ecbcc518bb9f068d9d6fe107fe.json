{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BooleanValue = exports.BooleanType = void 0;\n\nconst types_1 = require(\"./types\");\n\nclass BooleanType extends types_1.PrimitiveType {\n  constructor() {\n    super(\"bool\");\n  }\n\n  getClassName() {\n    return BooleanType.ClassName;\n  }\n\n}\n\nexports.BooleanType = BooleanType;\nBooleanType.ClassName = \"BooleanType\";\n/**\n * A boolean value fed to or fetched from a Smart Contract contract, as an immutable abstraction.\n */\n\nclass BooleanValue extends types_1.PrimitiveValue {\n  constructor(value) {\n    super(new BooleanType());\n    this.value = value;\n  }\n\n  getClassName() {\n    return BooleanValue.ClassName;\n  }\n  /**\n   * Returns whether two objects have the same value.\n   *\n   * @param other another BooleanValue\n   */\n\n\n  equals(other) {\n    return this.value === other.value;\n  }\n\n  isTrue() {\n    return this.value === true;\n  }\n\n  isFalse() {\n    return !this.isTrue();\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n}\n\nexports.BooleanValue = BooleanValue;\nBooleanValue.ClassName = \"BooleanValue\";","map":{"version":3,"sources":["../../../src/smartcontracts/typesystem/boolean.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEA,MAAa,WAAb,SAAiC,OAAA,CAAA,aAAjC,CAA8C;EAG1C,WAAA,GAAA;IACI,MAAM,MAAN;EACH;;EAED,YAAY,GAAA;IACR,OAAO,WAAW,CAAC,SAAnB;EACH;;AATyC;;AAA9C,OAAA,CAAA,WAAA,GAAA,WAAA;AACW,WAAA,CAAA,SAAA,GAAY,aAAZ;AAWX;;AAEG;;AACH,MAAa,YAAb,SAAkC,OAAA,CAAA,cAAlC,CAAgD;EAI5C,WAAA,CAAY,KAAZ,EAA0B;IACtB,MAAM,IAAI,WAAJ,EAAN;IACA,KAAK,KAAL,GAAa,KAAb;EACH;;EAED,YAAY,GAAA;IACR,OAAO,YAAY,CAAC,SAApB;EACH;EAED;;;;AAIG;;;EACH,MAAM,CAAC,KAAD,EAAoB;IACtB,OAAO,KAAK,KAAL,KAAe,KAAK,CAAC,KAA5B;EACH;;EAED,MAAM,GAAA;IACF,OAAO,KAAK,KAAL,KAAe,IAAtB;EACH;;EAED,OAAO,GAAA;IACH,OAAO,CAAC,KAAK,MAAL,EAAR;EACH;;EAED,OAAO,GAAA;IACH,OAAO,KAAK,KAAZ;EACH;;AAhC2C;;AAAhD,OAAA,CAAA,YAAA,GAAA,YAAA;AACW,YAAA,CAAA,SAAA,GAAY,cAAZ","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BooleanValue = exports.BooleanType = void 0;\nconst types_1 = require(\"./types\");\nclass BooleanType extends types_1.PrimitiveType {\n    constructor() {\n        super(\"bool\");\n    }\n    getClassName() {\n        return BooleanType.ClassName;\n    }\n}\nexports.BooleanType = BooleanType;\nBooleanType.ClassName = \"BooleanType\";\n/**\n * A boolean value fed to or fetched from a Smart Contract contract, as an immutable abstraction.\n */\nclass BooleanValue extends types_1.PrimitiveValue {\n    constructor(value) {\n        super(new BooleanType());\n        this.value = value;\n    }\n    getClassName() {\n        return BooleanValue.ClassName;\n    }\n    /**\n     * Returns whether two objects have the same value.\n     *\n     * @param other another BooleanValue\n     */\n    equals(other) {\n        return this.value === other.value;\n    }\n    isTrue() {\n        return this.value === true;\n    }\n    isFalse() {\n        return !this.isTrue();\n    }\n    valueOf() {\n        return this.value;\n    }\n}\nexports.BooleanValue = BooleanValue;\nBooleanValue.ClassName = \"BooleanValue\";\n//# sourceMappingURL=boolean.js.map"]},"metadata":{},"sourceType":"script"}