{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransactionOnNetwork = void 0;\n\nconst transactionStatus_1 = require(\"./transactionStatus\");\n\nconst contractResults_1 = require(\"./contractResults\");\n\nconst primitives_1 = require(\"./primitives\");\n\nconst transactionCompletionStrategy_1 = require(\"./transactionCompletionStrategy\");\n\nconst transactionLogs_1 = require(\"./transactionLogs\");\n\nconst transactionReceipt_1 = require(\"./transactionReceipt\");\n\nclass TransactionOnNetwork {\n  constructor(init) {\n    this.isCompleted = false;\n    this.hash = \"\";\n    this.type = \"\";\n    this.nonce = 0;\n    this.round = 0;\n    this.epoch = 0;\n    this.value = \"\";\n    this.receiver = new primitives_1.Address(\"\");\n    this.sender = new primitives_1.Address(\"\");\n    this.gasLimit = 0;\n    this.gasPrice = 0;\n    this.data = Buffer.from([]);\n    this.signature = \"\";\n    this.status = transactionStatus_1.TransactionStatus.createUnknown();\n    this.timestamp = 0;\n    this.blockNonce = 0;\n    this.hyperblockNonce = 0;\n    this.hyperblockHash = \"\";\n    this.receipt = new transactionReceipt_1.TransactionReceipt();\n    this.contractResults = new contractResults_1.ContractResults([]);\n    this.logs = new transactionLogs_1.TransactionLogs();\n    Object.assign(this, init);\n  }\n\n  static fromProxyHttpResponse(txHash, response) {\n    let result = TransactionOnNetwork.fromHttpResponse(txHash, response);\n    result.contractResults = contractResults_1.ContractResults.fromProxyHttpResponse(response.smartContractResults || []);\n    result.isCompleted = new transactionCompletionStrategy_1.TransactionCompletionStrategyOnProxy().isCompleted(result); // TODO: uniformize transaction status.\n\n    return result;\n  }\n\n  static fromApiHttpResponse(txHash, response) {\n    let result = TransactionOnNetwork.fromHttpResponse(txHash, response);\n    result.contractResults = contractResults_1.ContractResults.fromApiHttpResponse(response.results || []);\n    result.isCompleted = new transactionCompletionStrategy_1.TransactionCompletionStrategyOnAPI().isCompleted(result); // TODO: uniformize transaction status.\n\n    return result;\n  }\n\n  static fromHttpResponse(txHash, response) {\n    let result = new TransactionOnNetwork();\n    result.hash = txHash;\n    result.type = response.type || \"\";\n    result.nonce = response.nonce || 0;\n    result.round = response.round;\n    result.epoch = response.epoch || 0;\n    result.value = (response.value || 0).toString();\n    result.sender = new primitives_1.Address(response.sender);\n    result.receiver = new primitives_1.Address(response.receiver);\n    result.gasPrice = response.gasPrice || 0;\n    result.gasLimit = response.gasLimit || 0;\n    result.data = Buffer.from(response.data || \"\", \"base64\");\n    result.status = new transactionStatus_1.TransactionStatus(response.status);\n    result.timestamp = response.timestamp || 0;\n    result.blockNonce = response.blockNonce || 0;\n    result.hyperblockNonce = response.hyperblockNonce || 0;\n    result.hyperblockHash = response.hyperblockHash || \"\";\n    result.receipt = transactionReceipt_1.TransactionReceipt.fromHttpResponse(response.receipt || {});\n    result.logs = transactionLogs_1.TransactionLogs.fromHttpResponse(response.logs || {});\n    return result;\n  }\n\n  getDateTime() {\n    return new Date(this.timestamp * 1000);\n  }\n\n}\n\nexports.TransactionOnNetwork = TransactionOnNetwork;","map":{"version":3,"mappings":"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","names":["TransactionOnNetwork","constructor","init","primitives_1","Buffer","from","transactionStatus_1","createUnknown","transactionReceipt_1","contractResults_1","transactionLogs_1","Object","assign","fromProxyHttpResponse","txHash","response","result","fromHttpResponse","contractResults","smartContractResults","isCompleted","transactionCompletionStrategy_1","fromApiHttpResponse","results","hash","type","nonce","round","epoch","value","toString","sender","receiver","gasPrice","gasLimit","data","status","timestamp","blockNonce","hyperblockNonce","hyperblockHash","receipt","logs","getDateTime","Date","exports"],"sourceRoot":"","sources":["../src/transactions.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}