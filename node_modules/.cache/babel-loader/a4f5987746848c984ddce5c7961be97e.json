{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mmo-Omen\\\\Documents\\\\GitHub\\\\NFT_Minting_dApp\\\\src\\\\pages\\\\Dashboard\\\\Transactions\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useGetAccountInfo, DappUI, transactionServices, refreshAccount, useGetNetworkConfig } from '@elrondnetwork/dapp-core';\nimport { faExchangeAlt } from '@fortawesome/free-solid-svg-icons';\nimport { getTransactions } from 'apiRequests';\nimport { contractAddress } from 'config';\nimport TransactionsList from './TransactionsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Transactions = () => {\n  _s();\n\n  const {\n    network: {\n      apiAddress\n    }\n  } = useGetNetworkConfig();\n  const {\n    success,\n    fail,\n    hasActiveTransactions\n  } = transactionServices.useGetActiveTransactionsStatus();\n  const [state, setState] = React.useState({\n    transactions: [],\n    transactionsFetched: undefined\n  });\n  const account = useGetAccountInfo();\n\n  const fetchData = () => {\n    if (success || fail || !hasActiveTransactions) {\n      getTransactions({\n        apiAddress,\n        address: account.address,\n        timeout: 3000,\n        contractAddress\n      }).then(_ref => {\n        let {\n          data,\n          success: transactionsFetched\n        } = _ref;\n        refreshAccount();\n        setState({\n          transactions: data,\n          transactionsFetched\n        });\n      });\n    }\n  };\n\n  React.useEffect(fetchData, [success, fail, hasActiveTransactions]);\n  const {\n    transactions\n  } = state;\n  return transactions.length > 0 ? /*#__PURE__*/_jsxDEV(TransactionsList, {\n    transactions: transactions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-5\",\n    children: /*#__PURE__*/_jsxDEV(DappUI.PageState, {\n      icon: faExchangeAlt,\n      className: \"text-muted fa-3x\",\n      title: \"No Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transactions, \"QFJ9WIdYPHh/+LIwBmem1u70+B8=\", false, function () {\n  return [useGetNetworkConfig, transactionServices.useGetActiveTransactionsStatus, useGetAccountInfo];\n});\n\n_c = Transactions;\nexport default Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","useGetAccountInfo","DappUI","transactionServices","refreshAccount","useGetNetworkConfig","faExchangeAlt","getTransactions","contractAddress","TransactionsList","Transactions","network","apiAddress","success","fail","hasActiveTransactions","useGetActiveTransactionsStatus","state","setState","useState","transactions","transactionsFetched","undefined","account","fetchData","address","timeout","then","data","useEffect","length"],"sources":["C:/Users/Mmo-Omen/Documents/GitHub/NFT_Minting_dApp/src/pages/Dashboard/Transactions/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  useGetAccountInfo,\r\n  DappUI,\r\n  transactionServices,\r\n  refreshAccount,\r\n  useGetNetworkConfig\r\n} from '@elrondnetwork/dapp-core';\r\nimport { faExchangeAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { getTransactions } from 'apiRequests';\r\nimport { contractAddress } from 'config';\r\nimport TransactionsList from './TransactionsList';\r\nimport { StateType } from './types';\r\n\r\nconst Transactions = () => {\r\n  const {\r\n    network: { apiAddress }\r\n  } = useGetNetworkConfig();\r\n  const { success, fail, hasActiveTransactions } =\r\n    transactionServices.useGetActiveTransactionsStatus();\r\n\r\n  const [state, setState] = React.useState<StateType>({\r\n    transactions: [],\r\n    transactionsFetched: undefined\r\n  });\r\n  const account = useGetAccountInfo();\r\n\r\n  const fetchData = () => {\r\n    if (success || fail || !hasActiveTransactions) {\r\n      getTransactions({\r\n        apiAddress,\r\n        address: account.address,\r\n        timeout: 3000,\r\n        contractAddress\r\n      }).then(({ data, success: transactionsFetched }) => {\r\n        refreshAccount();\r\n        setState({\r\n          transactions: data,\r\n          transactionsFetched\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  React.useEffect(fetchData, [success, fail, hasActiveTransactions]);\r\n\r\n  const { transactions } = state;\r\n\r\n  return transactions.length > 0 ? (\r\n    <TransactionsList transactions={transactions} />\r\n  ) : (\r\n    <div className='my-5'>\r\n      <DappUI.PageState\r\n        icon={faExchangeAlt}\r\n        className='text-muted fa-3x'\r\n        title='No Transactions'\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transactions;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,iBADF,EAEEC,MAFF,EAGEC,mBAHF,EAIEC,cAJF,EAKEC,mBALF,QAMO,0BANP;AAOA,SAASC,aAAT,QAA8B,mCAA9B;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,eAAT,QAAgC,QAAhC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAGA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EACzB,MAAM;IACJC,OAAO,EAAE;MAAEC;IAAF;EADL,IAEFP,mBAAmB,EAFvB;EAGA,MAAM;IAAEQ,OAAF;IAAWC,IAAX;IAAiBC;EAAjB,IACJZ,mBAAmB,CAACa,8BAApB,EADF;EAGA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,KAAK,CAACmB,QAAN,CAA0B;IAClDC,YAAY,EAAE,EADoC;IAElDC,mBAAmB,EAAEC;EAF6B,CAA1B,CAA1B;EAIA,MAAMC,OAAO,GAAGtB,iBAAiB,EAAjC;;EAEA,MAAMuB,SAAS,GAAG,MAAM;IACtB,IAAIX,OAAO,IAAIC,IAAX,IAAmB,CAACC,qBAAxB,EAA+C;MAC7CR,eAAe,CAAC;QACdK,UADc;QAEda,OAAO,EAAEF,OAAO,CAACE,OAFH;QAGdC,OAAO,EAAE,IAHK;QAIdlB;MAJc,CAAD,CAAf,CAKGmB,IALH,CAKQ,QAA4C;QAAA,IAA3C;UAAEC,IAAF;UAAQf,OAAO,EAAEQ;QAAjB,CAA2C;QAClDjB,cAAc;QACdc,QAAQ,CAAC;UACPE,YAAY,EAAEQ,IADP;UAEPP;QAFO,CAAD,CAAR;MAID,CAXD;IAYD;EACF,CAfD;;EAiBArB,KAAK,CAAC6B,SAAN,CAAgBL,SAAhB,EAA2B,CAACX,OAAD,EAAUC,IAAV,EAAgBC,qBAAhB,CAA3B;EAEA,MAAM;IAAEK;EAAF,IAAmBH,KAAzB;EAEA,OAAOG,YAAY,CAACU,MAAb,GAAsB,CAAtB,gBACL,QAAC,gBAAD;IAAkB,YAAY,EAAEV;EAAhC;IAAA;IAAA;IAAA;EAAA,QADK,gBAGL;IAAK,SAAS,EAAC,MAAf;IAAA,uBACE,QAAC,MAAD,CAAQ,SAAR;MACE,IAAI,EAAEd,aADR;MAEE,SAAS,EAAC,kBAFZ;MAGE,KAAK,EAAC;IAHR;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QAHF;AAWD,CA7CD;;GAAMI,Y;UAGAL,mB,EAEFF,mBAAmB,CAACa,8B,EAMNf,iB;;;KAXZS,Y;AA+CN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}