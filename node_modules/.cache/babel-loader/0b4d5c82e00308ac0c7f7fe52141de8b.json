{"ast":null,"code":"import axios from \"axios\";\n\nconst fetchTransactions = url => async function getTransactions(_ref) {\n  let {\n    apiAddress,\n    address,\n    contractAddress,\n    timeout\n  } = _ref;\n\n  try {\n    const {\n      data\n    } = await axios.get(`${apiAddress}${url}`, {\n      params: {\n        sender: address,\n        receiver: contractAddress,\n        condition: \"must\",\n        size: 25\n      },\n      timeout\n    });\n    return {\n      data: data,\n      success: data !== undefined\n    };\n  } catch (err) {\n    return {\n      success: false\n    };\n  }\n};\n\nexport const getTransactions = fetchTransactions(\"/transactions\");\nexport const getTransactionsCount = fetchTransactions(\"/transactions/count\");","map":{"version":3,"names":["axios","fetchTransactions","url","getTransactions","apiAddress","address","contractAddress","timeout","data","get","params","sender","receiver","condition","size","success","undefined","err","getTransactionsCount"],"sources":["/home/mmo/workspace/NFT_Minting_dApp/src/apiRequests/index.tsx"],"sourcesContent":["import axios from \"axios\";\n\ninterface GetLatestTransactionsType {\n  apiAddress: string;\n  address: string;\n  contractAddress: string;\n  timeout: number;\n  page?: number;\n  url?: string;\n}\n\nconst fetchTransactions = (url: string) =>\n  async function getTransactions({\n    apiAddress,\n    address,\n    contractAddress,\n    timeout,\n  }: GetLatestTransactionsType) {\n    try {\n      const { data } = await axios.get(`${apiAddress}${url}`, {\n        params: {\n          sender: address,\n          receiver: contractAddress,\n          condition: \"must\",\n          size: 25,\n        },\n        timeout,\n      });\n\n      return {\n        data: data,\n        success: data !== undefined,\n      };\n    } catch (err) {\n      return {\n        success: false,\n      };\n    }\n  };\n\nexport const getTransactions = fetchTransactions(\"/transactions\");\nexport const getTransactionsCount = fetchTransactions(\"/transactions/count\");\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAWA,MAAMC,iBAAiB,GAAIC,GAAD,IACxB,eAAeC,eAAf,OAK8B;EAAA,IALC;IAC7BC,UAD6B;IAE7BC,OAF6B;IAG7BC,eAH6B;IAI7BC;EAJ6B,CAKD;;EAC5B,IAAI;IACF,MAAM;MAAEC;IAAF,IAAW,MAAMR,KAAK,CAACS,GAAN,CAAW,GAAEL,UAAW,GAAEF,GAAI,EAA9B,EAAiC;MACtDQ,MAAM,EAAE;QACNC,MAAM,EAAEN,OADF;QAENO,QAAQ,EAAEN,eAFJ;QAGNO,SAAS,EAAE,MAHL;QAINC,IAAI,EAAE;MAJA,CAD8C;MAOtDP;IAPsD,CAAjC,CAAvB;IAUA,OAAO;MACLC,IAAI,EAAEA,IADD;MAELO,OAAO,EAAEP,IAAI,KAAKQ;IAFb,CAAP;EAID,CAfD,CAeE,OAAOC,GAAP,EAAY;IACZ,OAAO;MACLF,OAAO,EAAE;IADJ,CAAP;EAGD;AACF,CA3BH;;AA6BA,OAAO,MAAMZ,eAAe,GAAGF,iBAAiB,CAAC,eAAD,CAAzC;AACP,OAAO,MAAMiB,oBAAoB,GAAGjB,iBAAiB,CAAC,qBAAD,CAA9C"},"metadata":{},"sourceType":"module"}