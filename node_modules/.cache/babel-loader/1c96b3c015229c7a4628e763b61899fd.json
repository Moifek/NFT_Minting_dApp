{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransactionEventTopic = exports.TransactionEvent = void 0;\n\nconst primitives_1 = require(\"./primitives\");\n\nclass TransactionEvent {\n  constructor(init) {\n    this.address = new primitives_1.Address(\"\");\n    this.identifier = \"\";\n    this.topics = [];\n    this.data = \"\";\n    Object.assign(this, init);\n  }\n\n  static fromHttpResponse(responsePart) {\n    let result = new TransactionEvent();\n    result.address = new primitives_1.Address(responsePart.address);\n    result.identifier = responsePart.identifier || \"\";\n    result.topics = (responsePart.topics || []).map(topic => new TransactionEventTopic(topic));\n    result.data = Buffer.from(responsePart.data || \"\", \"base64\").toString();\n    return result;\n  }\n\n  findFirstOrNoneTopic(predicate) {\n    return this.topics.filter(topic => predicate(topic))[0];\n  }\n\n  getLastTopic() {\n    return this.topics[this.topics.length - 1];\n  }\n\n}\n\nexports.TransactionEvent = TransactionEvent;\n\nclass TransactionEventTopic {\n  constructor(topic) {\n    this.raw = Buffer.from(topic || \"\", \"base64\");\n  }\n\n  toString() {\n    return this.raw.toString(\"utf8\");\n  }\n\n  hex() {\n    return this.raw.toString(\"hex\");\n  }\n\n  valueOf() {\n    return this.raw;\n  }\n\n}\n\nexports.TransactionEventTopic = TransactionEventTopic;","map":{"version":3,"sources":["../src/transactionEvents.ts"],"names":[],"mappings":";;;;;;;AACA,MAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAEA,MAAa,gBAAb,CAA6B;EAMzB,WAAA,CAAY,IAAZ,EAA4C;IAL5C,KAAA,OAAA,GAAoB,IAAI,YAAA,CAAA,OAAJ,CAAY,EAAZ,CAApB;IACA,KAAA,UAAA,GAAqB,EAArB;IACA,KAAA,MAAA,GAAkC,EAAlC;IACA,KAAA,IAAA,GAAe,EAAf;IAGI,MAAM,CAAC,MAAP,CAAc,IAAd,EAAoB,IAApB;EACH;;EAEsB,OAAhB,gBAAgB,CAAC,YAAD,EAKtB;IACG,IAAI,MAAM,GAAG,IAAI,gBAAJ,EAAb;IACA,MAAM,CAAC,OAAP,GAAiB,IAAI,YAAA,CAAA,OAAJ,CAAY,YAAY,CAAC,OAAzB,CAAjB;IACA,MAAM,CAAC,UAAP,GAAoB,YAAY,CAAC,UAAb,IAA2B,EAA/C;IACA,MAAM,CAAC,MAAP,GAAgB,CAAC,YAAY,CAAC,MAAb,IAAuB,EAAxB,EAA4B,GAA5B,CAAgC,KAAK,IAAI,IAAI,qBAAJ,CAA0B,KAA1B,CAAzC,CAAhB;IACA,MAAM,CAAC,IAAP,GAAc,MAAM,CAAC,IAAP,CAAY,YAAY,CAAC,IAAb,IAAqB,EAAjC,EAAqC,QAArC,EAA+C,QAA/C,EAAd;IAEA,OAAO,MAAP;EACH;;EAED,oBAAoB,CAAC,SAAD,EAAqD;IACrE,OAAO,KAAK,MAAL,CAAY,MAAZ,CAAmB,KAAK,IAAI,SAAS,CAAC,KAAD,CAArC,EAA8C,CAA9C,CAAP;EACH;;EAED,YAAY,GAAA;IACR,OAAO,KAAK,MAAL,CAAY,KAAK,MAAL,CAAY,MAAZ,GAAqB,CAAjC,CAAP;EACH;;AA/BwB;;AAA7B,OAAA,CAAA,gBAAA,GAAA,gBAAA;;AAkCA,MAAa,qBAAb,CAAkC;EAG9B,WAAA,CAAY,KAAZ,EAAyB;IACrB,KAAK,GAAL,GAAW,MAAM,CAAC,IAAP,CAAY,KAAK,IAAI,EAArB,EAAyB,QAAzB,CAAX;EACH;;EAED,QAAQ,GAAA;IACJ,OAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,MAAlB,CAAP;EACH;;EAED,GAAG,GAAA;IACC,OAAO,KAAK,GAAL,CAAS,QAAT,CAAkB,KAAlB,CAAP;EACH;;EAED,OAAO,GAAA;IACH,OAAO,KAAK,GAAZ;EACH;;AAjB6B;;AAAlC,OAAA,CAAA,qBAAA,GAAA,qBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TransactionEventTopic = exports.TransactionEvent = void 0;\r\nconst primitives_1 = require(\"./primitives\");\r\nclass TransactionEvent {\r\n    constructor(init) {\r\n        this.address = new primitives_1.Address(\"\");\r\n        this.identifier = \"\";\r\n        this.topics = [];\r\n        this.data = \"\";\r\n        Object.assign(this, init);\r\n    }\r\n    static fromHttpResponse(responsePart) {\r\n        let result = new TransactionEvent();\r\n        result.address = new primitives_1.Address(responsePart.address);\r\n        result.identifier = responsePart.identifier || \"\";\r\n        result.topics = (responsePart.topics || []).map(topic => new TransactionEventTopic(topic));\r\n        result.data = Buffer.from(responsePart.data || \"\", \"base64\").toString();\r\n        return result;\r\n    }\r\n    findFirstOrNoneTopic(predicate) {\r\n        return this.topics.filter(topic => predicate(topic))[0];\r\n    }\r\n    getLastTopic() {\r\n        return this.topics[this.topics.length - 1];\r\n    }\r\n}\r\nexports.TransactionEvent = TransactionEvent;\r\nclass TransactionEventTopic {\r\n    constructor(topic) {\r\n        this.raw = Buffer.from(topic || \"\", \"base64\");\r\n    }\r\n    toString() {\r\n        return this.raw.toString(\"utf8\");\r\n    }\r\n    hex() {\r\n        return this.raw.toString(\"hex\");\r\n    }\r\n    valueOf() {\r\n        return this.raw;\r\n    }\r\n}\r\nexports.TransactionEventTopic = TransactionEventTopic;\r\n//# sourceMappingURL=transactionEvents.js.map"]},"metadata":{},"sourceType":"script"}