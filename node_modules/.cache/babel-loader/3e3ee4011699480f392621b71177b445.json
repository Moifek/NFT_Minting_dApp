{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Nonce = void 0;\n\nconst errors = __importStar(require(\"./errors\"));\n\nconst utils_codec_1 = require(\"./utils.codec\");\n/**\r\n * The nonce, as an immutable object.\r\n */\n\n\nclass Nonce {\n  /**\r\n   * Creates a Nonce object given a value.\r\n   */\n  constructor(value) {\n    value = Number(value);\n\n    if (Number.isNaN(value) || value < 0) {\n      throw new errors.ErrNonceInvalid(value);\n    }\n\n    this.value = value;\n  }\n  /**\r\n   * Creates a new Nonce object by incrementing the current one.\r\n   */\n\n\n  increment() {\n    return new Nonce(this.value + 1);\n  }\n\n  hex() {\n    return utils_codec_1.numberToPaddedHex(this.value);\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n  equals(other) {\n    if (!other) {\n      return false;\n    }\n\n    return this.value === other.value;\n  }\n\n}\n\nexports.Nonce = Nonce;","map":{"version":3,"sources":["../src/nonce.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,MAAA,GAAA,YAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AACA,MAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;AAEA;;AAEG;;;AACH,MAAa,KAAb,CAAkB;EAMd;;AAEG;EACH,WAAA,CAAY,KAAZ,EAAyB;IACrB,KAAK,GAAG,MAAM,CAAC,KAAD,CAAd;;IAEA,IAAI,MAAM,CAAC,KAAP,CAAa,KAAb,KAAuB,KAAK,GAAG,CAAnC,EAAsC;MAClC,MAAM,IAAI,MAAM,CAAC,eAAX,CAA2B,KAA3B,CAAN;IACH;;IAED,KAAK,KAAL,GAAa,KAAb;EACH;EAED;;AAEG;;;EACH,SAAS,GAAA;IACL,OAAO,IAAI,KAAJ,CAAU,KAAK,KAAL,GAAa,CAAvB,CAAP;EACH;;EAED,GAAG,GAAA;IACC,OAAO,aAAA,CAAA,iBAAA,CAAkB,KAAK,KAAvB,CAAP;EACH;;EAED,OAAO,GAAA;IACH,OAAO,KAAK,KAAZ;EACH;;EAED,MAAM,CAAC,KAAD,EAAa;IACf,IAAI,CAAC,KAAL,EAAY;MACR,OAAO,KAAP;IACH;;IAED,OAAO,KAAK,KAAL,KAAe,KAAK,CAAC,KAA5B;EACH;;AAxCa;;AAAlB,OAAA,CAAA,KAAA,GAAA,KAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Nonce = void 0;\r\nconst errors = __importStar(require(\"./errors\"));\r\nconst utils_codec_1 = require(\"./utils.codec\");\r\n/**\r\n * The nonce, as an immutable object.\r\n */\r\nclass Nonce {\r\n    /**\r\n     * Creates a Nonce object given a value.\r\n     */\r\n    constructor(value) {\r\n        value = Number(value);\r\n        if (Number.isNaN(value) || value < 0) {\r\n            throw new errors.ErrNonceInvalid(value);\r\n        }\r\n        this.value = value;\r\n    }\r\n    /**\r\n     * Creates a new Nonce object by incrementing the current one.\r\n     */\r\n    increment() {\r\n        return new Nonce(this.value + 1);\r\n    }\r\n    hex() {\r\n        return utils_codec_1.numberToPaddedHex(this.value);\r\n    }\r\n    valueOf() {\r\n        return this.value;\r\n    }\r\n    equals(other) {\r\n        if (!other) {\r\n            return false;\r\n        }\r\n        return this.value === other.value;\r\n    }\r\n}\r\nexports.Nonce = Nonce;\r\n//# sourceMappingURL=nonce.js.map"]},"metadata":{},"sourceType":"script"}