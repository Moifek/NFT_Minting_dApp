{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TokenIdentifierCodec = void 0;\n\nconst bytes_1 = require(\"../typesystem/bytes\");\n\nconst tokenIdentifier_1 = require(\"../typesystem/tokenIdentifier\");\n\nconst bytes_2 = require(\"./bytes\");\n\nclass TokenIdentifierCodec {\n  constructor() {\n    this.bytesCodec = new bytes_2.BytesBinaryCodec();\n  }\n\n  decodeNested(buffer) {\n    let [bytesValue, length] = this.bytesCodec.decodeNested(buffer);\n    return [new tokenIdentifier_1.TokenIdentifierValue(bytesValue.valueOf()), length];\n  }\n\n  decodeTopLevel(buffer) {\n    let bytesValue = this.bytesCodec.decodeTopLevel(buffer);\n    return new tokenIdentifier_1.TokenIdentifierValue(bytesValue.valueOf());\n  }\n\n  encodeNested(tokenIdentifier) {\n    let bytesValue = new bytes_1.BytesValue(tokenIdentifier.valueOf());\n    return this.bytesCodec.encodeNested(bytesValue);\n  }\n\n  encodeTopLevel(tokenIdentifier) {\n    return tokenIdentifier.valueOf();\n  }\n\n}\n\nexports.TokenIdentifierCodec = TokenIdentifierCodec;","map":{"version":3,"sources":["../../../src/smartcontracts/codec/tokenIdentifier.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,OAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AACA,MAAA,iBAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AACA,MAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEA,MAAa,oBAAb,CAAiC;EAAjC,WAAA,GAAA;IACqB,KAAA,UAAA,GAAa,IAAI,OAAA,CAAA,gBAAJ,EAAb;EAoBpB;;EAlBG,YAAY,CAAC,MAAD,EAAe;IACvB,IAAI,CAAC,UAAD,EAAa,MAAb,IAAuB,KAAK,UAAL,CAAgB,YAAhB,CAA6B,MAA7B,CAA3B;IACA,OAAO,CAAC,IAAI,iBAAA,CAAA,oBAAJ,CAAyB,UAAU,CAAC,OAAX,EAAzB,CAAD,EAAiD,MAAjD,CAAP;EACH;;EAED,cAAc,CAAC,MAAD,EAAe;IACzB,IAAI,UAAU,GAAG,KAAK,UAAL,CAAgB,cAAhB,CAA+B,MAA/B,CAAjB;IACA,OAAO,IAAI,iBAAA,CAAA,oBAAJ,CAAyB,UAAU,CAAC,OAAX,EAAzB,CAAP;EACH;;EAED,YAAY,CAAC,eAAD,EAAsC;IAC9C,IAAI,UAAU,GAAG,IAAI,OAAA,CAAA,UAAJ,CAAe,eAAe,CAAC,OAAhB,EAAf,CAAjB;IACA,OAAO,KAAK,UAAL,CAAgB,YAAhB,CAA6B,UAA7B,CAAP;EACH;;EAED,cAAc,CAAC,eAAD,EAAsC;IAChD,OAAO,eAAe,CAAC,OAAhB,EAAP;EACH;;AApB4B;;AAAjC,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TokenIdentifierCodec = void 0;\r\nconst bytes_1 = require(\"../typesystem/bytes\");\r\nconst tokenIdentifier_1 = require(\"../typesystem/tokenIdentifier\");\r\nconst bytes_2 = require(\"./bytes\");\r\nclass TokenIdentifierCodec {\r\n    constructor() {\r\n        this.bytesCodec = new bytes_2.BytesBinaryCodec();\r\n    }\r\n    decodeNested(buffer) {\r\n        let [bytesValue, length] = this.bytesCodec.decodeNested(buffer);\r\n        return [new tokenIdentifier_1.TokenIdentifierValue(bytesValue.valueOf()), length];\r\n    }\r\n    decodeTopLevel(buffer) {\r\n        let bytesValue = this.bytesCodec.decodeTopLevel(buffer);\r\n        return new tokenIdentifier_1.TokenIdentifierValue(bytesValue.valueOf());\r\n    }\r\n    encodeNested(tokenIdentifier) {\r\n        let bytesValue = new bytes_1.BytesValue(tokenIdentifier.valueOf());\r\n        return this.bytesCodec.encodeNested(bytesValue);\r\n    }\r\n    encodeTopLevel(tokenIdentifier) {\r\n        return tokenIdentifier.valueOf();\r\n    }\r\n}\r\nexports.TokenIdentifierCodec = TokenIdentifierCodec;\r\n//# sourceMappingURL=tokenIdentifier.js.map"]},"metadata":{},"sourceType":"script"}