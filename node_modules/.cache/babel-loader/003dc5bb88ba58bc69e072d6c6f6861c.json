{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NonFungibleTokenOfAccountOnNetwork = exports.FungibleTokenOfAccountOnNetwork = void 0;\n\nconst bignumber_js_1 = require(\"bignumber.js\");\n\nconst primitives_1 = require(\"./primitives\");\n\nclass FungibleTokenOfAccountOnNetwork {\n  constructor() {\n    this.identifier = \"\";\n    this.balance = new bignumber_js_1.BigNumber(0);\n  }\n\n  static fromHttpResponse(payload) {\n    let result = new FungibleTokenOfAccountOnNetwork();\n    result.identifier = payload.tokenIdentifier || payload.identifier || \"\";\n    result.balance = new bignumber_js_1.BigNumber(payload.balance || 0);\n    return result;\n  }\n\n}\n\nexports.FungibleTokenOfAccountOnNetwork = FungibleTokenOfAccountOnNetwork;\n\nclass NonFungibleTokenOfAccountOnNetwork {\n  constructor(init) {\n    this.identifier = \"\";\n    this.collection = \"\";\n    this.timestamp = 0;\n    this.attributes = Buffer.from([]);\n    this.nonce = 0;\n    this.type = \"\";\n    this.name = \"\";\n    this.creator = new primitives_1.Address(\"\");\n    this.supply = new bignumber_js_1.BigNumber(0);\n    this.decimals = 0;\n    this.royalties = new bignumber_js_1.BigNumber(0);\n    this.assets = [];\n    Object.assign(this, init);\n  }\n\n  static fromProxyHttpResponse(payload) {\n    let result = NonFungibleTokenOfAccountOnNetwork.fromHttpResponse(payload);\n    result.identifier = payload.tokenIdentifier || \"\";\n    result.collection = NonFungibleTokenOfAccountOnNetwork.parseCollectionFromIdentifier(result.identifier);\n    result.royalties = new bignumber_js_1.BigNumber(payload.royalties || 0).div(100);\n    return result;\n  }\n\n  static fromProxyHttpResponseByNonce(payload) {\n    let result = NonFungibleTokenOfAccountOnNetwork.fromHttpResponse(payload);\n    let nonceAsHex = new primitives_1.Nonce(result.nonce).hex();\n    result.identifier = `${payload.tokenIdentifier}-${nonceAsHex}`;\n    result.collection = payload.tokenIdentifier || \"\";\n    result.royalties = new bignumber_js_1.BigNumber(payload.royalties || 0).div(100);\n    return result;\n  }\n\n  static fromApiHttpResponse(payload) {\n    let result = NonFungibleTokenOfAccountOnNetwork.fromHttpResponse(payload);\n    result.identifier = payload.identifier || \"\";\n    result.collection = payload.collection || \"\";\n    return result;\n  } // TODO: Compare results from Proxy and API and try to reconciliate them.\n\n\n  static fromHttpResponse(payload) {\n    let result = new NonFungibleTokenOfAccountOnNetwork();\n    result.timestamp = Number(payload.timestamp || 0);\n    result.attributes = Buffer.from(payload.attributes || \"\", \"base64\");\n    result.nonce = payload.nonce || 0;\n    result.type = payload.type || \"\";\n    result.name = payload.name || \"\";\n    result.creator = new primitives_1.Address(payload.creator || \"\");\n    result.decimals = Number(payload.decimals || 0);\n    result.supply = new bignumber_js_1.BigNumber(payload.balance || 1);\n    result.royalties = new bignumber_js_1.BigNumber(payload.royalties || 0);\n    result.assets = payload.assets || [];\n    return result;\n  }\n\n  static parseCollectionFromIdentifier(identifier) {\n    let parts = identifier.split(\"-\");\n    let collection = parts.slice(0, 2).join(\"-\");\n    return collection;\n  }\n\n}\n\nexports.NonFungibleTokenOfAccountOnNetwork = NonFungibleTokenOfAccountOnNetwork;","map":{"version":3,"sources":["../src/tokens.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,cAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,MAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAGA,MAAa,+BAAb,CAA4C;EAA5C,WAAA,GAAA;IACI,KAAA,UAAA,GAAqB,EAArB;IACA,KAAA,OAAA,GAAqB,IAAI,cAAA,CAAA,SAAJ,CAAc,CAAd,CAArB;EAUH;;EAR0B,OAAhB,gBAAgB,CAAC,OAAD,EAAa;IAChC,IAAI,MAAM,GAAG,IAAI,+BAAJ,EAAb;IAEA,MAAM,CAAC,UAAP,GAAoB,OAAO,CAAC,eAAR,IAA2B,OAAO,CAAC,UAAnC,IAAiD,EAArE;IACA,MAAM,CAAC,OAAP,GAAiB,IAAI,cAAA,CAAA,SAAJ,CAAc,OAAO,CAAC,OAAR,IAAmB,CAAjC,CAAjB;IAEA,OAAO,MAAP;EACH;;AAXuC;;AAA5C,OAAA,CAAA,+BAAA,GAAA,+BAAA;;AAcA,MAAa,kCAAb,CAA+C;EAc3C,WAAA,CAAY,IAAZ,EAA8D;IAb9D,KAAA,UAAA,GAAqB,EAArB;IACA,KAAA,UAAA,GAAqB,EAArB;IACA,KAAA,SAAA,GAAoB,CAApB;IACA,KAAA,UAAA,GAAqB,MAAM,CAAC,IAAP,CAAY,EAAZ,CAArB;IACA,KAAA,KAAA,GAAgB,CAAhB;IACA,KAAA,IAAA,GAAe,EAAf;IACA,KAAA,IAAA,GAAe,EAAf;IACA,KAAA,OAAA,GAAoB,IAAI,YAAA,CAAA,OAAJ,CAAY,EAAZ,CAApB;IACA,KAAA,MAAA,GAAoB,IAAI,cAAA,CAAA,SAAJ,CAAc,CAAd,CAApB;IACA,KAAA,QAAA,GAAmB,CAAnB;IACA,KAAA,SAAA,GAAuB,IAAI,cAAA,CAAA,SAAJ,CAAc,CAAd,CAAvB;IACA,KAAA,MAAA,GAAmB,EAAnB;IAGI,MAAM,CAAC,MAAP,CAAc,IAAd,EAAoB,IAApB;EACH;;EAE2B,OAArB,qBAAqB,CAAC,OAAD,EAAa;IACrC,IAAI,MAAM,GAAG,kCAAkC,CAAC,gBAAnC,CAAoD,OAApD,CAAb;IAEA,MAAM,CAAC,UAAP,GAAoB,OAAO,CAAC,eAAR,IAA2B,EAA/C;IACA,MAAM,CAAC,UAAP,GAAoB,kCAAkC,CAAC,6BAAnC,CAAiE,MAAM,CAAC,UAAxE,CAApB;IACA,MAAM,CAAC,SAAP,GAAmB,IAAI,cAAA,CAAA,SAAJ,CAAc,OAAO,CAAC,SAAR,IAAqB,CAAnC,EAAsC,GAAtC,CAA0C,GAA1C,CAAnB;IAEA,OAAO,MAAP;EACH;;EAEkC,OAA5B,4BAA4B,CAAC,OAAD,EAAa;IAC5C,IAAI,MAAM,GAAG,kCAAkC,CAAC,gBAAnC,CAAoD,OAApD,CAAb;IACA,IAAI,UAAU,GAAG,IAAI,YAAA,CAAA,KAAJ,CAAU,MAAM,CAAC,KAAjB,EAAwB,GAAxB,EAAjB;IAEA,MAAM,CAAC,UAAP,GAAoB,GAAG,OAAO,CAAC,eAAe,IAAI,UAAU,EAA5D;IACA,MAAM,CAAC,UAAP,GAAoB,OAAO,CAAC,eAAR,IAA2B,EAA/C;IACA,MAAM,CAAC,SAAP,GAAmB,IAAI,cAAA,CAAA,SAAJ,CAAc,OAAO,CAAC,SAAR,IAAqB,CAAnC,EAAsC,GAAtC,CAA0C,GAA1C,CAAnB;IAEA,OAAO,MAAP;EACH;;EAEyB,OAAnB,mBAAmB,CAAC,OAAD,EAAa;IACnC,IAAI,MAAM,GAAG,kCAAkC,CAAC,gBAAnC,CAAoD,OAApD,CAAb;IAEA,MAAM,CAAC,UAAP,GAAoB,OAAO,CAAC,UAAR,IAAsB,EAA1C;IACA,MAAM,CAAC,UAAP,GAAoB,OAAO,CAAC,UAAR,IAAsB,EAA1C;IAEA,OAAO,MAAP;EACH,CA9C0C,CAgD3C;;;EAC+B,OAAhB,gBAAgB,CAAC,OAAD,EAAa;IACxC,IAAI,MAAM,GAAG,IAAI,kCAAJ,EAAb;IAEA,MAAM,CAAC,SAAP,GAAmB,MAAM,CAAC,OAAO,CAAC,SAAR,IAAqB,CAAtB,CAAzB;IACA,MAAM,CAAC,UAAP,GAAoB,MAAM,CAAC,IAAP,CAAY,OAAO,CAAC,UAAR,IAAsB,EAAlC,EAAsC,QAAtC,CAApB;IACA,MAAM,CAAC,KAAP,GAAe,OAAO,CAAC,KAAR,IAAiB,CAAhC;IACA,MAAM,CAAC,IAAP,GAAc,OAAO,CAAC,IAAR,IAAgB,EAA9B;IACA,MAAM,CAAC,IAAP,GAAc,OAAO,CAAC,IAAR,IAAgB,EAA9B;IACA,MAAM,CAAC,OAAP,GAAiB,IAAI,YAAA,CAAA,OAAJ,CAAY,OAAO,CAAC,OAAR,IAAmB,EAA/B,CAAjB;IACA,MAAM,CAAC,QAAP,GAAkB,MAAM,CAAC,OAAO,CAAC,QAAR,IAAoB,CAArB,CAAxB;IACA,MAAM,CAAC,MAAP,GAAgB,IAAI,cAAA,CAAA,SAAJ,CAAc,OAAO,CAAC,OAAR,IAAmB,CAAjC,CAAhB;IACA,MAAM,CAAC,SAAP,GAAmB,IAAI,cAAA,CAAA,SAAJ,CAAc,OAAO,CAAC,SAAR,IAAqB,CAAnC,CAAnB;IACA,MAAM,CAAC,MAAP,GAAgB,OAAO,CAAC,MAAR,IAAkB,EAAlC;IAEA,OAAO,MAAP;EACH;;EAE2C,OAA7B,6BAA6B,CAAC,UAAD,EAAmB;IAC3D,IAAI,KAAK,GAAG,UAAU,CAAC,KAAX,CAAiB,GAAjB,CAAZ;IACA,IAAI,UAAU,GAAG,KAAK,CAAC,KAAN,CAAY,CAAZ,EAAe,CAAf,EAAkB,IAAlB,CAAuB,GAAvB,CAAjB;IACA,OAAO,UAAP;EACH;;AAtE0C;;AAA/C,OAAA,CAAA,kCAAA,GAAA,kCAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NonFungibleTokenOfAccountOnNetwork = exports.FungibleTokenOfAccountOnNetwork = void 0;\r\nconst bignumber_js_1 = require(\"bignumber.js\");\r\nconst primitives_1 = require(\"./primitives\");\r\nclass FungibleTokenOfAccountOnNetwork {\r\n    constructor() {\r\n        this.identifier = \"\";\r\n        this.balance = new bignumber_js_1.BigNumber(0);\r\n    }\r\n    static fromHttpResponse(payload) {\r\n        let result = new FungibleTokenOfAccountOnNetwork();\r\n        result.identifier = payload.tokenIdentifier || payload.identifier || \"\";\r\n        result.balance = new bignumber_js_1.BigNumber(payload.balance || 0);\r\n        return result;\r\n    }\r\n}\r\nexports.FungibleTokenOfAccountOnNetwork = FungibleTokenOfAccountOnNetwork;\r\nclass NonFungibleTokenOfAccountOnNetwork {\r\n    constructor(init) {\r\n        this.identifier = \"\";\r\n        this.collection = \"\";\r\n        this.timestamp = 0;\r\n        this.attributes = Buffer.from([]);\r\n        this.nonce = 0;\r\n        this.type = \"\";\r\n        this.name = \"\";\r\n        this.creator = new primitives_1.Address(\"\");\r\n        this.supply = new bignumber_js_1.BigNumber(0);\r\n        this.decimals = 0;\r\n        this.royalties = new bignumber_js_1.BigNumber(0);\r\n        this.assets = [];\r\n        Object.assign(this, init);\r\n    }\r\n    static fromProxyHttpResponse(payload) {\r\n        let result = NonFungibleTokenOfAccountOnNetwork.fromHttpResponse(payload);\r\n        result.identifier = payload.tokenIdentifier || \"\";\r\n        result.collection = NonFungibleTokenOfAccountOnNetwork.parseCollectionFromIdentifier(result.identifier);\r\n        result.royalties = new bignumber_js_1.BigNumber(payload.royalties || 0).div(100);\r\n        return result;\r\n    }\r\n    static fromProxyHttpResponseByNonce(payload) {\r\n        let result = NonFungibleTokenOfAccountOnNetwork.fromHttpResponse(payload);\r\n        let nonceAsHex = new primitives_1.Nonce(result.nonce).hex();\r\n        result.identifier = `${payload.tokenIdentifier}-${nonceAsHex}`;\r\n        result.collection = payload.tokenIdentifier || \"\";\r\n        result.royalties = new bignumber_js_1.BigNumber(payload.royalties || 0).div(100);\r\n        return result;\r\n    }\r\n    static fromApiHttpResponse(payload) {\r\n        let result = NonFungibleTokenOfAccountOnNetwork.fromHttpResponse(payload);\r\n        result.identifier = payload.identifier || \"\";\r\n        result.collection = payload.collection || \"\";\r\n        return result;\r\n    }\r\n    // TODO: Compare results from Proxy and API and try to reconciliate them.\r\n    static fromHttpResponse(payload) {\r\n        let result = new NonFungibleTokenOfAccountOnNetwork();\r\n        result.timestamp = Number(payload.timestamp || 0);\r\n        result.attributes = Buffer.from(payload.attributes || \"\", \"base64\");\r\n        result.nonce = payload.nonce || 0;\r\n        result.type = payload.type || \"\";\r\n        result.name = payload.name || \"\";\r\n        result.creator = new primitives_1.Address(payload.creator || \"\");\r\n        result.decimals = Number(payload.decimals || 0);\r\n        result.supply = new bignumber_js_1.BigNumber(payload.balance || 1);\r\n        result.royalties = new bignumber_js_1.BigNumber(payload.royalties || 0);\r\n        result.assets = payload.assets || [];\r\n        return result;\r\n    }\r\n    static parseCollectionFromIdentifier(identifier) {\r\n        let parts = identifier.split(\"-\");\r\n        let collection = parts.slice(0, 2).join(\"-\");\r\n        return collection;\r\n    }\r\n}\r\nexports.NonFungibleTokenOfAccountOnNetwork = NonFungibleTokenOfAccountOnNetwork;\r\n//# sourceMappingURL=tokens.js.map"]},"metadata":{},"sourceType":"script"}