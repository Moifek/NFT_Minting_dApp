{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefinitionOfTokenCollectionOnNetwork = exports.DefinitionOfFungibleTokenOnNetwork = void 0;\n\nconst bignumber_js_1 = require(\"bignumber.js\");\n\nconst primitives_1 = require(\"./primitives\");\n\nclass DefinitionOfFungibleTokenOnNetwork {\n  constructor() {\n    this.identifier = \"\";\n    this.name = \"\";\n    this.ticker = \"\";\n    this.owner = new primitives_1.Address(\"\");\n    this.decimals = 0;\n    this.supply = new bignumber_js_1.BigNumber(0);\n    this.isPaused = false;\n    this.canUpgrade = false;\n    this.canMint = false;\n    this.canBurn = false;\n    this.canChangeOwner = false;\n    this.canPause = false;\n    this.canFreeze = false;\n    this.canWipe = false;\n    this.canAddSpecialRoles = false;\n  }\n\n  static fromApiHttpResponse(payload) {\n    let result = new DefinitionOfFungibleTokenOnNetwork();\n    result.identifier = payload.identifier || \"\";\n    result.name = payload.name || \"\";\n    result.ticker = payload.ticker || \"\";\n    result.owner = new primitives_1.Address(payload.owner || \"\");\n    result.decimals = payload.decimals || 0;\n    result.supply = new bignumber_js_1.BigNumber(payload.supply || \"0\");\n    result.isPaused = payload.isPaused || false;\n    result.canUpgrade = payload.canUpgrade || false;\n    result.canMint = payload.canMint || false;\n    result.canBurn = payload.canBurn || false;\n    result.canChangeOwner = payload.canChangeOwner || false;\n    result.canPause = payload.canPause || false;\n    result.canFreeze = payload.canFreeze || false;\n    result.canWipe = payload.canWipe || false;\n    return result;\n  }\n  /**\r\n   * The implementation has been moved here from the following location:\r\n   * https://github.com/ElrondNetwork/elrond-sdk-erdjs/blob/release/v9/src/token.ts\r\n   */\n\n\n  static fromResponseOfGetTokenProperties(identifier, data) {\n    let result = new DefinitionOfFungibleTokenOnNetwork();\n    let [tokenName, _tokenType, owner, supply, ...propertiesBuffers] = data;\n    let properties = parseTokenProperties(propertiesBuffers);\n    result.identifier = identifier;\n    result.name = tokenName.toString();\n    result.ticker = identifier;\n    result.owner = primitives_1.Address.fromPubkey(owner);\n    result.decimals = properties.NumDecimals.toNumber();\n    result.supply = new bignumber_js_1.BigNumber(supply.toString()).shiftedBy(-result.decimals);\n    result.isPaused = properties.IsPaused;\n    result.canUpgrade = properties.CanUpgrade;\n    result.canMint = properties.CanMint;\n    result.canBurn = properties.CanBurn;\n    result.canChangeOwner = properties.CanChangeOwner;\n    result.canPause = properties.CanPause;\n    result.canFreeze = properties.CanFreeze;\n    result.canWipe = properties.CanWipe;\n    return result;\n  }\n\n}\n\nexports.DefinitionOfFungibleTokenOnNetwork = DefinitionOfFungibleTokenOnNetwork;\n\nclass DefinitionOfTokenCollectionOnNetwork {\n  constructor() {\n    this.collection = \"\";\n    this.type = \"\";\n    this.name = \"\";\n    this.ticker = \"\";\n    this.owner = new primitives_1.Address(\"\");\n    this.decimals = 0;\n    this.canPause = false;\n    this.canFreeze = false;\n    this.canWipe = false;\n    this.canTransferNftCreateRole = false;\n  }\n\n  static fromApiHttpResponse(payload) {\n    let result = new DefinitionOfTokenCollectionOnNetwork();\n    result.collection = payload.collection || \"\";\n    result.type = payload.type || \"\";\n    result.name = payload.name || \"\";\n    result.ticker = payload.ticker || \"\";\n    result.owner = new primitives_1.Address(payload.owner || \"\");\n    result.decimals = payload.decimals || 0;\n    result.canPause = payload.canPause || false;\n    result.canFreeze = payload.canFreeze || false;\n    result.canWipe = payload.canWipe || false;\n    result.canTransferNftCreateRole = payload.canTransferNftCreateRole || false;\n    return result;\n  }\n  /**\r\n   * The implementation has been moved here from the following location:\r\n   * https://github.com/ElrondNetwork/elrond-sdk-erdjs/blob/release/v9/src/token.ts\r\n   */\n\n\n  static fromResponseOfGetTokenProperties(collection, data) {\n    let result = new DefinitionOfTokenCollectionOnNetwork();\n    let [tokenName, tokenType, owner, _, __, ...propertiesBuffers] = data;\n    let properties = parseTokenProperties(propertiesBuffers);\n    result.collection = collection;\n    result.type = tokenType.toString();\n    result.name = tokenName.toString();\n    result.ticker = collection;\n    result.owner = primitives_1.Address.fromPubkey(owner);\n    result.decimals = properties.NumDecimals.toNumber();\n    result.canPause = properties.CanPause;\n    result.canFreeze = properties.CanFreeze;\n    result.canWipe = properties.CanWipe;\n    result.canTransferNftCreateRole = properties.CanTransferNFTCreateRole;\n    return result;\n  }\n\n}\n\nexports.DefinitionOfTokenCollectionOnNetwork = DefinitionOfTokenCollectionOnNetwork; // Token properties have the following format: {PropertyName}-{PropertyValue}.\n\nfunction parseTokenProperties(propertiesBuffers) {\n  let properties = {};\n\n  for (let buffer of propertiesBuffers) {\n    let [name, value] = buffer.toString().split(\"-\");\n    properties[name] = parseValueOfTokenProperty(value);\n  }\n\n  return properties;\n} // This only handles booleans and numbers.\n\n\nfunction parseValueOfTokenProperty(value) {\n  switch (value) {\n    case \"true\":\n      return true;\n\n    case \"false\":\n      return false;\n\n    default:\n      return new bignumber_js_1.BigNumber(value);\n  }\n}","map":{"version":3,"sources":["../src/tokenDefinitions.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,cAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,MAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAGA,MAAa,kCAAb,CAA+C;EAA/C,WAAA,GAAA;IACI,KAAA,UAAA,GAAqB,EAArB;IACA,KAAA,IAAA,GAAe,EAAf;IACA,KAAA,MAAA,GAAiB,EAAjB;IACA,KAAA,KAAA,GAAkB,IAAI,YAAA,CAAA,OAAJ,CAAY,EAAZ,CAAlB;IACA,KAAA,QAAA,GAAmB,CAAnB;IACA,KAAA,MAAA,GAAoB,IAAI,cAAA,CAAA,SAAJ,CAAc,CAAd,CAApB;IACA,KAAA,QAAA,GAAoB,KAApB;IACA,KAAA,UAAA,GAAsB,KAAtB;IACA,KAAA,OAAA,GAAmB,KAAnB;IACA,KAAA,OAAA,GAAmB,KAAnB;IACA,KAAA,cAAA,GAA0B,KAA1B;IACA,KAAA,QAAA,GAAoB,KAApB;IACA,KAAA,SAAA,GAAqB,KAArB;IACA,KAAA,OAAA,GAAmB,KAAnB;IACA,KAAA,kBAAA,GAA8B,KAA9B;EAkDH;;EAhD6B,OAAnB,mBAAmB,CAAC,OAAD,EAAa;IACnC,IAAI,MAAM,GAAG,IAAI,kCAAJ,EAAb;IAEA,MAAM,CAAC,UAAP,GAAoB,OAAO,CAAC,UAAR,IAAsB,EAA1C;IACA,MAAM,CAAC,IAAP,GAAc,OAAO,CAAC,IAAR,IAAgB,EAA9B;IACA,MAAM,CAAC,MAAP,GAAgB,OAAO,CAAC,MAAR,IAAkB,EAAlC;IACA,MAAM,CAAC,KAAP,GAAe,IAAI,YAAA,CAAA,OAAJ,CAAY,OAAO,CAAC,KAAR,IAAiB,EAA7B,CAAf;IACA,MAAM,CAAC,QAAP,GAAkB,OAAO,CAAC,QAAR,IAAoB,CAAtC;IACA,MAAM,CAAC,MAAP,GAAgB,IAAI,cAAA,CAAA,SAAJ,CAAc,OAAO,CAAC,MAAR,IAAkB,GAAhC,CAAhB;IACA,MAAM,CAAC,QAAP,GAAkB,OAAO,CAAC,QAAR,IAAoB,KAAtC;IACA,MAAM,CAAC,UAAP,GAAoB,OAAO,CAAC,UAAR,IAAsB,KAA1C;IACA,MAAM,CAAC,OAAP,GAAiB,OAAO,CAAC,OAAR,IAAmB,KAApC;IACA,MAAM,CAAC,OAAP,GAAiB,OAAO,CAAC,OAAR,IAAmB,KAApC;IACA,MAAM,CAAC,cAAP,GAAwB,OAAO,CAAC,cAAR,IAA0B,KAAlD;IACA,MAAM,CAAC,QAAP,GAAkB,OAAO,CAAC,QAAR,IAAoB,KAAtC;IACA,MAAM,CAAC,SAAP,GAAmB,OAAO,CAAC,SAAR,IAAqB,KAAxC;IACA,MAAM,CAAC,OAAP,GAAiB,OAAO,CAAC,OAAR,IAAmB,KAApC;IAEA,OAAO,MAAP;EACH;EAED;;;AAGG;;;EACoC,OAAhC,gCAAgC,CAAC,UAAD,EAAqB,IAArB,EAAmC;IACtE,IAAI,MAAM,GAAG,IAAI,kCAAJ,EAAb;IAEA,IAAI,CAAC,SAAD,EAAY,UAAZ,EAAwB,KAAxB,EAA+B,MAA/B,EAAuC,GAAG,iBAA1C,IAA+D,IAAnE;IACA,IAAI,UAAU,GAAG,oBAAoB,CAAC,iBAAD,CAArC;IAEA,MAAM,CAAC,UAAP,GAAoB,UAApB;IACA,MAAM,CAAC,IAAP,GAAc,SAAS,CAAC,QAAV,EAAd;IACA,MAAM,CAAC,MAAP,GAAgB,UAAhB;IACA,MAAM,CAAC,KAAP,GAAe,YAAA,CAAA,OAAA,CAAQ,UAAR,CAAmB,KAAnB,CAAf;IACA,MAAM,CAAC,QAAP,GAAkB,UAAU,CAAC,WAAX,CAAuB,QAAvB,EAAlB;IACA,MAAM,CAAC,MAAP,GAAgB,IAAI,cAAA,CAAA,SAAJ,CAAc,MAAM,CAAC,QAAP,EAAd,EAAiC,SAAjC,CAA2C,CAAC,MAAM,CAAC,QAAnD,CAAhB;IACA,MAAM,CAAC,QAAP,GAAkB,UAAU,CAAC,QAA7B;IACA,MAAM,CAAC,UAAP,GAAoB,UAAU,CAAC,UAA/B;IACA,MAAM,CAAC,OAAP,GAAiB,UAAU,CAAC,OAA5B;IACA,MAAM,CAAC,OAAP,GAAiB,UAAU,CAAC,OAA5B;IACA,MAAM,CAAC,cAAP,GAAwB,UAAU,CAAC,cAAnC;IACA,MAAM,CAAC,QAAP,GAAkB,UAAU,CAAC,QAA7B;IACA,MAAM,CAAC,SAAP,GAAmB,UAAU,CAAC,SAA9B;IACA,MAAM,CAAC,OAAP,GAAiB,UAAU,CAAC,OAA5B;IAEA,OAAO,MAAP;EACH;;AAhE0C;;AAA/C,OAAA,CAAA,kCAAA,GAAA,kCAAA;;AAmEA,MAAa,oCAAb,CAAiD;EAAjD,WAAA,GAAA;IACI,KAAA,UAAA,GAAqB,EAArB;IACA,KAAA,IAAA,GAAe,EAAf;IACA,KAAA,IAAA,GAAe,EAAf;IACA,KAAA,MAAA,GAAiB,EAAjB;IACA,KAAA,KAAA,GAAkB,IAAI,YAAA,CAAA,OAAJ,CAAY,EAAZ,CAAlB;IACA,KAAA,QAAA,GAAmB,CAAnB;IACA,KAAA,QAAA,GAAoB,KAApB;IACA,KAAA,SAAA,GAAqB,KAArB;IACA,KAAA,OAAA,GAAmB,KAAnB;IACA,KAAA,wBAAA,GAAoC,KAApC;EA0CH;;EAxC6B,OAAnB,mBAAmB,CAAC,OAAD,EAAa;IACnC,IAAI,MAAM,GAAG,IAAI,oCAAJ,EAAb;IAEA,MAAM,CAAC,UAAP,GAAoB,OAAO,CAAC,UAAR,IAAsB,EAA1C;IACA,MAAM,CAAC,IAAP,GAAc,OAAO,CAAC,IAAR,IAAgB,EAA9B;IACA,MAAM,CAAC,IAAP,GAAc,OAAO,CAAC,IAAR,IAAgB,EAA9B;IACA,MAAM,CAAC,MAAP,GAAgB,OAAO,CAAC,MAAR,IAAkB,EAAlC;IACA,MAAM,CAAC,KAAP,GAAe,IAAI,YAAA,CAAA,OAAJ,CAAY,OAAO,CAAC,KAAR,IAAiB,EAA7B,CAAf;IACA,MAAM,CAAC,QAAP,GAAkB,OAAO,CAAC,QAAR,IAAoB,CAAtC;IACA,MAAM,CAAC,QAAP,GAAkB,OAAO,CAAC,QAAR,IAAoB,KAAtC;IACA,MAAM,CAAC,SAAP,GAAmB,OAAO,CAAC,SAAR,IAAqB,KAAxC;IACA,MAAM,CAAC,OAAP,GAAiB,OAAO,CAAC,OAAR,IAAmB,KAApC;IACA,MAAM,CAAC,wBAAP,GAAkC,OAAO,CAAC,wBAAR,IAAoC,KAAtE;IAEA,OAAO,MAAP;EACH;EAED;;;AAGG;;;EACqC,OAAhC,gCAAgC,CAAC,UAAD,EAAqB,IAArB,EAAmC;IACvE,IAAI,MAAM,GAAG,IAAI,oCAAJ,EAAb;IAEA,IAAI,CAAC,SAAD,EAAY,SAAZ,EAAuB,KAAvB,EAA8B,CAA9B,EAAiC,EAAjC,EAAqC,GAAG,iBAAxC,IAA6D,IAAjE;IACA,IAAI,UAAU,GAAG,oBAAoB,CAAC,iBAAD,CAArC;IAEA,MAAM,CAAC,UAAP,GAAoB,UAApB;IACA,MAAM,CAAC,IAAP,GAAc,SAAS,CAAC,QAAV,EAAd;IACA,MAAM,CAAC,IAAP,GAAc,SAAS,CAAC,QAAV,EAAd;IACA,MAAM,CAAC,MAAP,GAAgB,UAAhB;IACA,MAAM,CAAC,KAAP,GAAe,YAAA,CAAA,OAAA,CAAQ,UAAR,CAAmB,KAAnB,CAAf;IACA,MAAM,CAAC,QAAP,GAAkB,UAAU,CAAC,WAAX,CAAuB,QAAvB,EAAlB;IACA,MAAM,CAAC,QAAP,GAAkB,UAAU,CAAC,QAA7B;IACA,MAAM,CAAC,SAAP,GAAmB,UAAU,CAAC,SAA9B;IACA,MAAM,CAAC,OAAP,GAAiB,UAAU,CAAC,OAA5B;IACA,MAAM,CAAC,wBAAP,GAAkC,UAAU,CAAC,wBAA7C;IAEA,OAAO,MAAP;EACH;;AAnD4C;;AAAjD,OAAA,CAAA,oCAAA,GAAA,oCAAA,C,CAsDA;;AACA,SAAS,oBAAT,CAA8B,iBAA9B,EAAyD;EACrD,IAAI,UAAU,GAAwB,EAAtC;;EAEA,KAAK,IAAI,MAAT,IAAmB,iBAAnB,EAAsC;IAClC,IAAI,CAAC,IAAD,EAAO,KAAP,IAAgB,MAAM,CAAC,QAAP,GAAkB,KAAlB,CAAwB,GAAxB,CAApB;IACA,UAAU,CAAC,IAAD,CAAV,GAAmB,yBAAyB,CAAC,KAAD,CAA5C;EACH;;EAED,OAAO,UAAP;AACH,C,CAED;;;AACA,SAAS,yBAAT,CAAmC,KAAnC,EAAgD;EAC5C,QAAQ,KAAR;IACI,KAAK,MAAL;MAAa,OAAO,IAAP;;IACb,KAAK,OAAL;MAAc,OAAO,KAAP;;IACd;MAAS,OAAO,IAAI,cAAA,CAAA,SAAJ,CAAc,KAAd,CAAP;EAHb;AAKH","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DefinitionOfTokenCollectionOnNetwork = exports.DefinitionOfFungibleTokenOnNetwork = void 0;\r\nconst bignumber_js_1 = require(\"bignumber.js\");\r\nconst primitives_1 = require(\"./primitives\");\r\nclass DefinitionOfFungibleTokenOnNetwork {\r\n    constructor() {\r\n        this.identifier = \"\";\r\n        this.name = \"\";\r\n        this.ticker = \"\";\r\n        this.owner = new primitives_1.Address(\"\");\r\n        this.decimals = 0;\r\n        this.supply = new bignumber_js_1.BigNumber(0);\r\n        this.isPaused = false;\r\n        this.canUpgrade = false;\r\n        this.canMint = false;\r\n        this.canBurn = false;\r\n        this.canChangeOwner = false;\r\n        this.canPause = false;\r\n        this.canFreeze = false;\r\n        this.canWipe = false;\r\n        this.canAddSpecialRoles = false;\r\n    }\r\n    static fromApiHttpResponse(payload) {\r\n        let result = new DefinitionOfFungibleTokenOnNetwork();\r\n        result.identifier = payload.identifier || \"\";\r\n        result.name = payload.name || \"\";\r\n        result.ticker = payload.ticker || \"\";\r\n        result.owner = new primitives_1.Address(payload.owner || \"\");\r\n        result.decimals = payload.decimals || 0;\r\n        result.supply = new bignumber_js_1.BigNumber(payload.supply || \"0\");\r\n        result.isPaused = payload.isPaused || false;\r\n        result.canUpgrade = payload.canUpgrade || false;\r\n        result.canMint = payload.canMint || false;\r\n        result.canBurn = payload.canBurn || false;\r\n        result.canChangeOwner = payload.canChangeOwner || false;\r\n        result.canPause = payload.canPause || false;\r\n        result.canFreeze = payload.canFreeze || false;\r\n        result.canWipe = payload.canWipe || false;\r\n        return result;\r\n    }\r\n    /**\r\n     * The implementation has been moved here from the following location:\r\n     * https://github.com/ElrondNetwork/elrond-sdk-erdjs/blob/release/v9/src/token.ts\r\n     */\r\n    static fromResponseOfGetTokenProperties(identifier, data) {\r\n        let result = new DefinitionOfFungibleTokenOnNetwork();\r\n        let [tokenName, _tokenType, owner, supply, ...propertiesBuffers] = data;\r\n        let properties = parseTokenProperties(propertiesBuffers);\r\n        result.identifier = identifier;\r\n        result.name = tokenName.toString();\r\n        result.ticker = identifier;\r\n        result.owner = primitives_1.Address.fromPubkey(owner);\r\n        result.decimals = properties.NumDecimals.toNumber();\r\n        result.supply = new bignumber_js_1.BigNumber(supply.toString()).shiftedBy(-result.decimals);\r\n        result.isPaused = properties.IsPaused;\r\n        result.canUpgrade = properties.CanUpgrade;\r\n        result.canMint = properties.CanMint;\r\n        result.canBurn = properties.CanBurn;\r\n        result.canChangeOwner = properties.CanChangeOwner;\r\n        result.canPause = properties.CanPause;\r\n        result.canFreeze = properties.CanFreeze;\r\n        result.canWipe = properties.CanWipe;\r\n        return result;\r\n    }\r\n}\r\nexports.DefinitionOfFungibleTokenOnNetwork = DefinitionOfFungibleTokenOnNetwork;\r\nclass DefinitionOfTokenCollectionOnNetwork {\r\n    constructor() {\r\n        this.collection = \"\";\r\n        this.type = \"\";\r\n        this.name = \"\";\r\n        this.ticker = \"\";\r\n        this.owner = new primitives_1.Address(\"\");\r\n        this.decimals = 0;\r\n        this.canPause = false;\r\n        this.canFreeze = false;\r\n        this.canWipe = false;\r\n        this.canTransferNftCreateRole = false;\r\n    }\r\n    static fromApiHttpResponse(payload) {\r\n        let result = new DefinitionOfTokenCollectionOnNetwork();\r\n        result.collection = payload.collection || \"\";\r\n        result.type = payload.type || \"\";\r\n        result.name = payload.name || \"\";\r\n        result.ticker = payload.ticker || \"\";\r\n        result.owner = new primitives_1.Address(payload.owner || \"\");\r\n        result.decimals = payload.decimals || 0;\r\n        result.canPause = payload.canPause || false;\r\n        result.canFreeze = payload.canFreeze || false;\r\n        result.canWipe = payload.canWipe || false;\r\n        result.canTransferNftCreateRole = payload.canTransferNftCreateRole || false;\r\n        return result;\r\n    }\r\n    /**\r\n     * The implementation has been moved here from the following location:\r\n     * https://github.com/ElrondNetwork/elrond-sdk-erdjs/blob/release/v9/src/token.ts\r\n     */\r\n    static fromResponseOfGetTokenProperties(collection, data) {\r\n        let result = new DefinitionOfTokenCollectionOnNetwork();\r\n        let [tokenName, tokenType, owner, _, __, ...propertiesBuffers] = data;\r\n        let properties = parseTokenProperties(propertiesBuffers);\r\n        result.collection = collection;\r\n        result.type = tokenType.toString();\r\n        result.name = tokenName.toString();\r\n        result.ticker = collection;\r\n        result.owner = primitives_1.Address.fromPubkey(owner);\r\n        result.decimals = properties.NumDecimals.toNumber();\r\n        result.canPause = properties.CanPause;\r\n        result.canFreeze = properties.CanFreeze;\r\n        result.canWipe = properties.CanWipe;\r\n        result.canTransferNftCreateRole = properties.CanTransferNFTCreateRole;\r\n        return result;\r\n    }\r\n}\r\nexports.DefinitionOfTokenCollectionOnNetwork = DefinitionOfTokenCollectionOnNetwork;\r\n// Token properties have the following format: {PropertyName}-{PropertyValue}.\r\nfunction parseTokenProperties(propertiesBuffers) {\r\n    let properties = {};\r\n    for (let buffer of propertiesBuffers) {\r\n        let [name, value] = buffer.toString().split(\"-\");\r\n        properties[name] = parseValueOfTokenProperty(value);\r\n    }\r\n    return properties;\r\n}\r\n// This only handles booleans and numbers.\r\nfunction parseValueOfTokenProperty(value) {\r\n    switch (value) {\r\n        case \"true\": return true;\r\n        case \"false\": return false;\r\n        default: return new bignumber_js_1.BigNumber(value);\r\n    }\r\n}\r\n//# sourceMappingURL=tokenDefinitions.js.map"]},"metadata":{},"sourceType":"script"}