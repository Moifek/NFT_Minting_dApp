{"ast":null,"code":"var _jsxFileName = \"/home/mmo/workspace/NFT_Minting_dApp/src/pages/Home/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { transactionServices, useGetAccountInfo, useGetNetworkConfig, refreshAccount } from \"@elrondnetwork/dapp-core\";\nimport { Link } from \"react-router-dom\";\nimport { dAppName } from \"config\";\nimport { routeNames } from \"routes\";\nimport { ProxyNetworkProvider } from \"@elrondnetwork/erdjs-network-providers\";\nimport { Address, NetworkConfig, AbiRegistry, SmartContractAbi, SmartContract, ContractFunction, ProxyProvider } from \"@elrondnetwork/erdjs\"; //import { promises } from \"fs\";\n//import * as fs from \"fs\";\n\nimport { getTransactions } from \"apiRequests\";\nimport { contractAddress } from \"config\";\nimport logo from \"./logo.png\";\nimport gif1 from \"./gif1.gif\";\nimport \"./Homeindex.css\"; //import { stringify } from \"querystring\";\n\nimport data from \"./test.json\";\nimport { commonTxOperations, getMintTransaction, publicEndpointSetup, GetAddress } from \"./utils\"; //import { propTypes } from \"react-bootstrap/esm/Image\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const {\n    address\n  } = useGetAccountInfo();\n  /**************************************************Block Jdid **************************/\n\n  const {\n    success,\n    fail,\n    hasActiveTransactions\n  } = transactionServices.useGetActiveTransactionsStatus();\n  const {\n    network: {\n      apiAddress\n    }\n  } = useGetNetworkConfig();\n  const [state, setState] = React.useState({\n    transactions: [],\n    transactionsFetched: undefined\n  });\n  const account = useGetAccountInfo();\n\n  const fetchData = () => {\n    if (success || fail || !hasActiveTransactions) {\n      getTransactions({\n        apiAddress,\n        address: account.address,\n        timeout: 3000,\n        contractAddress\n      }).then(_ref => {\n        let {\n          data,\n          success: transactionsFetched\n        } = _ref;\n        refreshAccount();\n        setState({\n          transactions: data,\n          transactionsFetched\n        });\n      });\n    }\n  };\n\n  React.useEffect(fetchData, [success, fail, hasActiveTransactions]);\n  /*************************************************************************************/\n\n  const add = function () {\n    let factor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n    if (factor < 0) {\n      if (count > 0) setCount(count + factor);\n    } else {\n      setCount(count + factor);\n    }\n  };\n\n  const syncProviderConfig = async provider => {\n    return NetworkConfig.getDefault().sync(provider); //return UserSigner.fromWallet() get user wallet signer\n  };\n\n  function createSmartContractInstance(abi, SCaddress) {\n    const contract = new SmartContract({\n      address: SCaddress ? new Address(SCaddress) : undefined,\n      abi: abi && new SmartContractAbi(abi, abi.interfaces.map(iface => iface.name))\n    });\n    return contract;\n  }\n\n  const abi = async () => {\n    let networkProvider = new ProxyNetworkProvider(\"https://devnet-gateway.elrond.com\");\n    let networkConfig = await networkProvider.getNetworkConfig();\n    let provider = new ProxyProvider(\"https://devnet-gateway.elrond.com\");\n    await GetAddress(address);\n    await syncProviderConfig(provider);\n    let jsonContent = JSON.parse(JSON.stringify(data)); //let abi = new SmartContractAbi(abiRegistry, [\"MyContract\"]);\n\n    let registry = new AbiRegistry().extend(jsonContent);\n    let abiRegistry = registry.remapToKnownTypes();\n    console.log(abiRegistry);\n    let contract = createSmartContractInstance(abiRegistry, \"erd1qqqqqqqqqqqqqpgqdx22q4lg64w20fsscll2w5z5lc08whac5uhslwwwp7\");\n    console.log(contract);\n    console.log(contract.getAbi().getEndpoint(\"getNftPrice\"));\n    let response = await contract.runQuery(provider, {\n      func: new ContractFunction(\"getNftPrice\"),\n      args: [],\n      caller: new Address(\"erd16ht3gyfw6xfcm9s89swczscas85y882am3atdar487mz3dzy5uhszny4gn\")\n    });\n    let mintx = getMintTransaction(\"erd1qqqqqqqqqqqqqpgqdx22q4lg64w20fsscll2w5z5lc08whac5uhslwwwp7\", 14000000, 2);\n    const {\n      signer,\n      LoggedUserAccount\n    } = await publicEndpointSetup(provider);\n    await commonTxOperations(mintx, LoggedUserAccount, signer, provider);\n    await console.log(LoggedUserAccount);\n    return contract;\n  };\n\n  console.log(abi());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-fill align-items-center  rounded-pill\",\n    style: {\n      height: \"70vh\",\n      paddingTop: \"25%\",\n      marginTop: \"15%\",\n      marginRight: \"5%\",\n      marginLeft: \"5%\",\n      marginBottom: \"15%\",\n      paddingBottom: \"40%\",\n      backgroundColor: \"#2e765e\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row w-100 justify-content-between\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-8 col-lg-5 mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: String(logo),\n          alt: \"Logo\",\n          className: \"rounded mx-auto d-block\",\n          style: {\n            width: \"370px\",\n            height: \"320px\",\n            marginTop: \"30%\",\n            padding: \"25px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card shadow-sm rounded-pill border border-warning p-4\",\n          style: {\n            width: \"100%\",\n            height: \"60%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: String(gif1),\n              className: \"rounded border rounded-circle mx-auto d-block\",\n              style: {\n                width: \"50%\",\n                height: \"50%\",\n                border: \"10px\",\n                margin: \"2%\"\n              },\n              alt: \"gif\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"mb-3\",\n              \"data-testid\": \"title\",\n              children: dAppName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container \",\n              children: [address ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-lg mt-3 text-white\",\n                style: {\n                  margin: \"10px\",\n                  backgroundColor: \"#00665d\"\n                },\n                onClick: () => add(),\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this) : null, address ? /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 28\n              }, this) : null, address ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-lg mt-3 text-white\",\n                style: {\n                  margin: \"5px\",\n                  backgroundColor: \"#d2b48c\"\n                },\n                onClick: () => add(-1),\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), address ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-lg mt-3 text-white golden\",\n              style: {\n                margin: \"5px\",\n                backgroundColor: \"#d2b48c\"\n              },\n              children: \"Mint\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this) : null, \" \", address ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-lg mt-3 text-white\",\n              style: {\n                margin: \"5px\",\n                backgroundColor: \"#00665d\"\n              },\n              onClick: () => {\n                window.open(\"https://deadrare.io/collection/ZEB-9k4d2j\", \"_blank\");\n              },\n              children: \"DeadRare\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-3\",\n              children: [\"This is the official N4P foresters NFTs Minting Site\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this), \" Login using your Elrond wallet.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), !address ? /*#__PURE__*/_jsxDEV(Link, {\n              to: routeNames.unlock,\n              className: \"btn btn-primary mt-3 text-white golden\",\n              \"data-testid\": \"loginBtn\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            padding: \"15px\",\n            textAlign: \"center\",\n            alignContent: \"center\",\n            color: \"white\"\n          },\n          children: \"We have set the gas limit to 1000 for the contract to successfully mint your NFT. We recommend that you do not lower the gas limit.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"qqY7xQdROoUFM7OEiBWwTPtpWqY=\", false, function () {\n  return [useGetAccountInfo, transactionServices.useGetActiveTransactionsStatus, useGetNetworkConfig, useGetAccountInfo];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/mmo/workspace/NFT_Minting_dApp/src/pages/Home/index.tsx"],"names":["React","useState","transactionServices","useGetAccountInfo","useGetNetworkConfig","refreshAccount","Link","dAppName","routeNames","ProxyNetworkProvider","Address","NetworkConfig","AbiRegistry","SmartContractAbi","SmartContract","ContractFunction","ProxyProvider","getTransactions","contractAddress","logo","gif1","data","commonTxOperations","getMintTransaction","publicEndpointSetup","GetAddress","Home","count","setCount","address","success","fail","hasActiveTransactions","useGetActiveTransactionsStatus","network","apiAddress","state","setState","transactions","transactionsFetched","undefined","account","fetchData","timeout","then","useEffect","add","factor","syncProviderConfig","provider","getDefault","sync","createSmartContractInstance","abi","SCaddress","contract","interfaces","map","iface","name","networkProvider","networkConfig","getNetworkConfig","jsonContent","JSON","parse","stringify","registry","extend","abiRegistry","remapToKnownTypes","console","log","getAbi","getEndpoint","response","runQuery","func","args","caller","mintx","signer","LoggedUserAccount","height","paddingTop","marginTop","marginRight","marginLeft","marginBottom","paddingBottom","backgroundColor","String","width","padding","border","margin","window","open","unlock","textAlign","alignContent","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,SACEC,mBADF,EAEEC,iBAFF,EAGEC,mBAHF,EAIEC,cAJF,QAKO,0BALP;AAMA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,SAASC,oBAAT,QAAqC,wCAArC;AACA,SACEC,OADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,gBAJF,EAKEC,aALF,EAMEC,gBANF,EAQEC,aARF,QASO,sBATP,C,CAUA;AACA;;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,eAAT,QAAgC,QAAhC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AAEA,OAAO,iBAAP,C,CACA;;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SACEC,kBADF,EAEEC,kBAFF,EAGEC,mBAHF,EAIEC,UAJF,QAKO,SALP,C,CAMA;;;AAQA,OAAO,MAAMC,IAAe,GAAG,MAAM;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAE4B,IAAAA;AAAF,MAAc1B,iBAAiB,EAArC;AACA;;AACA,QAAM;AAAE2B,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,MACJ9B,mBAAmB,CAAC+B,8BAApB,EADF;AAGA,QAAM;AACJC,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF;AADL,MAEF/B,mBAAmB,EAFvB;AAIA,QAAM,CAACgC,KAAD,EAAQC,QAAR,IAAoBrC,KAAK,CAACC,QAAN,CAA0B;AAClDqC,IAAAA,YAAY,EAAE,EADoC;AAElDC,IAAAA,mBAAmB,EAAEC;AAF6B,GAA1B,CAA1B;AAIA,QAAMC,OAAO,GAAGtC,iBAAiB,EAAjC;;AAEA,QAAMuC,SAAS,GAAG,MAAM;AACtB,QAAIZ,OAAO,IAAIC,IAAX,IAAmB,CAACC,qBAAxB,EAA+C;AAC7Cf,MAAAA,eAAe,CAAC;AACdkB,QAAAA,UADc;AAEdN,QAAAA,OAAO,EAAEY,OAAO,CAACZ,OAFH;AAGdc,QAAAA,OAAO,EAAE,IAHK;AAIdzB,QAAAA;AAJc,OAAD,CAAf,CAKG0B,IALH,CAKQ,QAA4C;AAAA,YAA3C;AAAEvB,UAAAA,IAAF;AAAQS,UAAAA,OAAO,EAAES;AAAjB,SAA2C;AAClDlC,QAAAA,cAAc;AACdgC,QAAAA,QAAQ,CAAC;AACPC,UAAAA,YAAY,EAAEjB,IADP;AAEPkB,UAAAA;AAFO,SAAD,CAAR;AAID,OAXD;AAYD;AACF,GAfD;;AAgBAvC,EAAAA,KAAK,CAAC6C,SAAN,CAAgBH,SAAhB,EAA2B,CAACZ,OAAD,EAAUC,IAAV,EAAgBC,qBAAhB,CAA3B;AACA;;AACA,QAAMc,GAAG,GAAG,YAAgB;AAAA,QAAfC,MAAe,uEAAN,CAAM;;AAC1B,QAAIA,MAAM,GAAG,CAAb,EAAgB;AACd,UAAIpB,KAAK,GAAG,CAAZ,EAAeC,QAAQ,CAACD,KAAK,GAAGoB,MAAT,CAAR;AAChB,KAFD,MAEO;AACLnB,MAAAA,QAAQ,CAACD,KAAK,GAAGoB,MAAT,CAAR;AACD;AACF,GAND;;AAQA,QAAMC,kBAAkB,GAAG,MAAOC,QAAP,IAA+B;AACxD,WAAOtC,aAAa,CAACuC,UAAd,GAA2BC,IAA3B,CAAgCF,QAAhC,CAAP,CADwD,CAExD;AACD,GAHD;;AAKA,WAASG,2BAAT,CAAqCC,GAArC,EAAwDC,SAAxD,EAA4E;AAC1E,UAAMC,QAAQ,GAAG,IAAIzC,aAAJ,CAAkB;AACjCe,MAAAA,OAAO,EAAEyB,SAAS,GAAG,IAAI5C,OAAJ,CAAY4C,SAAZ,CAAH,GAA4Bd,SADb;AAEjCa,MAAAA,GAAG,EACDA,GAAG,IACH,IAAIxC,gBAAJ,CACEwC,GADF,EAEEA,GAAG,CAACG,UAAJ,CAAeC,GAAf,CAAoBC,KAAD,IAAWA,KAAK,CAACC,IAApC,CAFF;AAJ+B,KAAlB,CAAjB;AAUA,WAAOJ,QAAP;AACD;;AAED,QAAMF,GAAG,GAAG,YAAY;AACtB,QAAIO,eAAe,GAAG,IAAInD,oBAAJ,CACpB,mCADoB,CAAtB;AAGA,QAAIoD,aAAa,GAAG,MAAMD,eAAe,CAACE,gBAAhB,EAA1B;AACA,QAAIb,QAAQ,GAAG,IAAIjC,aAAJ,CAAkB,mCAAlB,CAAf;AACA,UAAMS,UAAU,CAACI,OAAD,CAAhB;AACA,UAAMmB,kBAAkB,CAACC,QAAD,CAAxB;AACA,QAAIc,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe7C,IAAf,CAAX,CAAlB,CARsB,CAStB;;AACA,QAAI8C,QAAQ,GAAG,IAAIvD,WAAJ,GAAkBwD,MAAlB,CAAyBL,WAAzB,CAAf;AACA,QAAIM,WAAW,GAAGF,QAAQ,CAACG,iBAAT,EAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AAEA,QAAId,QAAQ,GAAGH,2BAA2B,CACxCiB,WADwC,EAExC,gEAFwC,CAA1C;AAIAE,IAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAZ;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAQ,CAACkB,MAAT,GAAkBC,WAAlB,CAA8B,aAA9B,CAAZ;AACA,QAAIC,QAAQ,GAAG,MAAMpB,QAAQ,CAACqB,QAAT,CAAkB3B,QAAlB,EAA4B;AAC/C4B,MAAAA,IAAI,EAAE,IAAI9D,gBAAJ,CAAqB,aAArB,CADyC;AAE/C+D,MAAAA,IAAI,EAAE,EAFyC;AAG/CC,MAAAA,MAAM,EAAE,IAAIrE,OAAJ,CACN,gEADM;AAHuC,KAA5B,CAArB;AAOA,QAAIsE,KAAK,GAAGzD,kBAAkB,CAC5B,gEAD4B,EAE5B,QAF4B,EAG5B,CAH4B,CAA9B;AAKA,UAAM;AAAE0D,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAgC,MAAM1D,mBAAmB,CAACyB,QAAD,CAA/D;AACA,UAAM3B,kBAAkB,CAAC0D,KAAD,EAAQE,iBAAR,EAA2BD,MAA3B,EAAmChC,QAAnC,CAAxB;AACA,UAAMsB,OAAO,CAACC,GAAR,CAAYU,iBAAZ,CAAN;AACA,WAAO3B,QAAP;AACD,GApCD;;AAsCAgB,EAAAA,OAAO,CAACC,GAAR,CAAYnB,GAAG,EAAf;AAEA,sBACE;AACE,IAAA,SAAS,EAAC,mDADZ;AAEE,IAAA,KAAK,EAAE;AACL8B,MAAAA,MAAM,EAAE,MADH;AAELC,MAAAA,UAAU,EAAE,KAFP;AAGLC,MAAAA,SAAS,EAAE,KAHN;AAILC,MAAAA,WAAW,EAAE,IAJR;AAKLC,MAAAA,UAAU,EAAE,IALP;AAMLC,MAAAA,YAAY,EAAE,KANT;AAOLC,MAAAA,aAAa,EAAE,KAPV;AAQLC,MAAAA,eAAe,EAAE;AARZ,KAFT;AAAA,2BAaE;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA,gCACE;AACE,UAAA,GAAG,EAAEC,MAAM,CAACxE,IAAD,CADb;AAEE,UAAA,GAAG,EAAC,MAFN;AAGE,UAAA,SAAS,EAAC,yBAHZ;AAIE,UAAA,KAAK,EAAE;AACLyE,YAAAA,KAAK,EAAE,OADF;AAELT,YAAAA,MAAM,EAAE,OAFH;AAGLE,YAAAA,SAAS,EAAE,KAHN;AAILQ,YAAAA,OAAO,EAAE;AAJJ;AAJT;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE;AACE,UAAA,SAAS,EAAC,uDADZ;AAEE,UAAA,KAAK,EAAE;AACLD,YAAAA,KAAK,EAAE,MADF;AAELT,YAAAA,MAAM,EAAE;AAFH,WAFT;AAAA,iCAOE;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,oCACE;AACE,cAAA,GAAG,EAAEQ,MAAM,CAACvE,IAAD,CADb;AAEE,cAAA,SAAS,EAAC,+CAFZ;AAGE,cAAA,KAAK,EAAE;AACLwE,gBAAAA,KAAK,EAAE,KADF;AAELT,gBAAAA,MAAM,EAAE,KAFH;AAGLW,gBAAAA,MAAM,EAAE,MAHH;AAILC,gBAAAA,MAAM,EAAE;AAJH,eAHT;AASE,cAAA,GAAG,EAAC;AATN;AAAA;AAAA;AAAA;AAAA,oBADF,eAYE;AAAI,cAAA,SAAS,EAAC,MAAd;AAAqB,6BAAY,OAAjC;AAAA,wBACGxF;AADH;AAAA;AAAA;AAAA;AAAA,oBAZF,eAeE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,yBACGsB,OAAO,gBACN;AACE,gBAAA,SAAS,EAAC,4BADZ;AAEE,gBAAA,KAAK,EAAE;AACLkE,kBAAAA,MAAM,EAAE,MADH;AAELL,kBAAAA,eAAe,EAAE;AAFZ,iBAFT;AAME,gBAAA,OAAO,EAAE,MAAM5C,GAAG,EANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADM,GAWJ,IAZN,EAaGjB,OAAO,gBAAG;AAAA,0BAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,sBAAH,GAAsB,IAbhC,EAcGE,OAAO,gBACN;AACE,gBAAA,SAAS,EAAC,4BADZ;AAEE,gBAAA,KAAK,EAAE;AACLkE,kBAAAA,MAAM,EAAE,KADH;AAELL,kBAAAA,eAAe,EAAE;AAFZ,iBAFT;AAME,gBAAA,OAAO,EAAE,MAAM5C,GAAG,CAAC,CAAC,CAAF,CANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADM,GAWJ,IAzBN;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfF,EA0CGjB,OAAO,gBACN;AACE,cAAA,SAAS,EAAC,mCADZ;AAEE,cAAA,KAAK,EAAE;AACLkE,gBAAAA,MAAM,EAAE,KADH;AAGLL,gBAAAA,eAAe,EAAE;AAHZ,eAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADM,GAWJ,IArDN,EAqDY,GArDZ,EAsDG7D,OAAO,gBACN;AACE,cAAA,SAAS,EAAC,4BADZ;AAEE,cAAA,KAAK,EAAE;AACLkE,gBAAAA,MAAM,EAAE,KADH;AAELL,gBAAAA,eAAe,EAAE;AAFZ,eAFT;AAME,cAAA,OAAO,EAAE,MAAM;AACbM,gBAAAA,MAAM,CAACC,IAAP,CACE,2CADF,EAEE,QAFF;AAID,eAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADM,GAgBJ,IAtEN,eAuEE;AAAA;AAAA;AAAA;AAAA,oBAvEF,eAwEE;AAAA;AAAA;AAAA;AAAA,oBAxEF,eAyEE;AAAG,cAAA,SAAS,EAAC,MAAb;AAAA,8FAEE;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzEF,EA6EG,CAACpE,OAAD,gBACC,QAAC,IAAD;AACE,cAAA,EAAE,EAAErB,UAAU,CAAC0F,MADjB;AAEE,cAAA,SAAS,EAAC,wCAFZ;AAGE,6BAAY,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,GAQG,IArFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,gBAbF,eA6GE;AACE,UAAA,KAAK,EAAE;AACLL,YAAAA,OAAO,EAAE,MADJ;AAELM,YAAAA,SAAS,EAAE,QAFN;AAGLC,YAAAA,YAAY,EAAE,QAHT;AAILC,YAAAA,KAAK,EAAE;AAJF,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7GF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA,UADF;AA2ID,CAjPM;;GAAM3E,I;UAESvB,iB,EAGlBD,mBAAmB,CAAC+B,8B,EAIlB7B,mB,EAMYD,iB;;;KAfLuB,I;AAmPb,eAAeA,IAAf","sourcesContent":["import React, { FC, useState } from \"react\";\nimport {\n  transactionServices,\n  useGetAccountInfo,\n  useGetNetworkConfig,\n  refreshAccount,\n} from \"@elrondnetwork/dapp-core\";\nimport { Link } from \"react-router-dom\";\nimport { dAppName } from \"config\";\nimport { routeNames } from \"routes\";\nimport { ProxyNetworkProvider } from \"@elrondnetwork/erdjs-network-providers\";\nimport {\n  Address,\n  NetworkConfig,\n  AbiRegistry,\n  SmartContractAbi,\n  SmartContract,\n  ContractFunction,\n  IProvider,\n  ProxyProvider,\n} from \"@elrondnetwork/erdjs\";\n//import { promises } from \"fs\";\n//import * as fs from \"fs\";\nimport { getTransactions } from \"apiRequests\";\nimport { contractAddress } from \"config\";\nimport logo from \"./logo.png\";\nimport gif1 from \"./gif1.gif\";\nimport { StateType } from './types';\nimport \"./Homeindex.css\";\n//import { stringify } from \"querystring\";\nimport data from \"./test.json\";\nimport {\n  commonTxOperations,\n  getMintTransaction,\n  publicEndpointSetup,\n  GetAddress,\n} from \"./utils\";\n//import { propTypes } from \"react-bootstrap/esm/Image\";\n\ninterface Props {\n  title: string;\n  initialCount: number;\n  SCaddress: Address;\n}\n\nexport const Home: FC<Props> = () => {\n  const [count, setCount] = useState(0);\n  const { address } = useGetAccountInfo();\n  /**************************************************Block Jdid **************************/\n  const { success, fail, hasActiveTransactions } =\n    transactionServices.useGetActiveTransactionsStatus();\n\n  const {\n    network: { apiAddress },\n  } = useGetNetworkConfig();\n\n  const [state, setState] = React.useState<StateType>({\n    transactions: [],\n    transactionsFetched: undefined,\n  });\n  const account = useGetAccountInfo();\n\n  const fetchData = () => {\n    if (success || fail || !hasActiveTransactions) {\n      getTransactions({\n        apiAddress,\n        address: account.address,\n        timeout: 3000,\n        contractAddress,\n      }).then(({ data, success: transactionsFetched }) => {\n        refreshAccount();\n        setState({\n          transactions: data,\n          transactionsFetched,\n        });\n      });\n    }\n  };\n  React.useEffect(fetchData, [success, fail, hasActiveTransactions]);\n  /*************************************************************************************/\n  const add = (factor = 1) => {\n    if (factor < 0) {\n      if (count > 0) setCount(count + factor);\n    } else {\n      setCount(count + factor);\n    }\n  };\n\n  const syncProviderConfig = async (provider: IProvider) => {\n    return NetworkConfig.getDefault().sync(provider);\n    //return UserSigner.fromWallet() get user wallet signer\n  };\n\n  function createSmartContractInstance(abi?: AbiRegistry, SCaddress?: string) {\n    const contract = new SmartContract({\n      address: SCaddress ? new Address(SCaddress) : undefined,\n      abi:\n        abi &&\n        new SmartContractAbi(\n          abi,\n          abi.interfaces.map((iface) => iface.name)\n        ),\n    });\n\n    return contract;\n  }\n\n  const abi = async () => {\n    let networkProvider = new ProxyNetworkProvider(\n      \"https://devnet-gateway.elrond.com\"\n    );\n    let networkConfig = await networkProvider.getNetworkConfig();\n    let provider = new ProxyProvider(\"https://devnet-gateway.elrond.com\");\n    await GetAddress(address);\n    await syncProviderConfig(provider);\n    let jsonContent = JSON.parse(JSON.stringify(data));\n    //let abi = new SmartContractAbi(abiRegistry, [\"MyContract\"]);\n    let registry = new AbiRegistry().extend(jsonContent);\n    let abiRegistry = registry.remapToKnownTypes();\n    console.log(abiRegistry);\n\n    let contract = createSmartContractInstance(\n      abiRegistry,\n      \"erd1qqqqqqqqqqqqqpgqdx22q4lg64w20fsscll2w5z5lc08whac5uhslwwwp7\"\n    );\n    console.log(contract);\n    console.log(contract.getAbi().getEndpoint(\"getNftPrice\"));\n    let response = await contract.runQuery(provider, {\n      func: new ContractFunction(\"getNftPrice\"),\n      args: [],\n      caller: new Address(\n        \"erd16ht3gyfw6xfcm9s89swczscas85y882am3atdar487mz3dzy5uhszny4gn\"\n      ),\n    });\n    let mintx = getMintTransaction(\n      \"erd1qqqqqqqqqqqqqpgqdx22q4lg64w20fsscll2w5z5lc08whac5uhslwwwp7\",\n      14000000,\n      2\n    );\n    const { signer, LoggedUserAccount } = await publicEndpointSetup(provider);\n    await commonTxOperations(mintx, LoggedUserAccount, signer, provider);\n    await console.log(LoggedUserAccount);\n    return contract;\n  };\n\n  console.log(abi());\n\n  return (\n    <div\n      className=\"d-flex flex-fill align-items-center  rounded-pill\"\n      style={{\n        height: \"70vh\",\n        paddingTop: \"25%\",\n        marginTop: \"15%\",\n        marginRight: \"5%\",\n        marginLeft: \"5%\",\n        marginBottom: \"15%\",\n        paddingBottom: \"40%\",\n        backgroundColor: \"#2e765e\",\n      }}\n    >\n      <div className=\"row w-100 justify-content-between\">\n        <div className=\"col-12 col-md-8 col-lg-5 mx-auto\">\n          <img\n            src={String(logo)}\n            alt=\"Logo\"\n            className=\"rounded mx-auto d-block\"\n            style={{\n              width: \"370px\",\n              height: \"320px\",\n              marginTop: \"30%\",\n              padding: \"25px\",\n            }}\n          />\n\n          <div\n            className=\"card shadow-sm rounded-pill border border-warning p-4\"\n            style={{\n              width: \"100%\",\n              height: \"60%\",\n            }}\n          >\n            <div className=\"card-body text-center\">\n              <img\n                src={String(gif1)}\n                className=\"rounded border rounded-circle mx-auto d-block\"\n                style={{\n                  width: \"50%\",\n                  height: \"50%\",\n                  border: \"10px\",\n                  margin: \"2%\",\n                }}\n                alt=\"gif\"\n              ></img>\n              <h2 className=\"mb-3\" data-testid=\"title\">\n                {dAppName}\n              </h2>\n              <div className=\"container \">\n                {address ? (\n                  <button\n                    className=\"btn btn-lg mt-3 text-white\"\n                    style={{\n                      margin: \"10px\",\n                      backgroundColor: \"#00665d\",\n                    }}\n                    onClick={() => add()}\n                  >\n                    +\n                  </button>\n                ) : null}\n                {address ? <h5>{count}</h5> : null}\n                {address ? (\n                  <button\n                    className=\"btn btn-lg mt-3 text-white\"\n                    style={{\n                      margin: \"5px\",\n                      backgroundColor: \"#d2b48c\",\n                    }}\n                    onClick={() => add(-1)}\n                  >\n                    -\n                  </button>\n                ) : null}\n              </div>\n              {address ? (\n                <button\n                  className=\"btn btn-lg mt-3 text-white golden\"\n                  style={{\n                    margin: \"5px\",\n\n                    backgroundColor: \"#d2b48c\",\n                  }}\n                >\n                  Mint\n                </button>\n              ) : null}{\" \"}\n              {address ? (\n                <button\n                  className=\"btn btn-lg mt-3 text-white\"\n                  style={{\n                    margin: \"5px\",\n                    backgroundColor: \"#00665d\",\n                  }}\n                  onClick={() => {\n                    window.open(\n                      \"https://deadrare.io/collection/ZEB-9k4d2j\",\n                      \"_blank\"\n                    );\n                  }}\n                >\n                  DeadRare\n                </button>\n              ) : null}\n              <br />\n              <br />\n              <p className=\"mb-3\">\n                This is the official N4P foresters NFTs Minting Site\n                <br /> Login using your Elrond wallet.\n              </p>\n              {!address ? (\n                <Link\n                  to={routeNames.unlock}\n                  className=\"btn btn-primary mt-3 text-white golden\"\n                  data-testid=\"loginBtn\"\n                >\n                  Login\n                </Link>\n              ) : null}\n            </div>\n          </div>\n\n          <p\n            style={{\n              padding: \"15px\",\n              textAlign: \"center\",\n              alignContent: \"center\",\n              color: \"white\",\n            }}\n          >\n            We have set the gas limit to 1000 for the contract to successfully\n            mint your NFT. We recommend that you do not lower the gas limit.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}